/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.mollie.mollie;

import static com.mollie.mollie.operations.Operations.AsyncRequestOperation;

import com.mollie.mollie.models.operations.GetClientRequest;
import com.mollie.mollie.models.operations.ListClientsRequest;
import com.mollie.mollie.models.operations.async.GetClientRequestBuilder;
import com.mollie.mollie.models.operations.async.GetClientResponse;
import com.mollie.mollie.models.operations.async.ListClientsRequestBuilder;
import com.mollie.mollie.models.operations.async.ListClientsResponse;
import com.mollie.mollie.operations.GetClient;
import com.mollie.mollie.operations.ListClients;
import com.mollie.mollie.utils.Options;
import java.lang.Long;
import java.lang.String;
import java.util.Optional;
import java.util.concurrent.CompletableFuture;
import org.openapitools.jackson.nullable.JsonNullable;


public class AsyncClients {
    private final SDKConfiguration sdkConfiguration;
    private final Clients syncSDK;

    AsyncClients(Clients syncSDK, SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
        this.syncSDK = syncSDK;
    }

    /**
     * Switches to the sync SDK.
     * 
     * @return The sync SDK
     */
    public Clients sync() {
        return syncSDK;
    }


    /**
     * List clients
     * 
     * <p>Retrieve a list of all clients linked to your account.
     * 
     * <p>The results are paginated.
     * 
     * @return The async call builder
     */
    public ListClientsRequestBuilder list() {
        return new ListClientsRequestBuilder(sdkConfiguration);
    }

    /**
     * List clients
     * 
     * <p>Retrieve a list of all clients linked to your account.
     * 
     * <p>The results are paginated.
     * 
     * @return CompletableFuture&lt;ListClientsResponse&gt; - The async response
     */
    public CompletableFuture<ListClientsResponse> listDirect() {
        return list(
                JsonNullable.undefined(), Optional.empty(), JsonNullable.undefined(),
                Optional.empty());
    }

    /**
     * List clients
     * 
     * <p>Retrieve a list of all clients linked to your account.
     * 
     * <p>The results are paginated.
     * 
     * @param embed This endpoint allows embedding related API items by appending the
     *         following values via the `embed` query string parameter.
     *         
     *         * `organization`: Include the organization of the client. Available for `signuplink` partners, or for `oauth`
     *           partners with the `organizations.read` scope.
     *         * `onboarding`: Include the onboarding status of the client. Available for `signuplink` partners, or for `oauth`
     *           partners with the `onboarding.read` scope.
     *         * `capabilities`: Include the [capabilities](list-capabilities) of the client organization.
     *           Available for *oauth* partners with the `onboarding.read` scope.
     * @param from Provide an ID to start the result set from the item with the given ID and onwards. This allows you to paginate the
     *         result set.
     * @param limit The maximum number of items to return. Defaults to 50 items.
     * @param options additional options
     * @return CompletableFuture&lt;ListClientsResponse&gt; - The async response
     */
    public CompletableFuture<ListClientsResponse> list(
            JsonNullable<String> embed, Optional<String> from,
            JsonNullable<Long> limit, Optional<Options> options) {
        ListClientsRequest request =
            ListClientsRequest
                .builder()
                .embed(embed)
                .from(from)
                .limit(limit)
                .build();
        AsyncRequestOperation<ListClientsRequest, ListClientsResponse> operation
              = new ListClients.Async(sdkConfiguration, options, sdkConfiguration.retryScheduler());
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Get client
     * 
     * <p>Retrieve a single client by its ID.
     * 
     * @return The async call builder
     */
    public GetClientRequestBuilder get() {
        return new GetClientRequestBuilder(sdkConfiguration);
    }

    /**
     * Get client
     * 
     * <p>Retrieve a single client by its ID.
     * 
     * @param id Provide the ID of the item you want to perform this operation on.
     * @return CompletableFuture&lt;GetClientResponse&gt; - The async response
     */
    public CompletableFuture<GetClientResponse> get(String id) {
        return get(id, JsonNullable.undefined(), Optional.empty());
    }

    /**
     * Get client
     * 
     * <p>Retrieve a single client by its ID.
     * 
     * @param id Provide the ID of the item you want to perform this operation on.
     * @param embed This endpoint allows embedding related API items by appending the following values via the `embed` query string
     *         parameter.
     *         
     *         * `organization`: Include the organization of the client. Available for `signuplink` partners, or for `oauth`
     *           partners with the `organizations.read` scope.
     *         * `onboarding`: Include the onboarding status of the client. Available for `signuplink` partners, or for `oauth`
     *           partners with the `onboarding.read` scope.
     *         * `capabilities`: Include the [capabilities](list-capabilities) of the client organization.
     *           Available for *oauth* partners with the `onboarding.read` scope.
     * @param options additional options
     * @return CompletableFuture&lt;GetClientResponse&gt; - The async response
     */
    public CompletableFuture<GetClientResponse> get(
            String id, JsonNullable<String> embed,
            Optional<Options> options) {
        GetClientRequest request =
            GetClientRequest
                .builder()
                .id(id)
                .embed(embed)
                .build();
        AsyncRequestOperation<GetClientRequest, GetClientResponse> operation
              = new GetClient.Async(sdkConfiguration, options, sdkConfiguration.retryScheduler());
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }

}
