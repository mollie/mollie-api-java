/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.mollie.mollie;

import static com.mollie.mollie.operations.Operations.RequestOperation;

import com.mollie.mollie.models.operations.GetTerminalRequest;
import com.mollie.mollie.models.operations.GetTerminalRequestBuilder;
import com.mollie.mollie.models.operations.GetTerminalResponse;
import com.mollie.mollie.models.operations.ListTerminalsQueryParamSort;
import com.mollie.mollie.models.operations.ListTerminalsRequest;
import com.mollie.mollie.models.operations.ListTerminalsRequestBuilder;
import com.mollie.mollie.models.operations.ListTerminalsResponse;
import com.mollie.mollie.operations.GetTerminal;
import com.mollie.mollie.operations.ListTerminals;
import com.mollie.mollie.utils.Options;
import java.lang.Boolean;
import java.lang.Exception;
import java.lang.Long;
import java.lang.String;
import java.util.Optional;
import org.openapitools.jackson.nullable.JsonNullable;


public class Terminals {
    private final SDKConfiguration sdkConfiguration;

    Terminals(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
    }

    /**
     * List terminals
     * 
     * <p>Retrieve a list of all physical point-of-sale devices.
     * 
     * <p>The results are paginated.
     * 
     * @return The call builder
     */
    public ListTerminalsRequestBuilder list() {
        return new ListTerminalsRequestBuilder(sdkConfiguration);
    }

    /**
     * List terminals
     * 
     * <p>Retrieve a list of all physical point-of-sale devices.
     * 
     * <p>The results are paginated.
     * 
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public ListTerminalsResponse listDirect() throws Exception {
        return list(Optional.empty(), JsonNullable.undefined(), JsonNullable.undefined(),
            JsonNullable.undefined(), Optional.empty());
    }

    /**
     * List terminals
     * 
     * <p>Retrieve a list of all physical point-of-sale devices.
     * 
     * <p>The results are paginated.
     * 
     * @param from Provide an ID to start the result set from the item with the given ID and onwards. This allows you to paginate the
     *         result set.
     * @param limit The maximum number of items to return. Defaults to 50 items.
     * @param sort Used for setting the direction of the result set. Defaults to descending order, meaning the results are ordered from
     *         newest to oldest.
     * @param testmode Most API credentials are specifically created for either live mode or test mode. In those cases the `testmode` query
     *         parameter can be omitted. For organization-level credentials such as OAuth access tokens, you can enable test mode by
     *         setting the `testmode` query parameter to `true`.
     *         
     *         Test entities cannot be retrieved when the endpoint is set to live mode, and vice versa.
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public ListTerminalsResponse list(
            Optional<String> from, JsonNullable<Long> limit,
            JsonNullable<? extends ListTerminalsQueryParamSort> sort, JsonNullable<Boolean> testmode,
            Optional<Options> options) throws Exception {
        ListTerminalsRequest request =
            ListTerminalsRequest
                .builder()
                .from(from)
                .limit(limit)
                .sort(sort)
                .testmode(testmode)
                .build();
        RequestOperation<ListTerminalsRequest, ListTerminalsResponse> operation
              = new ListTerminals.Sync(sdkConfiguration, options);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Get terminal
     * 
     * <p>Retrieve a single terminal by its ID.
     * 
     * @return The call builder
     */
    public GetTerminalRequestBuilder get() {
        return new GetTerminalRequestBuilder(sdkConfiguration);
    }

    /**
     * Get terminal
     * 
     * <p>Retrieve a single terminal by its ID.
     * 
     * @param terminalId Provide the ID of the related terminal.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public GetTerminalResponse get(String terminalId) throws Exception {
        return get(terminalId, JsonNullable.undefined(), Optional.empty());
    }

    /**
     * Get terminal
     * 
     * <p>Retrieve a single terminal by its ID.
     * 
     * @param terminalId Provide the ID of the related terminal.
     * @param testmode Most API credentials are specifically created for either live mode or test mode. In those cases the `testmode` query
     *         parameter can be omitted. For organization-level credentials such as OAuth access tokens, you can enable test mode by
     *         setting the `testmode` query parameter to `true`.
     *         
     *         Test entities cannot be retrieved when the endpoint is set to live mode, and vice versa.
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public GetTerminalResponse get(
            String terminalId, JsonNullable<Boolean> testmode,
            Optional<Options> options) throws Exception {
        GetTerminalRequest request =
            GetTerminalRequest
                .builder()
                .terminalId(terminalId)
                .testmode(testmode)
                .build();
        RequestOperation<GetTerminalRequest, GetTerminalResponse> operation
              = new GetTerminal.Sync(sdkConfiguration, options);
        return operation.handleResponse(operation.doRequest(request));
    }

}
