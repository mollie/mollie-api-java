/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.mollie.mollie;

import static com.mollie.mollie.operations.Operations.RequestOperation;

import com.mollie.mollie.models.operations.GetInvoiceRequest;
import com.mollie.mollie.models.operations.GetInvoiceRequestBuilder;
import com.mollie.mollie.models.operations.GetInvoiceResponse;
import com.mollie.mollie.models.operations.ListInvoicesRequest;
import com.mollie.mollie.models.operations.ListInvoicesRequestBuilder;
import com.mollie.mollie.models.operations.ListInvoicesResponse;
import com.mollie.mollie.operations.GetInvoiceOperation;
import com.mollie.mollie.operations.ListInvoicesOperation;
import com.mollie.mollie.utils.Options;
import java.lang.Exception;
import java.lang.String;
import java.util.List;
import java.util.Optional;


public class Invoices {
    private final SDKConfiguration sdkConfiguration;

    Invoices(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
    }
    /**
     * List invoices
     * 
     * <p>Retrieve a list of all your invoices, optionally filtered by year or by invoice reference.
     * 
     * <p>The results are paginated.
     * 
     * <p>&gt; ðŸ”‘ Access with
     * &gt;
     * &gt; [Access token with **invoices.read**](/reference/authentication)
     * 
     * @return The call builder
     */
    public ListInvoicesRequestBuilder list() {
        return new ListInvoicesRequestBuilder(sdkConfiguration);
    }

    /**
     * List invoices
     * 
     * <p>Retrieve a list of all your invoices, optionally filtered by year or by invoice reference.
     * 
     * <p>The results are paginated.
     * 
     * <p>&gt; ðŸ”‘ Access with
     * &gt;
     * &gt; [Access token with **invoices.read**](/reference/authentication)
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public ListInvoicesResponse list(ListInvoicesRequest request) throws Exception {
        return list(request, Optional.empty());
    }

    /**
     * List invoices
     * 
     * <p>Retrieve a list of all your invoices, optionally filtered by year or by invoice reference.
     * 
     * <p>The results are paginated.
     * 
     * <p>&gt; ðŸ”‘ Access with
     * &gt;
     * &gt; [Access token with **invoices.read**](/reference/authentication)
     * 
     * @param request The request object containing all the parameters for the API call.
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public ListInvoicesResponse list(
            ListInvoicesRequest request,
            Optional<Options> options) throws Exception {
        RequestOperation<ListInvoicesRequest, ListInvoicesResponse> operation
              = new ListInvoicesOperation(
                sdkConfiguration,
                options);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Get invoice
     * 
     * <p>Retrieve a single invoice by its ID.
     * 
     * <p>If you want to retrieve the details of an invoice by its invoice number, call the [List invoices](list-invoices) endpoint with the `reference` parameter.
     * 
     * <p>&gt; ðŸ”‘ Access with
     * &gt;
     * &gt; [Access token with **invoices.read**](/reference/authentication)
     * 
     * @return The call builder
     */
    public GetInvoiceRequestBuilder get() {
        return new GetInvoiceRequestBuilder(sdkConfiguration);
    }

    /**
     * Get invoice
     * 
     * <p>Retrieve a single invoice by its ID.
     * 
     * <p>If you want to retrieve the details of an invoice by its invoice number, call the [List invoices](list-invoices) endpoint with the `reference` parameter.
     * 
     * <p>&gt; ðŸ”‘ Access with
     * &gt;
     * &gt; [Access token with **invoices.read**](/reference/authentication)
     * 
     * @param id Provide the ID of the item you want to perform this operation on.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public GetInvoiceResponse get(String id) throws Exception {
        return get(id, Optional.empty());
    }

    /**
     * Get invoice
     * 
     * <p>Retrieve a single invoice by its ID.
     * 
     * <p>If you want to retrieve the details of an invoice by its invoice number, call the [List invoices](list-invoices) endpoint with the `reference` parameter.
     * 
     * <p>&gt; ðŸ”‘ Access with
     * &gt;
     * &gt; [Access token with **invoices.read**](/reference/authentication)
     * 
     * @param id Provide the ID of the item you want to perform this operation on.
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public GetInvoiceResponse get(
            String id,
            Optional<Options> options) throws Exception {
        GetInvoiceRequest request =
            GetInvoiceRequest
                .builder()
                .id(id)
                .build();
        RequestOperation<GetInvoiceRequest, GetInvoiceResponse> operation
              = new GetInvoiceOperation(
                sdkConfiguration,
                options);
        return operation.handleResponse(operation.doRequest(request));
    }

}
