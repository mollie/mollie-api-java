/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.mollie.mollie.models.components;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.mollie.mollie.utils.Utils;
import java.lang.Override;
import java.lang.String;
import java.lang.SuppressWarnings;
import org.openapitools.jackson.nullable.JsonNullable;

/**
 * CaptureResponseLinks
 * 
 * <p>An object with several relevant URLs. Every URL object will contain an `href` and a `type` field.
 */
public class CaptureResponseLinks {
    /**
     * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
     */
    @JsonProperty("self")
    private Url self;

    /**
     * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
     */
    @JsonProperty("payment")
    private Url payment;

    /**
     * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("settlement")
    private JsonNullable<? extends UrlNullable> settlement;

    /**
     * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("shipment")
    private JsonNullable<? extends UrlNullable> shipment;

    /**
     * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
     */
    @JsonProperty("documentation")
    private Url documentation;

    @JsonCreator
    public CaptureResponseLinks(
            @JsonProperty("self") Url self,
            @JsonProperty("payment") Url payment,
            @JsonProperty("settlement") JsonNullable<? extends UrlNullable> settlement,
            @JsonProperty("shipment") JsonNullable<? extends UrlNullable> shipment,
            @JsonProperty("documentation") Url documentation) {
        Utils.checkNotNull(self, "self");
        Utils.checkNotNull(payment, "payment");
        Utils.checkNotNull(settlement, "settlement");
        Utils.checkNotNull(shipment, "shipment");
        Utils.checkNotNull(documentation, "documentation");
        this.self = self;
        this.payment = payment;
        this.settlement = settlement;
        this.shipment = shipment;
        this.documentation = documentation;
    }
    
    public CaptureResponseLinks(
            Url self,
            Url payment,
            Url documentation) {
        this(self, payment, JsonNullable.undefined(),
            JsonNullable.undefined(), documentation);
    }

    /**
     * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
     */
    @JsonIgnore
    public Url self() {
        return self;
    }

    /**
     * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
     */
    @JsonIgnore
    public Url payment() {
        return payment;
    }

    /**
     * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public JsonNullable<UrlNullable> settlement() {
        return (JsonNullable<UrlNullable>) settlement;
    }

    /**
     * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public JsonNullable<UrlNullable> shipment() {
        return (JsonNullable<UrlNullable>) shipment;
    }

    /**
     * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
     */
    @JsonIgnore
    public Url documentation() {
        return documentation;
    }

    public static Builder builder() {
        return new Builder();
    }


    /**
     * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
     */
    public CaptureResponseLinks withSelf(Url self) {
        Utils.checkNotNull(self, "self");
        this.self = self;
        return this;
    }

    /**
     * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
     */
    public CaptureResponseLinks withPayment(Url payment) {
        Utils.checkNotNull(payment, "payment");
        this.payment = payment;
        return this;
    }

    /**
     * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
     */
    public CaptureResponseLinks withSettlement(UrlNullable settlement) {
        Utils.checkNotNull(settlement, "settlement");
        this.settlement = JsonNullable.of(settlement);
        return this;
    }

    /**
     * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
     */
    public CaptureResponseLinks withSettlement(JsonNullable<? extends UrlNullable> settlement) {
        Utils.checkNotNull(settlement, "settlement");
        this.settlement = settlement;
        return this;
    }

    /**
     * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
     */
    public CaptureResponseLinks withShipment(UrlNullable shipment) {
        Utils.checkNotNull(shipment, "shipment");
        this.shipment = JsonNullable.of(shipment);
        return this;
    }

    /**
     * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
     */
    public CaptureResponseLinks withShipment(JsonNullable<? extends UrlNullable> shipment) {
        Utils.checkNotNull(shipment, "shipment");
        this.shipment = shipment;
        return this;
    }

    /**
     * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
     */
    public CaptureResponseLinks withDocumentation(Url documentation) {
        Utils.checkNotNull(documentation, "documentation");
        this.documentation = documentation;
        return this;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        CaptureResponseLinks other = (CaptureResponseLinks) o;
        return 
            Utils.enhancedDeepEquals(this.self, other.self) &&
            Utils.enhancedDeepEquals(this.payment, other.payment) &&
            Utils.enhancedDeepEquals(this.settlement, other.settlement) &&
            Utils.enhancedDeepEquals(this.shipment, other.shipment) &&
            Utils.enhancedDeepEquals(this.documentation, other.documentation);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            self, payment, settlement,
            shipment, documentation);
    }
    
    @Override
    public String toString() {
        return Utils.toString(CaptureResponseLinks.class,
                "self", self,
                "payment", payment,
                "settlement", settlement,
                "shipment", shipment,
                "documentation", documentation);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private Url self;

        private Url payment;

        private JsonNullable<? extends UrlNullable> settlement = JsonNullable.undefined();

        private JsonNullable<? extends UrlNullable> shipment = JsonNullable.undefined();

        private Url documentation;

        private Builder() {
          // force use of static builder() method
        }


        /**
         * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
         */
        public Builder self(Url self) {
            Utils.checkNotNull(self, "self");
            this.self = self;
            return this;
        }


        /**
         * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
         */
        public Builder payment(Url payment) {
            Utils.checkNotNull(payment, "payment");
            this.payment = payment;
            return this;
        }


        /**
         * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
         */
        public Builder settlement(UrlNullable settlement) {
            Utils.checkNotNull(settlement, "settlement");
            this.settlement = JsonNullable.of(settlement);
            return this;
        }

        /**
         * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
         */
        public Builder settlement(JsonNullable<? extends UrlNullable> settlement) {
            Utils.checkNotNull(settlement, "settlement");
            this.settlement = settlement;
            return this;
        }


        /**
         * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
         */
        public Builder shipment(UrlNullable shipment) {
            Utils.checkNotNull(shipment, "shipment");
            this.shipment = JsonNullable.of(shipment);
            return this;
        }

        /**
         * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
         */
        public Builder shipment(JsonNullable<? extends UrlNullable> shipment) {
            Utils.checkNotNull(shipment, "shipment");
            this.shipment = shipment;
            return this;
        }


        /**
         * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
         */
        public Builder documentation(Url documentation) {
            Utils.checkNotNull(documentation, "documentation");
            this.documentation = documentation;
            return this;
        }

        public CaptureResponseLinks build() {

            return new CaptureResponseLinks(
                self, payment, settlement,
                shipment, documentation);
        }

    }
}
