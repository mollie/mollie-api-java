/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.mollie.mollie.models.components;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.mollie.mollie.utils.Utils;
import java.lang.Override;
import java.lang.String;
import org.openapitools.jackson.nullable.JsonNullable;


public class SalesInvoicePaymentDetailsResponse {
    /**
     * The way through which the invoice is to be set to paid.
     */
    @JsonProperty("source")
    private SalesInvoicePaymentDetailsResponseSource source;

    /**
     * A reference to the payment the sales invoice is paid by. Required for `source` values `payment-link` and
     * `payment`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sourceReference")
    private JsonNullable<String> sourceReference;

    @JsonCreator
    public SalesInvoicePaymentDetailsResponse(
            @JsonProperty("source") SalesInvoicePaymentDetailsResponseSource source,
            @JsonProperty("sourceReference") JsonNullable<String> sourceReference) {
        Utils.checkNotNull(source, "source");
        Utils.checkNotNull(sourceReference, "sourceReference");
        this.source = source;
        this.sourceReference = sourceReference;
    }
    
    public SalesInvoicePaymentDetailsResponse(
            SalesInvoicePaymentDetailsResponseSource source) {
        this(source, JsonNullable.undefined());
    }

    /**
     * The way through which the invoice is to be set to paid.
     */
    @JsonIgnore
    public SalesInvoicePaymentDetailsResponseSource source() {
        return source;
    }

    /**
     * A reference to the payment the sales invoice is paid by. Required for `source` values `payment-link` and
     * `payment`.
     */
    @JsonIgnore
    public JsonNullable<String> sourceReference() {
        return sourceReference;
    }

    public static Builder builder() {
        return new Builder();
    }


    /**
     * The way through which the invoice is to be set to paid.
     */
    public SalesInvoicePaymentDetailsResponse withSource(SalesInvoicePaymentDetailsResponseSource source) {
        Utils.checkNotNull(source, "source");
        this.source = source;
        return this;
    }

    /**
     * A reference to the payment the sales invoice is paid by. Required for `source` values `payment-link` and
     * `payment`.
     */
    public SalesInvoicePaymentDetailsResponse withSourceReference(String sourceReference) {
        Utils.checkNotNull(sourceReference, "sourceReference");
        this.sourceReference = JsonNullable.of(sourceReference);
        return this;
    }

    /**
     * A reference to the payment the sales invoice is paid by. Required for `source` values `payment-link` and
     * `payment`.
     */
    public SalesInvoicePaymentDetailsResponse withSourceReference(JsonNullable<String> sourceReference) {
        Utils.checkNotNull(sourceReference, "sourceReference");
        this.sourceReference = sourceReference;
        return this;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        SalesInvoicePaymentDetailsResponse other = (SalesInvoicePaymentDetailsResponse) o;
        return 
            Utils.enhancedDeepEquals(this.source, other.source) &&
            Utils.enhancedDeepEquals(this.sourceReference, other.sourceReference);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            source, sourceReference);
    }
    
    @Override
    public String toString() {
        return Utils.toString(SalesInvoicePaymentDetailsResponse.class,
                "source", source,
                "sourceReference", sourceReference);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private SalesInvoicePaymentDetailsResponseSource source;

        private JsonNullable<String> sourceReference = JsonNullable.undefined();

        private Builder() {
          // force use of static builder() method
        }


        /**
         * The way through which the invoice is to be set to paid.
         */
        public Builder source(SalesInvoicePaymentDetailsResponseSource source) {
            Utils.checkNotNull(source, "source");
            this.source = source;
            return this;
        }


        /**
         * A reference to the payment the sales invoice is paid by. Required for `source` values `payment-link` and
         * `payment`.
         */
        public Builder sourceReference(String sourceReference) {
            Utils.checkNotNull(sourceReference, "sourceReference");
            this.sourceReference = JsonNullable.of(sourceReference);
            return this;
        }

        /**
         * A reference to the payment the sales invoice is paid by. Required for `source` values `payment-link` and
         * `payment`.
         */
        public Builder sourceReference(JsonNullable<String> sourceReference) {
            Utils.checkNotNull(sourceReference, "sourceReference");
            this.sourceReference = sourceReference;
            return this;
        }

        public SalesInvoicePaymentDetailsResponse build() {

            return new SalesInvoicePaymentDetailsResponse(
                source, sourceReference);
        }

    }
}
