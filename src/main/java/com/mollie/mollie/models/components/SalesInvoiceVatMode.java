/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.mollie.mollie.models.components;

import com.fasterxml.jackson.annotation.JsonValue;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;

/**
 * SalesInvoiceVatMode
 * 
 * <p>The VAT mode to use for VAT calculation. `exclusive` mode means we will apply the relevant VAT on top of the
 * price. `inclusive` means the prices you are providing to us already contain the VAT you want to apply.
 */
public enum SalesInvoiceVatMode {
    EXCLUSIVE("exclusive"),
    INCLUSIVE("inclusive");

    @JsonValue
    private final String value;

    SalesInvoiceVatMode(String value) {
        this.value = value;
    }
    
    public String value() {
        return value;
    }
    
    public static Optional<SalesInvoiceVatMode> fromValue(String value) {
        for (SalesInvoiceVatMode o: SalesInvoiceVatMode.values()) {
            if (Objects.deepEquals(o.value, value)) {
                return Optional.of(o);
            }
        }
        return Optional.empty();
    }
}

