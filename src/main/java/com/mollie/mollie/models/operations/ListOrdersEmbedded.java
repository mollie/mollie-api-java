/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */


package com.mollie.mollie.models.operations;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.mollie.mollie.utils.Utils;
import java.lang.Override;
import java.lang.String;
import java.lang.SuppressWarnings;
import java.util.List;
import java.util.Objects;
import java.util.Optional;

public class ListOrdersEmbedded {

    /**
     * An array of order objects. For a complete reference of the order object, refer to the [Get order endpoint](get-order) documentation.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("orders")
    private Optional<? extends List<Orders>> orders;

    @JsonCreator
    public ListOrdersEmbedded(
            @JsonProperty("orders") Optional<? extends List<Orders>> orders) {
        Utils.checkNotNull(orders, "orders");
        this.orders = orders;
    }
    
    public ListOrdersEmbedded() {
        this(Optional.empty());
    }

    /**
     * An array of order objects. For a complete reference of the order object, refer to the [Get order endpoint](get-order) documentation.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<List<Orders>> orders() {
        return (Optional<List<Orders>>) orders;
    }

    public final static Builder builder() {
        return new Builder();
    }

    /**
     * An array of order objects. For a complete reference of the order object, refer to the [Get order endpoint](get-order) documentation.
     */
    public ListOrdersEmbedded withOrders(List<Orders> orders) {
        Utils.checkNotNull(orders, "orders");
        this.orders = Optional.ofNullable(orders);
        return this;
    }

    /**
     * An array of order objects. For a complete reference of the order object, refer to the [Get order endpoint](get-order) documentation.
     */
    public ListOrdersEmbedded withOrders(Optional<? extends List<Orders>> orders) {
        Utils.checkNotNull(orders, "orders");
        this.orders = orders;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ListOrdersEmbedded other = (ListOrdersEmbedded) o;
        return 
            Objects.deepEquals(this.orders, other.orders);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            orders);
    }
    
    @Override
    public String toString() {
        return Utils.toString(ListOrdersEmbedded.class,
                "orders", orders);
    }
    
    public final static class Builder {
 
        private Optional<? extends List<Orders>> orders = Optional.empty();  
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * An array of order objects. For a complete reference of the order object, refer to the [Get order endpoint](get-order) documentation.
         */
        public Builder orders(List<Orders> orders) {
            Utils.checkNotNull(orders, "orders");
            this.orders = Optional.ofNullable(orders);
            return this;
        }

        /**
         * An array of order objects. For a complete reference of the order object, refer to the [Get order endpoint](get-order) documentation.
         */
        public Builder orders(Optional<? extends List<Orders>> orders) {
            Utils.checkNotNull(orders, "orders");
            this.orders = orders;
            return this;
        }
        
        public ListOrdersEmbedded build() {
            return new ListOrdersEmbedded(
                orders);
        }
    }
}

