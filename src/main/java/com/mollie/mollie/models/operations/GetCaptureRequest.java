/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.mollie.mollie.models.operations;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.mollie.mollie.utils.SpeakeasyMetadata;
import com.mollie.mollie.utils.Utils;
import java.lang.Boolean;
import java.lang.Override;
import java.lang.String;
import java.lang.SuppressWarnings;
import java.util.Optional;
import org.openapitools.jackson.nullable.JsonNullable;


public class GetCaptureRequest {
    /**
     * Provide the ID of the related payment.
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=paymentId")
    private String paymentId;

    /**
     * Provide the ID of the related capture.
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=captureId")
    private String captureId;

    /**
     * This endpoint allows you to embed additional resources via the
     * `embed` query string parameter.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=embed")
    private Optional<? extends GetCaptureQueryParamEmbed> embed;

    /**
     * Most API credentials are specifically created for either live mode or test mode. In those cases the `testmode` query
     * parameter can be omitted. For organization-level credentials such as OAuth access tokens, you can enable test mode by
     * setting the `testmode` query parameter to `true`.
     * 
     * <p>Test entities cannot be retrieved when the endpoint is set to live mode, and vice versa.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=testmode")
    private JsonNullable<Boolean> testmode;

    @JsonCreator
    public GetCaptureRequest(
            String paymentId,
            String captureId,
            Optional<? extends GetCaptureQueryParamEmbed> embed,
            JsonNullable<Boolean> testmode) {
        Utils.checkNotNull(paymentId, "paymentId");
        Utils.checkNotNull(captureId, "captureId");
        Utils.checkNotNull(embed, "embed");
        Utils.checkNotNull(testmode, "testmode");
        this.paymentId = paymentId;
        this.captureId = captureId;
        this.embed = embed;
        this.testmode = testmode;
    }
    
    public GetCaptureRequest(
            String paymentId,
            String captureId) {
        this(paymentId, captureId, Optional.empty(),
            JsonNullable.undefined());
    }

    /**
     * Provide the ID of the related payment.
     */
    @JsonIgnore
    public String paymentId() {
        return paymentId;
    }

    /**
     * Provide the ID of the related capture.
     */
    @JsonIgnore
    public String captureId() {
        return captureId;
    }

    /**
     * This endpoint allows you to embed additional resources via the
     * `embed` query string parameter.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<GetCaptureQueryParamEmbed> embed() {
        return (Optional<GetCaptureQueryParamEmbed>) embed;
    }

    /**
     * Most API credentials are specifically created for either live mode or test mode. In those cases the `testmode` query
     * parameter can be omitted. For organization-level credentials such as OAuth access tokens, you can enable test mode by
     * setting the `testmode` query parameter to `true`.
     * 
     * <p>Test entities cannot be retrieved when the endpoint is set to live mode, and vice versa.
     */
    @JsonIgnore
    public JsonNullable<Boolean> testmode() {
        return testmode;
    }

    public static Builder builder() {
        return new Builder();
    }


    /**
     * Provide the ID of the related payment.
     */
    public GetCaptureRequest withPaymentId(String paymentId) {
        Utils.checkNotNull(paymentId, "paymentId");
        this.paymentId = paymentId;
        return this;
    }

    /**
     * Provide the ID of the related capture.
     */
    public GetCaptureRequest withCaptureId(String captureId) {
        Utils.checkNotNull(captureId, "captureId");
        this.captureId = captureId;
        return this;
    }

    /**
     * This endpoint allows you to embed additional resources via the
     * `embed` query string parameter.
     */
    public GetCaptureRequest withEmbed(GetCaptureQueryParamEmbed embed) {
        Utils.checkNotNull(embed, "embed");
        this.embed = Optional.ofNullable(embed);
        return this;
    }


    /**
     * This endpoint allows you to embed additional resources via the
     * `embed` query string parameter.
     */
    public GetCaptureRequest withEmbed(Optional<? extends GetCaptureQueryParamEmbed> embed) {
        Utils.checkNotNull(embed, "embed");
        this.embed = embed;
        return this;
    }

    /**
     * Most API credentials are specifically created for either live mode or test mode. In those cases the `testmode` query
     * parameter can be omitted. For organization-level credentials such as OAuth access tokens, you can enable test mode by
     * setting the `testmode` query parameter to `true`.
     * 
     * <p>Test entities cannot be retrieved when the endpoint is set to live mode, and vice versa.
     */
    public GetCaptureRequest withTestmode(boolean testmode) {
        Utils.checkNotNull(testmode, "testmode");
        this.testmode = JsonNullable.of(testmode);
        return this;
    }

    /**
     * Most API credentials are specifically created for either live mode or test mode. In those cases the `testmode` query
     * parameter can be omitted. For organization-level credentials such as OAuth access tokens, you can enable test mode by
     * setting the `testmode` query parameter to `true`.
     * 
     * <p>Test entities cannot be retrieved when the endpoint is set to live mode, and vice versa.
     */
    public GetCaptureRequest withTestmode(JsonNullable<Boolean> testmode) {
        Utils.checkNotNull(testmode, "testmode");
        this.testmode = testmode;
        return this;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        GetCaptureRequest other = (GetCaptureRequest) o;
        return 
            Utils.enhancedDeepEquals(this.paymentId, other.paymentId) &&
            Utils.enhancedDeepEquals(this.captureId, other.captureId) &&
            Utils.enhancedDeepEquals(this.embed, other.embed) &&
            Utils.enhancedDeepEquals(this.testmode, other.testmode);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            paymentId, captureId, embed,
            testmode);
    }
    
    @Override
    public String toString() {
        return Utils.toString(GetCaptureRequest.class,
                "paymentId", paymentId,
                "captureId", captureId,
                "embed", embed,
                "testmode", testmode);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private String paymentId;

        private String captureId;

        private Optional<? extends GetCaptureQueryParamEmbed> embed = Optional.empty();

        private JsonNullable<Boolean> testmode = JsonNullable.undefined();

        private Builder() {
          // force use of static builder() method
        }


        /**
         * Provide the ID of the related payment.
         */
        public Builder paymentId(String paymentId) {
            Utils.checkNotNull(paymentId, "paymentId");
            this.paymentId = paymentId;
            return this;
        }


        /**
         * Provide the ID of the related capture.
         */
        public Builder captureId(String captureId) {
            Utils.checkNotNull(captureId, "captureId");
            this.captureId = captureId;
            return this;
        }


        /**
         * This endpoint allows you to embed additional resources via the
         * `embed` query string parameter.
         */
        public Builder embed(GetCaptureQueryParamEmbed embed) {
            Utils.checkNotNull(embed, "embed");
            this.embed = Optional.ofNullable(embed);
            return this;
        }

        /**
         * This endpoint allows you to embed additional resources via the
         * `embed` query string parameter.
         */
        public Builder embed(Optional<? extends GetCaptureQueryParamEmbed> embed) {
            Utils.checkNotNull(embed, "embed");
            this.embed = embed;
            return this;
        }


        /**
         * Most API credentials are specifically created for either live mode or test mode. In those cases the `testmode` query
         * parameter can be omitted. For organization-level credentials such as OAuth access tokens, you can enable test mode by
         * setting the `testmode` query parameter to `true`.
         * 
         * <p>Test entities cannot be retrieved when the endpoint is set to live mode, and vice versa.
         */
        public Builder testmode(boolean testmode) {
            Utils.checkNotNull(testmode, "testmode");
            this.testmode = JsonNullable.of(testmode);
            return this;
        }

        /**
         * Most API credentials are specifically created for either live mode or test mode. In those cases the `testmode` query
         * parameter can be omitted. For organization-level credentials such as OAuth access tokens, you can enable test mode by
         * setting the `testmode` query parameter to `true`.
         * 
         * <p>Test entities cannot be retrieved when the endpoint is set to live mode, and vice versa.
         */
        public Builder testmode(JsonNullable<Boolean> testmode) {
            Utils.checkNotNull(testmode, "testmode");
            this.testmode = testmode;
            return this;
        }

        public GetCaptureRequest build() {

            return new GetCaptureRequest(
                paymentId, captureId, embed,
                testmode);
        }

    }
}
