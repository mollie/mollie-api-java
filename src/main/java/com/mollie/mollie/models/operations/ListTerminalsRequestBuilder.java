/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.mollie.mollie.models.operations;

import static com.mollie.mollie.operations.Operations.RequestOperation;

import com.fasterxml.jackson.core.type.TypeReference;
import com.mollie.mollie.SDKConfiguration;
import com.mollie.mollie.operations.ListTerminals;
import com.mollie.mollie.utils.LazySingletonValue;
import com.mollie.mollie.utils.Options;
import com.mollie.mollie.utils.RetryConfig;
import com.mollie.mollie.utils.Utils;
import java.lang.Boolean;
import java.lang.Exception;
import java.lang.Long;
import java.lang.String;
import java.util.Optional;
import org.openapitools.jackson.nullable.JsonNullable;

public class ListTerminalsRequestBuilder {

    private Optional<String> from = Optional.empty();
    private JsonNullable<Long> limit = Utils.readDefaultOrConstValue(
                            "limit",
                            "50",
                            new TypeReference<JsonNullable<Long>>() {});
    private JsonNullable<? extends ListTerminalsQueryParamSort> sort = Utils.readDefaultOrConstValue(
                            "sort",
                            "\"desc\"",
                            new TypeReference<JsonNullable<? extends ListTerminalsQueryParamSort>>() {});
    private JsonNullable<Boolean> testmode = JsonNullable.undefined();
    private Optional<RetryConfig> retryConfig = Optional.empty();
    private final SDKConfiguration sdkConfiguration;

    public ListTerminalsRequestBuilder(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
    }
                
    public ListTerminalsRequestBuilder from(String from) {
        Utils.checkNotNull(from, "from");
        this.from = Optional.of(from);
        return this;
    }

    public ListTerminalsRequestBuilder from(Optional<String> from) {
        Utils.checkNotNull(from, "from");
        this.from = from;
        return this;
    }

    public ListTerminalsRequestBuilder limit(long limit) {
        Utils.checkNotNull(limit, "limit");
        this.limit = JsonNullable.of(limit);
        return this;
    }

    public ListTerminalsRequestBuilder limit(JsonNullable<Long> limit) {
        Utils.checkNotNull(limit, "limit");
        this.limit = limit;
        return this;
    }

    public ListTerminalsRequestBuilder sort(ListTerminalsQueryParamSort sort) {
        Utils.checkNotNull(sort, "sort");
        this.sort = JsonNullable.of(sort);
        return this;
    }

    public ListTerminalsRequestBuilder sort(JsonNullable<? extends ListTerminalsQueryParamSort> sort) {
        Utils.checkNotNull(sort, "sort");
        this.sort = sort;
        return this;
    }

    public ListTerminalsRequestBuilder testmode(boolean testmode) {
        Utils.checkNotNull(testmode, "testmode");
        this.testmode = JsonNullable.of(testmode);
        return this;
    }

    public ListTerminalsRequestBuilder testmode(JsonNullable<Boolean> testmode) {
        Utils.checkNotNull(testmode, "testmode");
        this.testmode = testmode;
        return this;
    }
                
    public ListTerminalsRequestBuilder retryConfig(RetryConfig retryConfig) {
        Utils.checkNotNull(retryConfig, "retryConfig");
        this.retryConfig = Optional.of(retryConfig);
        return this;
    }

    public ListTerminalsRequestBuilder retryConfig(Optional<RetryConfig> retryConfig) {
        Utils.checkNotNull(retryConfig, "retryConfig");
        this.retryConfig = retryConfig;
        return this;
    }


    private ListTerminalsRequest buildRequest() {
        if (limit == null) {
            limit = _SINGLETON_VALUE_Limit.value();
        }
        if (sort == null) {
            sort = _SINGLETON_VALUE_Sort.value();
        }

        ListTerminalsRequest request = new ListTerminalsRequest(from,
            limit,
            sort,
            testmode);

        return request;
    }

    public ListTerminalsResponse call() throws Exception {
        Optional<Options> options = Optional.of(Options.builder()
            .retryConfig(retryConfig)
            .build());

        RequestOperation<ListTerminalsRequest, ListTerminalsResponse> operation
              = new ListTerminals.Sync(sdkConfiguration, options);
        ListTerminalsRequest request = buildRequest();

        return operation.handleResponse(operation.doRequest(request));
    }

    private static final LazySingletonValue<JsonNullable<Long>> _SINGLETON_VALUE_Limit =
            new LazySingletonValue<>(
                    "limit",
                    "50",
                    new TypeReference<JsonNullable<Long>>() {});

    private static final LazySingletonValue<JsonNullable<? extends ListTerminalsQueryParamSort>> _SINGLETON_VALUE_Sort =
            new LazySingletonValue<>(
                    "sort",
                    "\"desc\"",
                    new TypeReference<JsonNullable<? extends ListTerminalsQueryParamSort>>() {});
}
