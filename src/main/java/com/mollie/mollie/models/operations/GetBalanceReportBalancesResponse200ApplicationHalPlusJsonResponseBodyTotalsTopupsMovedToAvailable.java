/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.mollie.mollie.models.operations;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.mollie.mollie.utils.Utils;
import java.lang.Override;
import java.lang.String;
import java.lang.SuppressWarnings;
import java.util.List;
import java.util.Optional;
import org.openapitools.jackson.nullable.JsonNullable;

public class GetBalanceReportBalancesResponse200ApplicationHalPlusJsonResponseBodyTotalsTopupsMovedToAvailable {

    /**
     * In v2 endpoints, monetary amounts are represented as objects with a `currency` and `value` field.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("amount")
    private Optional<? extends GetBalanceReportBalancesResponse200ApplicationHalPlusJsonResponseBodyTotalsTopupsMovedToAvailableAmount> amount;

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("subtotals")
    private JsonNullable<? extends List<GetBalanceReportBalancesResponse200ApplicationHalPlusJsonResponseBodyTotalsTopupsMovedToAvailableSubtotals>> subtotals;

    @JsonCreator
    public GetBalanceReportBalancesResponse200ApplicationHalPlusJsonResponseBodyTotalsTopupsMovedToAvailable(
            @JsonProperty("amount") Optional<? extends GetBalanceReportBalancesResponse200ApplicationHalPlusJsonResponseBodyTotalsTopupsMovedToAvailableAmount> amount,
            @JsonProperty("subtotals") JsonNullable<? extends List<GetBalanceReportBalancesResponse200ApplicationHalPlusJsonResponseBodyTotalsTopupsMovedToAvailableSubtotals>> subtotals) {
        Utils.checkNotNull(amount, "amount");
        Utils.checkNotNull(subtotals, "subtotals");
        this.amount = amount;
        this.subtotals = subtotals;
    }
    
    public GetBalanceReportBalancesResponse200ApplicationHalPlusJsonResponseBodyTotalsTopupsMovedToAvailable() {
        this(Optional.empty(), JsonNullable.undefined());
    }

    /**
     * In v2 endpoints, monetary amounts are represented as objects with a `currency` and `value` field.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<GetBalanceReportBalancesResponse200ApplicationHalPlusJsonResponseBodyTotalsTopupsMovedToAvailableAmount> amount() {
        return (Optional<GetBalanceReportBalancesResponse200ApplicationHalPlusJsonResponseBodyTotalsTopupsMovedToAvailableAmount>) amount;
    }

    @SuppressWarnings("unchecked")
    @JsonIgnore
    public JsonNullable<List<GetBalanceReportBalancesResponse200ApplicationHalPlusJsonResponseBodyTotalsTopupsMovedToAvailableSubtotals>> subtotals() {
        return (JsonNullable<List<GetBalanceReportBalancesResponse200ApplicationHalPlusJsonResponseBodyTotalsTopupsMovedToAvailableSubtotals>>) subtotals;
    }

    public final static Builder builder() {
        return new Builder();
    }    

    /**
     * In v2 endpoints, monetary amounts are represented as objects with a `currency` and `value` field.
     */
    public GetBalanceReportBalancesResponse200ApplicationHalPlusJsonResponseBodyTotalsTopupsMovedToAvailable withAmount(GetBalanceReportBalancesResponse200ApplicationHalPlusJsonResponseBodyTotalsTopupsMovedToAvailableAmount amount) {
        Utils.checkNotNull(amount, "amount");
        this.amount = Optional.ofNullable(amount);
        return this;
    }

    /**
     * In v2 endpoints, monetary amounts are represented as objects with a `currency` and `value` field.
     */
    public GetBalanceReportBalancesResponse200ApplicationHalPlusJsonResponseBodyTotalsTopupsMovedToAvailable withAmount(Optional<? extends GetBalanceReportBalancesResponse200ApplicationHalPlusJsonResponseBodyTotalsTopupsMovedToAvailableAmount> amount) {
        Utils.checkNotNull(amount, "amount");
        this.amount = amount;
        return this;
    }

    public GetBalanceReportBalancesResponse200ApplicationHalPlusJsonResponseBodyTotalsTopupsMovedToAvailable withSubtotals(List<GetBalanceReportBalancesResponse200ApplicationHalPlusJsonResponseBodyTotalsTopupsMovedToAvailableSubtotals> subtotals) {
        Utils.checkNotNull(subtotals, "subtotals");
        this.subtotals = JsonNullable.of(subtotals);
        return this;
    }

    public GetBalanceReportBalancesResponse200ApplicationHalPlusJsonResponseBodyTotalsTopupsMovedToAvailable withSubtotals(JsonNullable<? extends List<GetBalanceReportBalancesResponse200ApplicationHalPlusJsonResponseBodyTotalsTopupsMovedToAvailableSubtotals>> subtotals) {
        Utils.checkNotNull(subtotals, "subtotals");
        this.subtotals = subtotals;
        return this;
    }

    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        GetBalanceReportBalancesResponse200ApplicationHalPlusJsonResponseBodyTotalsTopupsMovedToAvailable other = (GetBalanceReportBalancesResponse200ApplicationHalPlusJsonResponseBodyTotalsTopupsMovedToAvailable) o;
        return 
            Utils.enhancedDeepEquals(this.amount, other.amount) &&
            Utils.enhancedDeepEquals(this.subtotals, other.subtotals);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            amount,
            subtotals);
    }
    
    @Override
    public String toString() {
        return Utils.toString(GetBalanceReportBalancesResponse200ApplicationHalPlusJsonResponseBodyTotalsTopupsMovedToAvailable.class,
                "amount", amount,
                "subtotals", subtotals);
    }
    
    public final static class Builder {
 
        private Optional<? extends GetBalanceReportBalancesResponse200ApplicationHalPlusJsonResponseBodyTotalsTopupsMovedToAvailableAmount> amount = Optional.empty();
 
        private JsonNullable<? extends List<GetBalanceReportBalancesResponse200ApplicationHalPlusJsonResponseBodyTotalsTopupsMovedToAvailableSubtotals>> subtotals = JsonNullable.undefined();
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * In v2 endpoints, monetary amounts are represented as objects with a `currency` and `value` field.
         */
        public Builder amount(GetBalanceReportBalancesResponse200ApplicationHalPlusJsonResponseBodyTotalsTopupsMovedToAvailableAmount amount) {
            Utils.checkNotNull(amount, "amount");
            this.amount = Optional.ofNullable(amount);
            return this;
        }

        /**
         * In v2 endpoints, monetary amounts are represented as objects with a `currency` and `value` field.
         */
        public Builder amount(Optional<? extends GetBalanceReportBalancesResponse200ApplicationHalPlusJsonResponseBodyTotalsTopupsMovedToAvailableAmount> amount) {
            Utils.checkNotNull(amount, "amount");
            this.amount = amount;
            return this;
        }

        public Builder subtotals(List<GetBalanceReportBalancesResponse200ApplicationHalPlusJsonResponseBodyTotalsTopupsMovedToAvailableSubtotals> subtotals) {
            Utils.checkNotNull(subtotals, "subtotals");
            this.subtotals = JsonNullable.of(subtotals);
            return this;
        }

        public Builder subtotals(JsonNullable<? extends List<GetBalanceReportBalancesResponse200ApplicationHalPlusJsonResponseBodyTotalsTopupsMovedToAvailableSubtotals>> subtotals) {
            Utils.checkNotNull(subtotals, "subtotals");
            this.subtotals = subtotals;
            return this;
        }
        
        public GetBalanceReportBalancesResponse200ApplicationHalPlusJsonResponseBodyTotalsTopupsMovedToAvailable build() {
            return new GetBalanceReportBalancesResponse200ApplicationHalPlusJsonResponseBodyTotalsTopupsMovedToAvailable(
                amount,
                subtotals);
        }
    }
}
