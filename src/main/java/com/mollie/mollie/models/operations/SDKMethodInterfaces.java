/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

package com.mollie.mollie.models.operations;

import java.lang.Boolean;
import java.lang.Exception;
import java.lang.Long;
import java.lang.Object;
import java.lang.String;
import java.util.Optional;
import org.openapitools.jackson.nullable.JsonNullable;

public class SDKMethodInterfaces {


    public interface MethodCallListBalances {
        ListBalancesResponse list(
            JsonNullable<String> currency,
            Optional<String> from,
            JsonNullable<Long> limit,
            JsonNullable<Boolean> testmode) throws Exception;
    }


    public interface MethodCallGetBalance {
        GetBalanceResponse get(
            String id,
            JsonNullable<Boolean> testmode) throws Exception;
    }


    public interface MethodCallGetPrimaryBalance {
        GetPrimaryBalanceResponse getPrimaryDirect() throws Exception;
    }


    public interface MethodCallGetBalanceReport {
        GetBalanceReportResponse getReport(
            GetBalanceReportRequest request) throws Exception;
    }


    public interface MethodCallListBalanceTransactions {
        ListBalanceTransactionsResponse listTransactions(
            String balanceId,
            Optional<String> from,
            JsonNullable<Long> limit,
            JsonNullable<Boolean> testmode) throws Exception;
    }


    public interface MethodCallListSettlements {
        ListSettlementsResponse list(
            Optional<String> from,
            JsonNullable<Long> limit,
            JsonNullable<String> balanceId) throws Exception;
    }


    public interface MethodCallGetSettlement {
        GetSettlementResponse get(
            String id) throws Exception;
    }


    public interface MethodCallGetOpenSettlement {
        GetOpenSettlementResponse getOpenDirect() throws Exception;
    }


    public interface MethodCallGetNextSettlement {
        GetNextSettlementResponse getNextDirect() throws Exception;
    }


    public interface MethodCallGetSettlementPayments {
        GetSettlementPaymentsResponse getPayments(
            String settlementId) throws Exception;
    }


    public interface MethodCallGetSettlementCaptures {
        GetSettlementCapturesResponse getCaptures(
            String settlementId) throws Exception;
    }


    public interface MethodCallGetSettlementRefunds {
        GetSettlementRefundsResponse getRefunds(
            String settlementId) throws Exception;
    }


    public interface MethodCallGetSettlementChargebacks {
        GetSettlementChargebacksResponse getChargebacks(
            String settlementId) throws Exception;
    }


    public interface MethodCallListInvoices {
        ListInvoicesResponse list(
            JsonNullable<String> reference,
            JsonNullable<String> year,
            Optional<String> from,
            JsonNullable<Long> limit) throws Exception;
    }


    public interface MethodCallGetInvoice {
        GetInvoiceResponse get(
            String id) throws Exception;
    }


    public interface MethodCallListPermissions {
        ListPermissionsResponse listDirect() throws Exception;
    }


    public interface MethodCallGetPermission {
        GetPermissionResponse get(
            String id,
            JsonNullable<Boolean> testmode) throws Exception;
    }


    public interface MethodCallGetOrganization {
        GetOrganizationResponse get(
            String id,
            JsonNullable<Boolean> testmode) throws Exception;
    }


    public interface MethodCallGetCurrentOrganization {
        GetCurrentOrganizationResponse getCurrentDirect() throws Exception;
    }


    public interface MethodCallGetPartnerStatus {
        GetPartnerStatusResponse getPartnerStatusDirect() throws Exception;
    }


    public interface MethodCallCreateProfile {
        CreateProfileResponse create(
            CreateProfileRequestBody request) throws Exception;
    }


    public interface MethodCallListProfiles {
        ListProfilesResponse list(
            Optional<String> from,
            JsonNullable<Long> limit) throws Exception;
    }


    public interface MethodCallGetProfile {
        GetProfileResponse get(
            String id,
            JsonNullable<Boolean> testmode) throws Exception;
    }


    public interface MethodCallUpdateProfile {
        UpdateProfileResponse update(
            String id,
            UpdateProfileRequestBody requestBody) throws Exception;
    }


    public interface MethodCallDeleteProfile {
        DeleteProfileResponse delete(
            String id) throws Exception;
    }


    public interface MethodCallGetCurrentProfile {
        GetCurrentProfileResponse getCurrent(
            GetCurrentProfileSecurity security) throws Exception;
    }


    public interface MethodCallGetOnboardingStatus {
        GetOnboardingStatusResponse getDirect() throws Exception;
    }


    public interface MethodCallSubmitOnboardingData {
        SubmitOnboardingDataResponse create(
            Optional<? extends SubmitOnboardingDataRequestBody> request) throws Exception;
    }


    public interface MethodCallListCapabilities {
        ListCapabilitiesResponse listDirect() throws Exception;
    }


    public interface MethodCallListClients {
        ListClientsResponse list(
            JsonNullable<String> embed,
            Optional<String> from,
            JsonNullable<Long> limit) throws Exception;
    }


    public interface MethodCallGetClient {
        GetClientResponse get(
            String id,
            JsonNullable<String> embed) throws Exception;
    }


    public interface MethodCallCreateClientLink {
        CreateClientLinkResponse create(
            Optional<? extends CreateClientLinkRequestBody> request) throws Exception;
    }


    public interface MethodCallCreateOrder {
        CreateOrderResponse create(
            CreateOrderSecurity security,
            JsonNullable<String> embed,
            Optional<? extends CreateOrderRequestBody> requestBody) throws Exception;
    }


    public interface MethodCallListOrders {
        ListOrdersResponse list(
            ListOrdersRequest request,
            ListOrdersSecurity security) throws Exception;
    }


    public interface MethodCallGetOrder {
        GetOrderResponse get(
            GetOrderSecurity security,
            String id,
            JsonNullable<String> embed,
            JsonNullable<Boolean> testmode) throws Exception;
    }


    public interface MethodCallUpdateOrder {
        UpdateOrderResponse update(
            UpdateOrderSecurity security,
            String id,
            Optional<? extends UpdateOrderRequestBody> requestBody) throws Exception;
    }


    public interface MethodCallCancelOrder {
        CancelOrderResponse cancel(
            CancelOrderSecurity security,
            String id,
            JsonNullable<Boolean> testmode) throws Exception;
    }


    public interface MethodCallManageOrderLines {
        ManageOrderLinesResponse manageLines(
            ManageOrderLinesSecurity security,
            String orderId,
            Optional<? extends ManageOrderLinesRequestBody> requestBody) throws Exception;
    }


    public interface MethodCallCancelOrderLines {
        CancelOrderLinesResponse cancelLines(
            CancelOrderLinesSecurity security,
            String orderId,
            Optional<? extends CancelOrderLinesRequestBody> requestBody) throws Exception;
    }


    public interface MethodCallUpdateOrderLine {
        UpdateOrderLineResponse updateLine(
            UpdateOrderLineSecurity security,
            String orderId,
            String id,
            Optional<? extends UpdateOrderLineRequestBody> requestBody) throws Exception;
    }


    public interface MethodCallCreateOrderPayment {
        CreateOrderPaymentResponse createPayment(
            CreateOrderPaymentSecurity security,
            String orderId,
            Optional<? extends Object> requestBody) throws Exception;
    }


    public interface MethodCallCreateShipment {
        CreateShipmentResponse create(
            CreateShipmentSecurity security,
            String orderId,
            Optional<? extends CreateShipmentRequestBody> requestBody) throws Exception;
    }


    public interface MethodCallListShipments {
        ListShipmentsResponse list(
            ListShipmentsSecurity security,
            String orderId,
            Optional<String> from,
            JsonNullable<Long> limit,
            JsonNullable<Boolean> testmode) throws Exception;
    }


    public interface MethodCallGetShipment {
        GetShipmentResponse get(
            GetShipmentSecurity security,
            String orderId,
            String id,
            JsonNullable<Boolean> testmode) throws Exception;
    }


    public interface MethodCallUpdateShipment {
        UpdateShipmentResponse update(
            UpdateShipmentSecurity security,
            String orderId,
            String id,
            JsonNullable<Boolean> testmode,
            Optional<? extends UpdateShipmentRequestBody> requestBody) throws Exception;
    }


    public interface MethodCallCreatePayment {
        CreatePaymentResponse create(
            CreatePaymentSecurity security,
            JsonNullable<String> include,
            Optional<? extends CreatePaymentRequestBody> requestBody) throws Exception;
    }


    public interface MethodCallListPayments {
        ListPaymentsResponse list(
            ListPaymentsSecurity security,
            Optional<String> from,
            JsonNullable<Long> limit,
            JsonNullable<? extends QueryParamSort> sort,
            JsonNullable<Boolean> testmode) throws Exception;
    }


    public interface MethodCallGetPayment {
        GetPaymentResponse get(
            GetPaymentSecurity security,
            String id,
            JsonNullable<String> include,
            JsonNullable<String> embed,
            JsonNullable<Boolean> testmode) throws Exception;
    }


    public interface MethodCallUpdatePayment {
        UpdatePaymentResponse update(
            UpdatePaymentSecurity security,
            String id,
            Optional<? extends UpdatePaymentRequestBody> requestBody) throws Exception;
    }


    public interface MethodCallCancelPayment {
        CancelPaymentResponse cancel(
            CancelPaymentSecurity security,
            String id,
            JsonNullable<Boolean> testmode) throws Exception;
    }


    public interface MethodCallListMethods {
        ListMethodsResponse list(
            ListMethodsRequest request,
            ListMethodsSecurity security) throws Exception;
    }


    public interface MethodCallListAllMethods {
        ListAllMethodsResponse listAll(
            ListAllMethodsSecurity security,
            Optional<String> locale,
            Optional<? extends ListAllMethodsQueryParamAmount> amount,
            JsonNullable<String> include) throws Exception;
    }


    public interface MethodCallGetMethod {
        GetMethodResponse get(
            GetMethodRequest request,
            GetMethodSecurity security) throws Exception;
    }


    public interface MethodCallEnableMethod {
        EnableMethodResponse enableMethod(
            EnableMethodSecurity security,
            String profileId,
            String id) throws Exception;
    }


    public interface MethodCallDisableMethod {
        DisableMethodResponse disableMethod(
            DisableMethodSecurity security,
            String profileId,
            String id) throws Exception;
    }


    public interface MethodCallEnableMethodIssuer {
        EnableMethodIssuerResponse enableMethodIssuer(
            EnableMethodIssuerSecurity security,
            String profileId,
            String methodId,
            String id,
            Optional<? extends EnableMethodIssuerRequestBody> requestBody) throws Exception;
    }


    public interface MethodCallDisableMethodIssuer {
        DisableMethodIssuerResponse disableMethodIssuer(
            DisableMethodIssuerSecurity security,
            String profileId,
            String methodId,
            String id) throws Exception;
    }


    public interface MethodCallCreateRefund {
        CreateRefundResponse create(
            CreateRefundSecurity security,
            String paymentId,
            Optional<? extends CreateRefundRequestBody> requestBody) throws Exception;
    }


    public interface MethodCallListRefunds {
        ListRefundsResponse list(
            ListRefundsRequest request,
            ListRefundsSecurity security) throws Exception;
    }


    public interface MethodCallGetRefund {
        GetRefundResponse get(
            GetRefundSecurity security,
            String paymentId,
            String id,
            JsonNullable<String> include,
            JsonNullable<Boolean> testmode) throws Exception;
    }


    public interface MethodCallCancelRefund {
        CancelRefundResponse cancel(
            CancelRefundSecurity security,
            String paymentId,
            String id,
            JsonNullable<Boolean> testmode) throws Exception;
    }


    public interface MethodCallCreateOrderRefund {
        CreateOrderRefundResponse createOrder(
            CreateOrderRefundSecurity security,
            String orderId,
            Optional<? extends CreateOrderRefundRequestBody> requestBody) throws Exception;
    }


    public interface MethodCallListOrderRefunds {
        ListOrderRefundsResponse listOrder(
            ListOrderRefundsRequest request,
            ListOrderRefundsSecurity security) throws Exception;
    }


    public interface MethodCallListAllRefunds {
        ListAllRefundsResponse listAll(
            ListAllRefundsRequest request,
            ListAllRefundsSecurity security) throws Exception;
    }


    public interface MethodCallListChargebacks {
        ListChargebacksResponse list(
            ListChargebacksRequest request,
            ListChargebacksSecurity security) throws Exception;
    }


    public interface MethodCallGetChargeback {
        GetChargebackResponse get(
            GetChargebackSecurity security,
            String paymentId,
            String id,
            JsonNullable<String> include,
            JsonNullable<Boolean> testmode) throws Exception;
    }


    public interface MethodCallListAllChargebacks {
        ListAllChargebacksResponse listAll(
            ListAllChargebacksRequest request,
            ListAllChargebacksSecurity security) throws Exception;
    }


    public interface MethodCallCreateCapture {
        CreateCaptureResponse create(
            CreateCaptureSecurity security,
            String paymentId,
            Optional<? extends CreateCaptureRequestBody> requestBody) throws Exception;
    }


    public interface MethodCallListCaptures {
        ListCapturesResponse list(
            ListCapturesRequest request,
            ListCapturesSecurity security) throws Exception;
    }


    public interface MethodCallGetCapture {
        GetCaptureResponse get(
            GetCaptureSecurity security,
            String paymentId,
            String id,
            JsonNullable<String> include,
            JsonNullable<Boolean> testmode) throws Exception;
    }


    public interface MethodCallRequestApplePayPaymentSession {
        RequestApplePayPaymentSessionResponse requestApplePayPaymentSession(
            Optional<? extends RequestApplePayPaymentSessionRequestBody> request,
            RequestApplePayPaymentSessionSecurity security) throws Exception;
    }


    public interface MethodCallCreatePaymentLink {
        CreatePaymentLinkResponse create(
            Optional<? extends CreatePaymentLinkRequestBody> request,
            CreatePaymentLinkSecurity security) throws Exception;
    }


    public interface MethodCallListPaymentLinks {
        ListPaymentLinksResponse list(
            ListPaymentLinksSecurity security,
            Optional<String> from,
            JsonNullable<Long> limit,
            JsonNullable<Boolean> testmode) throws Exception;
    }


    public interface MethodCallGetPaymentLink {
        GetPaymentLinkResponse get(
            GetPaymentLinkSecurity security,
            String id,
            JsonNullable<Boolean> testmode) throws Exception;
    }


    public interface MethodCallUpdatePaymentLink {
        UpdatePaymentLinkResponse update(
            UpdatePaymentLinkSecurity security,
            String id,
            JsonNullable<Boolean> testmode,
            Optional<? extends UpdatePaymentLinkRequestBody> requestBody) throws Exception;
    }


    public interface MethodCallDeletePaymentLink {
        DeletePaymentLinkResponse delete(
            DeletePaymentLinkSecurity security,
            String id,
            JsonNullable<Boolean> testmode) throws Exception;
    }


    public interface MethodCallGetPaymentLinkPayments {
        GetPaymentLinkPaymentsResponse getPayments(
            GetPaymentLinkPaymentsRequest request,
            GetPaymentLinkPaymentsSecurity security) throws Exception;
    }


    public interface MethodCallListTerminals {
        ListTerminalsResponse list(
            ListTerminalsSecurity security,
            Optional<String> from,
            JsonNullable<Long> limit,
            JsonNullable<Boolean> testmode) throws Exception;
    }


    public interface MethodCallGetTerminal {
        GetTerminalResponse get(
            GetTerminalSecurity security,
            String id,
            JsonNullable<Boolean> testmode) throws Exception;
    }


    public interface MethodCallPaymentCreateRoute {
        PaymentCreateRouteResponse create(
            PaymentCreateRouteSecurity security,
            String paymentId,
            Optional<? extends PaymentCreateRouteRequestBody> requestBody) throws Exception;
    }


    public interface MethodCallPaymentListRoutes {
        PaymentListRoutesResponse list(
            PaymentListRoutesSecurity security,
            String paymentId) throws Exception;
    }


    public interface MethodCallCreateCustomer {
        CreateCustomerResponse create(
            Optional<? extends CreateCustomerRequestBody> request,
            CreateCustomerSecurity security) throws Exception;
    }


    public interface MethodCallListCustomers {
        ListCustomersResponse list(
            ListCustomersSecurity security,
            Optional<String> from,
            JsonNullable<Long> limit,
            JsonNullable<Boolean> testmode) throws Exception;
    }


    public interface MethodCallGetCustomer {
        GetCustomerResponse get(
            GetCustomerSecurity security,
            String id,
            JsonNullable<Boolean> testmode) throws Exception;
    }


    public interface MethodCallUpdateCustomer {
        UpdateCustomerResponse update(
            UpdateCustomerSecurity security,
            String id,
            Optional<? extends UpdateCustomerRequestBody> requestBody) throws Exception;
    }


    public interface MethodCallDeleteCustomer {
        DeleteCustomerResponse delete(
            DeleteCustomerSecurity security,
            String id,
            JsonNullable<Boolean> testmode) throws Exception;
    }


    public interface MethodCallCreateCustomerPayment {
        CreateCustomerPaymentResponse createPayment(
            CreateCustomerPaymentSecurity security,
            String customerId,
            Optional<? extends CreateCustomerPaymentRequestBody> requestBody) throws Exception;
    }


    public interface MethodCallListCustomerPayments {
        ListCustomerPaymentsResponse listPayments(
            ListCustomerPaymentsSecurity security,
            String customerId,
            JsonNullable<String> profileId,
            JsonNullable<Boolean> testmode) throws Exception;
    }


    public interface MethodCallCreateMandate {
        CreateMandateResponse create(
            CreateMandateSecurity security,
            String customerId,
            Optional<? extends CreateMandateRequestBody> requestBody) throws Exception;
    }


    public interface MethodCallListMandates {
        ListMandatesResponse list(
            ListMandatesSecurity security,
            String customerId,
            Optional<String> from,
            JsonNullable<Long> limit,
            JsonNullable<Boolean> testmode) throws Exception;
    }


    public interface MethodCallGetMandate {
        GetMandateResponse get(
            GetMandateSecurity security,
            String customerId,
            String id,
            JsonNullable<Boolean> testmode) throws Exception;
    }


    public interface MethodCallRevokeMandate {
        RevokeMandateResponse revoke(
            RevokeMandateSecurity security,
            String customerId,
            String id,
            JsonNullable<Boolean> testmode) throws Exception;
    }


    public interface MethodCallCreateSubscription {
        CreateSubscriptionResponse create(
            CreateSubscriptionSecurity security,
            String customerId,
            Optional<? extends CreateSubscriptionRequestBody> requestBody) throws Exception;
    }


    public interface MethodCallListSubscriptions {
        ListSubscriptionsResponse list(
            ListSubscriptionsSecurity security,
            String customerId,
            Optional<String> from,
            JsonNullable<Long> limit,
            JsonNullable<Boolean> testmode) throws Exception;
    }


    public interface MethodCallGetSubscription {
        GetSubscriptionResponse get(
            GetSubscriptionSecurity security,
            String customerId,
            String id,
            JsonNullable<Boolean> testmode) throws Exception;
    }


    public interface MethodCallUpdateSubscription {
        UpdateSubscriptionResponse update(
            UpdateSubscriptionSecurity security,
            String customerId,
            String id,
            JsonNullable<Boolean> testmode,
            Optional<? extends UpdateSubscriptionRequestBody> requestBody) throws Exception;
    }


    public interface MethodCallCancelSubscription {
        CancelSubscriptionResponse cancel(
            CancelSubscriptionSecurity security,
            String customerId,
            String id,
            JsonNullable<Boolean> testmode) throws Exception;
    }


    public interface MethodCallListAllSubscriptions {
        ListAllSubscriptionsResponse listAll(
            ListAllSubscriptionsSecurity security,
            Optional<String> from,
            JsonNullable<Long> limit,
            JsonNullable<String> profileId,
            JsonNullable<Boolean> testmode) throws Exception;
    }


    public interface MethodCallListSubscriptionPayments {
        ListSubscriptionPaymentsResponse listPayments(
            ListSubscriptionPaymentsRequest request,
            ListSubscriptionPaymentsSecurity security) throws Exception;
    }


}
