/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

package com.mollie.mollie.models.operations;

import com.fasterxml.jackson.core.type.TypeReference;
import com.mollie.mollie.utils.LazySingletonValue;
import com.mollie.mollie.utils.Utils;
import java.lang.Long;
import java.lang.String;
import java.util.Optional;
import org.openapitools.jackson.nullable.JsonNullable;

public class ListInvoicesRequestBuilder {

    private JsonNullable<String> reference = JsonNullable.undefined();
    private JsonNullable<String> year = JsonNullable.undefined();
    private Optional<String> from = Optional.empty();
    private JsonNullable<Long> limit = Utils.readDefaultOrConstValue(
                            "limit",
                            "50",
                            new TypeReference<JsonNullable<Long>>() {});
    private final SDKMethodInterfaces.MethodCallListInvoices sdk;

    public ListInvoicesRequestBuilder(SDKMethodInterfaces.MethodCallListInvoices sdk) {
        this.sdk = sdk;
    }

    public ListInvoicesRequestBuilder reference(String reference) {
        Utils.checkNotNull(reference, "reference");
        this.reference = JsonNullable.of(reference);
        return this;
    }

    public ListInvoicesRequestBuilder reference(JsonNullable<String> reference) {
        Utils.checkNotNull(reference, "reference");
        this.reference = reference;
        return this;
    }

    public ListInvoicesRequestBuilder year(String year) {
        Utils.checkNotNull(year, "year");
        this.year = JsonNullable.of(year);
        return this;
    }

    public ListInvoicesRequestBuilder year(JsonNullable<String> year) {
        Utils.checkNotNull(year, "year");
        this.year = year;
        return this;
    }
                
    public ListInvoicesRequestBuilder from(String from) {
        Utils.checkNotNull(from, "from");
        this.from = Optional.of(from);
        return this;
    }

    public ListInvoicesRequestBuilder from(Optional<String> from) {
        Utils.checkNotNull(from, "from");
        this.from = from;
        return this;
    }

    public ListInvoicesRequestBuilder limit(long limit) {
        Utils.checkNotNull(limit, "limit");
        this.limit = JsonNullable.of(limit);
        return this;
    }

    public ListInvoicesRequestBuilder limit(JsonNullable<Long> limit) {
        Utils.checkNotNull(limit, "limit");
        this.limit = limit;
        return this;
    }

    public ListInvoicesResponse call() throws Exception {
        if (limit == null) {
            limit = _SINGLETON_VALUE_Limit.value();
        }
        return sdk.list(
            reference,
            year,
            from,
            limit);
    }

    private static final LazySingletonValue<JsonNullable<Long>> _SINGLETON_VALUE_Limit =
            new LazySingletonValue<>(
                    "limit",
                    "50",
                    new TypeReference<JsonNullable<Long>>() {});
}
