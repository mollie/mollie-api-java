/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.mollie.mollie.models.operations;

import com.fasterxml.jackson.annotation.JsonValue;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;

/**
 * Status
 * 
 * <p>The status for the invoice to end up in.
 * 
 * <p>A `draft` invoice is not paid or not sent and can be updated after creation. Setting it to `issued` sends it to
 * the recipient so they may then pay through our payment system. To skip our payment process, set this to `paid` to
 * mark it as paid. It can then subsequently be sent as well, same as with `issued`.
 * 
 * <p>A status value that cannot be set but can be returned is `canceled`, for invoices which were
 * issued, but then canceled. Currently this can only be done for invoices created in the dashboard.
 * 
 * <p>Dependent parameters:
 *   - `paymentDetails` is required if invoice should be set directly to `paid`
 *   - `customerId` and `mandateId` are required if a recurring payment should be used to set the invoice to `paid`
 *   - `emailDetails` optional for `issued` and `paid` to send the invoice by email
 */
public enum Status {
    DRAFT("draft"),
    ISSUED("issued"),
    PAID("paid");

    @JsonValue
    private final String value;

    Status(String value) {
        this.value = value;
    }
    
    public String value() {
        return value;
    }
    
    public static Optional<Status> fromValue(String value) {
        for (Status o: Status.values()) {
            if (Objects.deepEquals(o.value, value)) {
                return Optional.of(o);
            }
        }
        return Optional.empty();
    }
}

