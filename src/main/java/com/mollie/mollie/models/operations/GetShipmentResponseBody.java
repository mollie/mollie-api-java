/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

package com.mollie.mollie.models.operations;


import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.core.type.TypeReference;
import com.mollie.mollie.utils.LazySingletonValue;
import com.mollie.mollie.utils.Utils;
import java.lang.Override;
import java.lang.String;
import java.lang.SuppressWarnings;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import org.openapitools.jackson.nullable.JsonNullable;

/**
 * GetShipmentResponseBody - The shipment object.
 */

public class GetShipmentResponseBody {

    /**
     * Indicates the response contains a shipment object. Will always contain the string `shipment` for this endpoint.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("resource")
    private Optional<String> resource;

    /**
     * The identifier uniquely referring to this shipment. Example: `shp_3wmsgCJN4U`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    private Optional<String> id;

    /**
     * Whether this entity was created in live mode or in test mode.
     * 
     * Possible values: `live` `test`
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("mode")
    private Optional<String> mode;

    /**
     * The order lines that are being fulfilled with this shipment. If left blank, all open order lines will be considered fulfilled.
     * 
     * For an in-depth explanation of all order line properties, refer to the `lines` parameter of the [Create order](create-order) endpoint.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("lines")
    private JsonNullable<? extends List<GetShipmentLines>> lines;

    /**
     * Shipment tracking details. Can be omitted if tracking details are not available or not applicable.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tracking")
    private JsonNullable<? extends GetShipmentTracking> tracking;

    /**
     * The unique identifier of the order this shipment was created for. For example: `ord_8wmqcHMN4U`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("orderId")
    private Optional<String> orderId;

    /**
     * The entity's date and time of creation, in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("createdAt")
    private Optional<String> createdAt;

    /**
     * An object with several relevant URLs. Every URL object will contain an `href` and a `type` field.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("_links")
    private Optional<? extends GetShipmentLinks> links;

    @JsonCreator
    public GetShipmentResponseBody(
            @JsonProperty("resource") Optional<String> resource,
            @JsonProperty("id") Optional<String> id,
            @JsonProperty("mode") Optional<String> mode,
            @JsonProperty("lines") JsonNullable<? extends List<GetShipmentLines>> lines,
            @JsonProperty("tracking") JsonNullable<? extends GetShipmentTracking> tracking,
            @JsonProperty("orderId") Optional<String> orderId,
            @JsonProperty("createdAt") Optional<String> createdAt,
            @JsonProperty("_links") Optional<? extends GetShipmentLinks> links) {
        Utils.checkNotNull(resource, "resource");
        Utils.checkNotNull(id, "id");
        Utils.checkNotNull(mode, "mode");
        Utils.checkNotNull(lines, "lines");
        Utils.checkNotNull(tracking, "tracking");
        Utils.checkNotNull(orderId, "orderId");
        Utils.checkNotNull(createdAt, "createdAt");
        Utils.checkNotNull(links, "links");
        this.resource = resource;
        this.id = id;
        this.mode = mode;
        this.lines = lines;
        this.tracking = tracking;
        this.orderId = orderId;
        this.createdAt = createdAt;
        this.links = links;
    }
    
    public GetShipmentResponseBody() {
        this(Optional.empty(), Optional.empty(), Optional.empty(), JsonNullable.undefined(), JsonNullable.undefined(), Optional.empty(), Optional.empty(), Optional.empty());
    }

    /**
     * Indicates the response contains a shipment object. Will always contain the string `shipment` for this endpoint.
     */
    @JsonIgnore
    public Optional<String> resource() {
        return resource;
    }

    /**
     * The identifier uniquely referring to this shipment. Example: `shp_3wmsgCJN4U`.
     */
    @JsonIgnore
    public Optional<String> id() {
        return id;
    }

    /**
     * Whether this entity was created in live mode or in test mode.
     * 
     * Possible values: `live` `test`
     */
    @JsonIgnore
    public Optional<String> mode() {
        return mode;
    }

    /**
     * The order lines that are being fulfilled with this shipment. If left blank, all open order lines will be considered fulfilled.
     * 
     * For an in-depth explanation of all order line properties, refer to the `lines` parameter of the [Create order](create-order) endpoint.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public JsonNullable<List<GetShipmentLines>> lines() {
        return (JsonNullable<List<GetShipmentLines>>) lines;
    }

    /**
     * Shipment tracking details. Can be omitted if tracking details are not available or not applicable.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public JsonNullable<GetShipmentTracking> tracking() {
        return (JsonNullable<GetShipmentTracking>) tracking;
    }

    /**
     * The unique identifier of the order this shipment was created for. For example: `ord_8wmqcHMN4U`.
     */
    @JsonIgnore
    public Optional<String> orderId() {
        return orderId;
    }

    /**
     * The entity's date and time of creation, in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
     */
    @JsonIgnore
    public Optional<String> createdAt() {
        return createdAt;
    }

    /**
     * An object with several relevant URLs. Every URL object will contain an `href` and a `type` field.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<GetShipmentLinks> links() {
        return (Optional<GetShipmentLinks>) links;
    }

    public final static Builder builder() {
        return new Builder();
    }

    /**
     * Indicates the response contains a shipment object. Will always contain the string `shipment` for this endpoint.
     */
    public GetShipmentResponseBody withResource(String resource) {
        Utils.checkNotNull(resource, "resource");
        this.resource = Optional.ofNullable(resource);
        return this;
    }

    /**
     * Indicates the response contains a shipment object. Will always contain the string `shipment` for this endpoint.
     */
    public GetShipmentResponseBody withResource(Optional<String> resource) {
        Utils.checkNotNull(resource, "resource");
        this.resource = resource;
        return this;
    }

    /**
     * The identifier uniquely referring to this shipment. Example: `shp_3wmsgCJN4U`.
     */
    public GetShipmentResponseBody withId(String id) {
        Utils.checkNotNull(id, "id");
        this.id = Optional.ofNullable(id);
        return this;
    }

    /**
     * The identifier uniquely referring to this shipment. Example: `shp_3wmsgCJN4U`.
     */
    public GetShipmentResponseBody withId(Optional<String> id) {
        Utils.checkNotNull(id, "id");
        this.id = id;
        return this;
    }

    /**
     * Whether this entity was created in live mode or in test mode.
     * 
     * Possible values: `live` `test`
     */
    public GetShipmentResponseBody withMode(String mode) {
        Utils.checkNotNull(mode, "mode");
        this.mode = Optional.ofNullable(mode);
        return this;
    }

    /**
     * Whether this entity was created in live mode or in test mode.
     * 
     * Possible values: `live` `test`
     */
    public GetShipmentResponseBody withMode(Optional<String> mode) {
        Utils.checkNotNull(mode, "mode");
        this.mode = mode;
        return this;
    }

    /**
     * The order lines that are being fulfilled with this shipment. If left blank, all open order lines will be considered fulfilled.
     * 
     * For an in-depth explanation of all order line properties, refer to the `lines` parameter of the [Create order](create-order) endpoint.
     */
    public GetShipmentResponseBody withLines(List<GetShipmentLines> lines) {
        Utils.checkNotNull(lines, "lines");
        this.lines = JsonNullable.of(lines);
        return this;
    }

    /**
     * The order lines that are being fulfilled with this shipment. If left blank, all open order lines will be considered fulfilled.
     * 
     * For an in-depth explanation of all order line properties, refer to the `lines` parameter of the [Create order](create-order) endpoint.
     */
    public GetShipmentResponseBody withLines(JsonNullable<? extends List<GetShipmentLines>> lines) {
        Utils.checkNotNull(lines, "lines");
        this.lines = lines;
        return this;
    }

    /**
     * Shipment tracking details. Can be omitted if tracking details are not available or not applicable.
     */
    public GetShipmentResponseBody withTracking(GetShipmentTracking tracking) {
        Utils.checkNotNull(tracking, "tracking");
        this.tracking = JsonNullable.of(tracking);
        return this;
    }

    /**
     * Shipment tracking details. Can be omitted if tracking details are not available or not applicable.
     */
    public GetShipmentResponseBody withTracking(JsonNullable<? extends GetShipmentTracking> tracking) {
        Utils.checkNotNull(tracking, "tracking");
        this.tracking = tracking;
        return this;
    }

    /**
     * The unique identifier of the order this shipment was created for. For example: `ord_8wmqcHMN4U`.
     */
    public GetShipmentResponseBody withOrderId(String orderId) {
        Utils.checkNotNull(orderId, "orderId");
        this.orderId = Optional.ofNullable(orderId);
        return this;
    }

    /**
     * The unique identifier of the order this shipment was created for. For example: `ord_8wmqcHMN4U`.
     */
    public GetShipmentResponseBody withOrderId(Optional<String> orderId) {
        Utils.checkNotNull(orderId, "orderId");
        this.orderId = orderId;
        return this;
    }

    /**
     * The entity's date and time of creation, in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
     */
    public GetShipmentResponseBody withCreatedAt(String createdAt) {
        Utils.checkNotNull(createdAt, "createdAt");
        this.createdAt = Optional.ofNullable(createdAt);
        return this;
    }

    /**
     * The entity's date and time of creation, in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
     */
    public GetShipmentResponseBody withCreatedAt(Optional<String> createdAt) {
        Utils.checkNotNull(createdAt, "createdAt");
        this.createdAt = createdAt;
        return this;
    }

    /**
     * An object with several relevant URLs. Every URL object will contain an `href` and a `type` field.
     */
    public GetShipmentResponseBody withLinks(GetShipmentLinks links) {
        Utils.checkNotNull(links, "links");
        this.links = Optional.ofNullable(links);
        return this;
    }

    /**
     * An object with several relevant URLs. Every URL object will contain an `href` and a `type` field.
     */
    public GetShipmentResponseBody withLinks(Optional<? extends GetShipmentLinks> links) {
        Utils.checkNotNull(links, "links");
        this.links = links;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        GetShipmentResponseBody other = (GetShipmentResponseBody) o;
        return 
            Objects.deepEquals(this.resource, other.resource) &&
            Objects.deepEquals(this.id, other.id) &&
            Objects.deepEquals(this.mode, other.mode) &&
            Objects.deepEquals(this.lines, other.lines) &&
            Objects.deepEquals(this.tracking, other.tracking) &&
            Objects.deepEquals(this.orderId, other.orderId) &&
            Objects.deepEquals(this.createdAt, other.createdAt) &&
            Objects.deepEquals(this.links, other.links);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            resource,
            id,
            mode,
            lines,
            tracking,
            orderId,
            createdAt,
            links);
    }
    
    @Override
    public String toString() {
        return Utils.toString(GetShipmentResponseBody.class,
                "resource", resource,
                "id", id,
                "mode", mode,
                "lines", lines,
                "tracking", tracking,
                "orderId", orderId,
                "createdAt", createdAt,
                "links", links);
    }
    
    public final static class Builder {
 
        private Optional<String> resource;
 
        private Optional<String> id = Optional.empty();
 
        private Optional<String> mode = Optional.empty();
 
        private JsonNullable<? extends List<GetShipmentLines>> lines = JsonNullable.undefined();
 
        private JsonNullable<? extends GetShipmentTracking> tracking = JsonNullable.undefined();
 
        private Optional<String> orderId = Optional.empty();
 
        private Optional<String> createdAt = Optional.empty();
 
        private Optional<? extends GetShipmentLinks> links = Optional.empty();  
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * Indicates the response contains a shipment object. Will always contain the string `shipment` for this endpoint.
         */
        public Builder resource(String resource) {
            Utils.checkNotNull(resource, "resource");
            this.resource = Optional.ofNullable(resource);
            return this;
        }

        /**
         * Indicates the response contains a shipment object. Will always contain the string `shipment` for this endpoint.
         */
        public Builder resource(Optional<String> resource) {
            Utils.checkNotNull(resource, "resource");
            this.resource = resource;
            return this;
        }

        /**
         * The identifier uniquely referring to this shipment. Example: `shp_3wmsgCJN4U`.
         */
        public Builder id(String id) {
            Utils.checkNotNull(id, "id");
            this.id = Optional.ofNullable(id);
            return this;
        }

        /**
         * The identifier uniquely referring to this shipment. Example: `shp_3wmsgCJN4U`.
         */
        public Builder id(Optional<String> id) {
            Utils.checkNotNull(id, "id");
            this.id = id;
            return this;
        }

        /**
         * Whether this entity was created in live mode or in test mode.
         * 
         * Possible values: `live` `test`
         */
        public Builder mode(String mode) {
            Utils.checkNotNull(mode, "mode");
            this.mode = Optional.ofNullable(mode);
            return this;
        }

        /**
         * Whether this entity was created in live mode or in test mode.
         * 
         * Possible values: `live` `test`
         */
        public Builder mode(Optional<String> mode) {
            Utils.checkNotNull(mode, "mode");
            this.mode = mode;
            return this;
        }

        /**
         * The order lines that are being fulfilled with this shipment. If left blank, all open order lines will be considered fulfilled.
         * 
         * For an in-depth explanation of all order line properties, refer to the `lines` parameter of the [Create order](create-order) endpoint.
         */
        public Builder lines(List<GetShipmentLines> lines) {
            Utils.checkNotNull(lines, "lines");
            this.lines = JsonNullable.of(lines);
            return this;
        }

        /**
         * The order lines that are being fulfilled with this shipment. If left blank, all open order lines will be considered fulfilled.
         * 
         * For an in-depth explanation of all order line properties, refer to the `lines` parameter of the [Create order](create-order) endpoint.
         */
        public Builder lines(JsonNullable<? extends List<GetShipmentLines>> lines) {
            Utils.checkNotNull(lines, "lines");
            this.lines = lines;
            return this;
        }

        /**
         * Shipment tracking details. Can be omitted if tracking details are not available or not applicable.
         */
        public Builder tracking(GetShipmentTracking tracking) {
            Utils.checkNotNull(tracking, "tracking");
            this.tracking = JsonNullable.of(tracking);
            return this;
        }

        /**
         * Shipment tracking details. Can be omitted if tracking details are not available or not applicable.
         */
        public Builder tracking(JsonNullable<? extends GetShipmentTracking> tracking) {
            Utils.checkNotNull(tracking, "tracking");
            this.tracking = tracking;
            return this;
        }

        /**
         * The unique identifier of the order this shipment was created for. For example: `ord_8wmqcHMN4U`.
         */
        public Builder orderId(String orderId) {
            Utils.checkNotNull(orderId, "orderId");
            this.orderId = Optional.ofNullable(orderId);
            return this;
        }

        /**
         * The unique identifier of the order this shipment was created for. For example: `ord_8wmqcHMN4U`.
         */
        public Builder orderId(Optional<String> orderId) {
            Utils.checkNotNull(orderId, "orderId");
            this.orderId = orderId;
            return this;
        }

        /**
         * The entity's date and time of creation, in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
         */
        public Builder createdAt(String createdAt) {
            Utils.checkNotNull(createdAt, "createdAt");
            this.createdAt = Optional.ofNullable(createdAt);
            return this;
        }

        /**
         * The entity's date and time of creation, in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
         */
        public Builder createdAt(Optional<String> createdAt) {
            Utils.checkNotNull(createdAt, "createdAt");
            this.createdAt = createdAt;
            return this;
        }

        /**
         * An object with several relevant URLs. Every URL object will contain an `href` and a `type` field.
         */
        public Builder links(GetShipmentLinks links) {
            Utils.checkNotNull(links, "links");
            this.links = Optional.ofNullable(links);
            return this;
        }

        /**
         * An object with several relevant URLs. Every URL object will contain an `href` and a `type` field.
         */
        public Builder links(Optional<? extends GetShipmentLinks> links) {
            Utils.checkNotNull(links, "links");
            this.links = links;
            return this;
        }
        
        public GetShipmentResponseBody build() {
            if (resource == null) {
                resource = _SINGLETON_VALUE_Resource.value();
            }            return new GetShipmentResponseBody(
                resource,
                id,
                mode,
                lines,
                tracking,
                orderId,
                createdAt,
                links);
        }

        private static final LazySingletonValue<Optional<String>> _SINGLETON_VALUE_Resource =
                new LazySingletonValue<>(
                        "resource",
                        "\"shipment\"",
                        new TypeReference<Optional<String>>() {});
    }
}

