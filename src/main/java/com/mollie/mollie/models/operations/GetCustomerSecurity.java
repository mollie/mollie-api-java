/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

package com.mollie.mollie.models.operations;


import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.mollie.mollie.utils.SpeakeasyMetadata;
import com.mollie.mollie.utils.Utils;
import java.lang.Override;
import java.lang.String;
import java.util.Objects;


public class GetCustomerSecurity {

    @SpeakeasyMetadata("security:scheme=true,type=http,subtype=bearer,name=Authorization")
    private String apiKey;

    @JsonCreator
    public GetCustomerSecurity(
            String apiKey) {
        Utils.checkNotNull(apiKey, "apiKey");
        this.apiKey = apiKey;
    }

    @JsonIgnore
    public String apiKey() {
        return apiKey;
    }

    public final static Builder builder() {
        return new Builder();
    }

    public GetCustomerSecurity withApiKey(String apiKey) {
        Utils.checkNotNull(apiKey, "apiKey");
        this.apiKey = apiKey;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        GetCustomerSecurity other = (GetCustomerSecurity) o;
        return 
            Objects.deepEquals(this.apiKey, other.apiKey);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            apiKey);
    }
    
    @Override
    public String toString() {
        return Utils.toString(GetCustomerSecurity.class,
                "apiKey", apiKey);
    }
    
    public final static class Builder {
 
        private String apiKey;  
        
        private Builder() {
          // force use of static builder() method
        }

        public Builder apiKey(String apiKey) {
            Utils.checkNotNull(apiKey, "apiKey");
            this.apiKey = apiKey;
            return this;
        }
        
        public GetCustomerSecurity build() {
            return new GetCustomerSecurity(
                apiKey);
        }
    }
}

