/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.mollie.mollie.models.operations;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.mollie.mollie.models.components.EntityBalance;
import com.mollie.mollie.utils.Utils;
import java.lang.Override;
import java.lang.String;
import java.util.List;


public class Embedded {
    /**
     * An array of balance objects. For a complete reference of
     * the balance object, refer to the [Get balance endpoint](get-balance) documentation.
     */
    @JsonProperty("balances")
    private List<EntityBalance> balances;

    @JsonCreator
    public Embedded(
            @JsonProperty("balances") List<EntityBalance> balances) {
        Utils.checkNotNull(balances, "balances");
        this.balances = balances;
    }

    /**
     * An array of balance objects. For a complete reference of
     * the balance object, refer to the [Get balance endpoint](get-balance) documentation.
     */
    @JsonIgnore
    public List<EntityBalance> balances() {
        return balances;
    }

    public static Builder builder() {
        return new Builder();
    }


    /**
     * An array of balance objects. For a complete reference of
     * the balance object, refer to the [Get balance endpoint](get-balance) documentation.
     */
    public Embedded withBalances(List<EntityBalance> balances) {
        Utils.checkNotNull(balances, "balances");
        this.balances = balances;
        return this;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        Embedded other = (Embedded) o;
        return 
            Utils.enhancedDeepEquals(this.balances, other.balances);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            balances);
    }
    
    @Override
    public String toString() {
        return Utils.toString(Embedded.class,
                "balances", balances);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private List<EntityBalance> balances;

        private Builder() {
          // force use of static builder() method
        }


        /**
         * An array of balance objects. For a complete reference of
         * the balance object, refer to the [Get balance endpoint](get-balance) documentation.
         */
        public Builder balances(List<EntityBalance> balances) {
            Utils.checkNotNull(balances, "balances");
            this.balances = balances;
            return this;
        }

        public Embedded build() {

            return new Embedded(
                balances);
        }

    }
}
