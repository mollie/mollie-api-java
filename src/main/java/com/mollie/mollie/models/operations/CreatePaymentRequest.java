/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */


package com.mollie.mollie.models.operations;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.mollie.mollie.utils.SpeakeasyMetadata;
import com.mollie.mollie.utils.Utils;
import java.lang.Override;
import java.lang.String;
import java.lang.SuppressWarnings;
import java.util.Objects;
import java.util.Optional;
import org.openapitools.jackson.nullable.JsonNullable;

public class CreatePaymentRequest {

    /**
     * This endpoint allows you to include additional information via the `include` query string parameter.
     * 
     * * `details.qrCode`: Include a QR code object. Only available for iDEAL, Bancontact and bank transfer payments.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=include")
    private JsonNullable<String> include;

    @SpeakeasyMetadata("request:mediaType=application/json")
    private Optional<? extends CreatePaymentRequestBody> requestBody;

    @JsonCreator
    public CreatePaymentRequest(
            JsonNullable<String> include,
            Optional<? extends CreatePaymentRequestBody> requestBody) {
        Utils.checkNotNull(include, "include");
        Utils.checkNotNull(requestBody, "requestBody");
        this.include = include;
        this.requestBody = requestBody;
    }
    
    public CreatePaymentRequest() {
        this(JsonNullable.undefined(), Optional.empty());
    }

    /**
     * This endpoint allows you to include additional information via the `include` query string parameter.
     * 
     * * `details.qrCode`: Include a QR code object. Only available for iDEAL, Bancontact and bank transfer payments.
     */
    @JsonIgnore
    public JsonNullable<String> include() {
        return include;
    }

    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<CreatePaymentRequestBody> requestBody() {
        return (Optional<CreatePaymentRequestBody>) requestBody;
    }

    public final static Builder builder() {
        return new Builder();
    }

    /**
     * This endpoint allows you to include additional information via the `include` query string parameter.
     * 
     * * `details.qrCode`: Include a QR code object. Only available for iDEAL, Bancontact and bank transfer payments.
     */
    public CreatePaymentRequest withInclude(String include) {
        Utils.checkNotNull(include, "include");
        this.include = JsonNullable.of(include);
        return this;
    }

    /**
     * This endpoint allows you to include additional information via the `include` query string parameter.
     * 
     * * `details.qrCode`: Include a QR code object. Only available for iDEAL, Bancontact and bank transfer payments.
     */
    public CreatePaymentRequest withInclude(JsonNullable<String> include) {
        Utils.checkNotNull(include, "include");
        this.include = include;
        return this;
    }

    public CreatePaymentRequest withRequestBody(CreatePaymentRequestBody requestBody) {
        Utils.checkNotNull(requestBody, "requestBody");
        this.requestBody = Optional.ofNullable(requestBody);
        return this;
    }

    public CreatePaymentRequest withRequestBody(Optional<? extends CreatePaymentRequestBody> requestBody) {
        Utils.checkNotNull(requestBody, "requestBody");
        this.requestBody = requestBody;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        CreatePaymentRequest other = (CreatePaymentRequest) o;
        return 
            Objects.deepEquals(this.include, other.include) &&
            Objects.deepEquals(this.requestBody, other.requestBody);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            include,
            requestBody);
    }
    
    @Override
    public String toString() {
        return Utils.toString(CreatePaymentRequest.class,
                "include", include,
                "requestBody", requestBody);
    }
    
    public final static class Builder {
 
        private JsonNullable<String> include = JsonNullable.undefined();
 
        private Optional<? extends CreatePaymentRequestBody> requestBody = Optional.empty();  
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * This endpoint allows you to include additional information via the `include` query string parameter.
         * 
         * * `details.qrCode`: Include a QR code object. Only available for iDEAL, Bancontact and bank transfer payments.
         */
        public Builder include(String include) {
            Utils.checkNotNull(include, "include");
            this.include = JsonNullable.of(include);
            return this;
        }

        /**
         * This endpoint allows you to include additional information via the `include` query string parameter.
         * 
         * * `details.qrCode`: Include a QR code object. Only available for iDEAL, Bancontact and bank transfer payments.
         */
        public Builder include(JsonNullable<String> include) {
            Utils.checkNotNull(include, "include");
            this.include = include;
            return this;
        }

        public Builder requestBody(CreatePaymentRequestBody requestBody) {
            Utils.checkNotNull(requestBody, "requestBody");
            this.requestBody = Optional.ofNullable(requestBody);
            return this;
        }

        public Builder requestBody(Optional<? extends CreatePaymentRequestBody> requestBody) {
            Utils.checkNotNull(requestBody, "requestBody");
            this.requestBody = requestBody;
            return this;
        }
        
        public CreatePaymentRequest build() {
            return new CreatePaymentRequest(
                include,
                requestBody);
        }
    }
}

