/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.mollie.mollie.models.operations;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.core.type.TypeReference;
import com.mollie.mollie.utils.LazySingletonValue;
import com.mollie.mollie.utils.Utils;
import java.lang.Override;
import java.lang.String;
import java.lang.SuppressWarnings;
import java.util.Objects;
import java.util.Optional;
import org.openapitools.jackson.nullable.JsonNullable;

/**
 * GetCurrentOrganizationResponseBody
 * 
 * <p>The current organization object.
 */
public class GetCurrentOrganizationResponseBody {

    /**
     * Indicates the response contains an organization object. Will always contain the string `organization` for this resource type.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("resource")
    private Optional<String> resource;

    /**
     * The identifier uniquely referring to this organization. Example: `org_12345678`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    private Optional<String> id;

    /**
     * The name of the organization.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    private Optional<String> name;

    /**
     * The email address associated with the organization.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("email")
    private Optional<String> email;

    /**
     * The preferred locale of the merchant, as set in their Mollie dashboard.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("locale")
    private Optional<String> locale;

    /**
     * The address of the organization.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("address")
    private Optional<? extends GetCurrentOrganizationAddress> address;

    /**
     * The registration number of the organization at their local chamber of commerce.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("registrationNumber")
    private Optional<String> registrationNumber;

    /**
     * The VAT number of the organization, if based in the European Union or in The United Kingdom. VAT numbers are verified against the international registry *VIES*.
     * 
     * <p>The field is not present for merchants residing in other countries.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("vatNumber")
    private JsonNullable<String> vatNumber;

    /**
     * Mollie applies Dutch VAT for merchants based in The Netherlands, British VAT for merchants based in The United Kingdom, and shifted VAT for merchants in the European Union.
     * 
     * <p>The field is not present for merchants residing in other countries.
     * 
     * <p>Possible values: `dutch` `british` `shifted`
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("vatRegulation")
    private JsonNullable<String> vatRegulation;

    /**
     * An object with several relevant URLs. Every URL object will contain an `href` and a `type` field.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("_links")
    private Optional<? extends GetCurrentOrganizationLinks> links;

    @JsonCreator
    public GetCurrentOrganizationResponseBody(
            @JsonProperty("resource") Optional<String> resource,
            @JsonProperty("id") Optional<String> id,
            @JsonProperty("name") Optional<String> name,
            @JsonProperty("email") Optional<String> email,
            @JsonProperty("locale") Optional<String> locale,
            @JsonProperty("address") Optional<? extends GetCurrentOrganizationAddress> address,
            @JsonProperty("registrationNumber") Optional<String> registrationNumber,
            @JsonProperty("vatNumber") JsonNullable<String> vatNumber,
            @JsonProperty("vatRegulation") JsonNullable<String> vatRegulation,
            @JsonProperty("_links") Optional<? extends GetCurrentOrganizationLinks> links) {
        Utils.checkNotNull(resource, "resource");
        Utils.checkNotNull(id, "id");
        Utils.checkNotNull(name, "name");
        Utils.checkNotNull(email, "email");
        Utils.checkNotNull(locale, "locale");
        Utils.checkNotNull(address, "address");
        Utils.checkNotNull(registrationNumber, "registrationNumber");
        Utils.checkNotNull(vatNumber, "vatNumber");
        Utils.checkNotNull(vatRegulation, "vatRegulation");
        Utils.checkNotNull(links, "links");
        this.resource = resource;
        this.id = id;
        this.name = name;
        this.email = email;
        this.locale = locale;
        this.address = address;
        this.registrationNumber = registrationNumber;
        this.vatNumber = vatNumber;
        this.vatRegulation = vatRegulation;
        this.links = links;
    }
    
    public GetCurrentOrganizationResponseBody() {
        this(Optional.empty(), Optional.empty(), Optional.empty(), Optional.empty(), Optional.empty(), Optional.empty(), Optional.empty(), JsonNullable.undefined(), JsonNullable.undefined(), Optional.empty());
    }

    /**
     * Indicates the response contains an organization object. Will always contain the string `organization` for this resource type.
     */
    @JsonIgnore
    public Optional<String> resource() {
        return resource;
    }

    /**
     * The identifier uniquely referring to this organization. Example: `org_12345678`.
     */
    @JsonIgnore
    public Optional<String> id() {
        return id;
    }

    /**
     * The name of the organization.
     */
    @JsonIgnore
    public Optional<String> name() {
        return name;
    }

    /**
     * The email address associated with the organization.
     */
    @JsonIgnore
    public Optional<String> email() {
        return email;
    }

    /**
     * The preferred locale of the merchant, as set in their Mollie dashboard.
     */
    @JsonIgnore
    public Optional<String> locale() {
        return locale;
    }

    /**
     * The address of the organization.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<GetCurrentOrganizationAddress> address() {
        return (Optional<GetCurrentOrganizationAddress>) address;
    }

    /**
     * The registration number of the organization at their local chamber of commerce.
     */
    @JsonIgnore
    public Optional<String> registrationNumber() {
        return registrationNumber;
    }

    /**
     * The VAT number of the organization, if based in the European Union or in The United Kingdom. VAT numbers are verified against the international registry *VIES*.
     * 
     * <p>The field is not present for merchants residing in other countries.
     */
    @JsonIgnore
    public JsonNullable<String> vatNumber() {
        return vatNumber;
    }

    /**
     * Mollie applies Dutch VAT for merchants based in The Netherlands, British VAT for merchants based in The United Kingdom, and shifted VAT for merchants in the European Union.
     * 
     * <p>The field is not present for merchants residing in other countries.
     * 
     * <p>Possible values: `dutch` `british` `shifted`
     */
    @JsonIgnore
    public JsonNullable<String> vatRegulation() {
        return vatRegulation;
    }

    /**
     * An object with several relevant URLs. Every URL object will contain an `href` and a `type` field.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<GetCurrentOrganizationLinks> links() {
        return (Optional<GetCurrentOrganizationLinks>) links;
    }

    public final static Builder builder() {
        return new Builder();
    }    

    /**
     * Indicates the response contains an organization object. Will always contain the string `organization` for this resource type.
     */
    public GetCurrentOrganizationResponseBody withResource(String resource) {
        Utils.checkNotNull(resource, "resource");
        this.resource = Optional.ofNullable(resource);
        return this;
    }

    /**
     * Indicates the response contains an organization object. Will always contain the string `organization` for this resource type.
     */
    public GetCurrentOrganizationResponseBody withResource(Optional<String> resource) {
        Utils.checkNotNull(resource, "resource");
        this.resource = resource;
        return this;
    }

    /**
     * The identifier uniquely referring to this organization. Example: `org_12345678`.
     */
    public GetCurrentOrganizationResponseBody withId(String id) {
        Utils.checkNotNull(id, "id");
        this.id = Optional.ofNullable(id);
        return this;
    }

    /**
     * The identifier uniquely referring to this organization. Example: `org_12345678`.
     */
    public GetCurrentOrganizationResponseBody withId(Optional<String> id) {
        Utils.checkNotNull(id, "id");
        this.id = id;
        return this;
    }

    /**
     * The name of the organization.
     */
    public GetCurrentOrganizationResponseBody withName(String name) {
        Utils.checkNotNull(name, "name");
        this.name = Optional.ofNullable(name);
        return this;
    }

    /**
     * The name of the organization.
     */
    public GetCurrentOrganizationResponseBody withName(Optional<String> name) {
        Utils.checkNotNull(name, "name");
        this.name = name;
        return this;
    }

    /**
     * The email address associated with the organization.
     */
    public GetCurrentOrganizationResponseBody withEmail(String email) {
        Utils.checkNotNull(email, "email");
        this.email = Optional.ofNullable(email);
        return this;
    }

    /**
     * The email address associated with the organization.
     */
    public GetCurrentOrganizationResponseBody withEmail(Optional<String> email) {
        Utils.checkNotNull(email, "email");
        this.email = email;
        return this;
    }

    /**
     * The preferred locale of the merchant, as set in their Mollie dashboard.
     */
    public GetCurrentOrganizationResponseBody withLocale(String locale) {
        Utils.checkNotNull(locale, "locale");
        this.locale = Optional.ofNullable(locale);
        return this;
    }

    /**
     * The preferred locale of the merchant, as set in their Mollie dashboard.
     */
    public GetCurrentOrganizationResponseBody withLocale(Optional<String> locale) {
        Utils.checkNotNull(locale, "locale");
        this.locale = locale;
        return this;
    }

    /**
     * The address of the organization.
     */
    public GetCurrentOrganizationResponseBody withAddress(GetCurrentOrganizationAddress address) {
        Utils.checkNotNull(address, "address");
        this.address = Optional.ofNullable(address);
        return this;
    }

    /**
     * The address of the organization.
     */
    public GetCurrentOrganizationResponseBody withAddress(Optional<? extends GetCurrentOrganizationAddress> address) {
        Utils.checkNotNull(address, "address");
        this.address = address;
        return this;
    }

    /**
     * The registration number of the organization at their local chamber of commerce.
     */
    public GetCurrentOrganizationResponseBody withRegistrationNumber(String registrationNumber) {
        Utils.checkNotNull(registrationNumber, "registrationNumber");
        this.registrationNumber = Optional.ofNullable(registrationNumber);
        return this;
    }

    /**
     * The registration number of the organization at their local chamber of commerce.
     */
    public GetCurrentOrganizationResponseBody withRegistrationNumber(Optional<String> registrationNumber) {
        Utils.checkNotNull(registrationNumber, "registrationNumber");
        this.registrationNumber = registrationNumber;
        return this;
    }

    /**
     * The VAT number of the organization, if based in the European Union or in The United Kingdom. VAT numbers are verified against the international registry *VIES*.
     * 
     * <p>The field is not present for merchants residing in other countries.
     */
    public GetCurrentOrganizationResponseBody withVatNumber(String vatNumber) {
        Utils.checkNotNull(vatNumber, "vatNumber");
        this.vatNumber = JsonNullable.of(vatNumber);
        return this;
    }

    /**
     * The VAT number of the organization, if based in the European Union or in The United Kingdom. VAT numbers are verified against the international registry *VIES*.
     * 
     * <p>The field is not present for merchants residing in other countries.
     */
    public GetCurrentOrganizationResponseBody withVatNumber(JsonNullable<String> vatNumber) {
        Utils.checkNotNull(vatNumber, "vatNumber");
        this.vatNumber = vatNumber;
        return this;
    }

    /**
     * Mollie applies Dutch VAT for merchants based in The Netherlands, British VAT for merchants based in The United Kingdom, and shifted VAT for merchants in the European Union.
     * 
     * <p>The field is not present for merchants residing in other countries.
     * 
     * <p>Possible values: `dutch` `british` `shifted`
     */
    public GetCurrentOrganizationResponseBody withVatRegulation(String vatRegulation) {
        Utils.checkNotNull(vatRegulation, "vatRegulation");
        this.vatRegulation = JsonNullable.of(vatRegulation);
        return this;
    }

    /**
     * Mollie applies Dutch VAT for merchants based in The Netherlands, British VAT for merchants based in The United Kingdom, and shifted VAT for merchants in the European Union.
     * 
     * <p>The field is not present for merchants residing in other countries.
     * 
     * <p>Possible values: `dutch` `british` `shifted`
     */
    public GetCurrentOrganizationResponseBody withVatRegulation(JsonNullable<String> vatRegulation) {
        Utils.checkNotNull(vatRegulation, "vatRegulation");
        this.vatRegulation = vatRegulation;
        return this;
    }

    /**
     * An object with several relevant URLs. Every URL object will contain an `href` and a `type` field.
     */
    public GetCurrentOrganizationResponseBody withLinks(GetCurrentOrganizationLinks links) {
        Utils.checkNotNull(links, "links");
        this.links = Optional.ofNullable(links);
        return this;
    }

    /**
     * An object with several relevant URLs. Every URL object will contain an `href` and a `type` field.
     */
    public GetCurrentOrganizationResponseBody withLinks(Optional<? extends GetCurrentOrganizationLinks> links) {
        Utils.checkNotNull(links, "links");
        this.links = links;
        return this;
    }

    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        GetCurrentOrganizationResponseBody other = (GetCurrentOrganizationResponseBody) o;
        return 
            Objects.deepEquals(this.resource, other.resource) &&
            Objects.deepEquals(this.id, other.id) &&
            Objects.deepEquals(this.name, other.name) &&
            Objects.deepEquals(this.email, other.email) &&
            Objects.deepEquals(this.locale, other.locale) &&
            Objects.deepEquals(this.address, other.address) &&
            Objects.deepEquals(this.registrationNumber, other.registrationNumber) &&
            Objects.deepEquals(this.vatNumber, other.vatNumber) &&
            Objects.deepEquals(this.vatRegulation, other.vatRegulation) &&
            Objects.deepEquals(this.links, other.links);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            resource,
            id,
            name,
            email,
            locale,
            address,
            registrationNumber,
            vatNumber,
            vatRegulation,
            links);
    }
    
    @Override
    public String toString() {
        return Utils.toString(GetCurrentOrganizationResponseBody.class,
                "resource", resource,
                "id", id,
                "name", name,
                "email", email,
                "locale", locale,
                "address", address,
                "registrationNumber", registrationNumber,
                "vatNumber", vatNumber,
                "vatRegulation", vatRegulation,
                "links", links);
    }
    
    public final static class Builder {
 
        private Optional<String> resource;
 
        private Optional<String> id = Optional.empty();
 
        private Optional<String> name = Optional.empty();
 
        private Optional<String> email = Optional.empty();
 
        private Optional<String> locale = Optional.empty();
 
        private Optional<? extends GetCurrentOrganizationAddress> address = Optional.empty();
 
        private Optional<String> registrationNumber = Optional.empty();
 
        private JsonNullable<String> vatNumber = JsonNullable.undefined();
 
        private JsonNullable<String> vatRegulation = JsonNullable.undefined();
 
        private Optional<? extends GetCurrentOrganizationLinks> links = Optional.empty();
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * Indicates the response contains an organization object. Will always contain the string `organization` for this resource type.
         */
        public Builder resource(String resource) {
            Utils.checkNotNull(resource, "resource");
            this.resource = Optional.ofNullable(resource);
            return this;
        }

        /**
         * Indicates the response contains an organization object. Will always contain the string `organization` for this resource type.
         */
        public Builder resource(Optional<String> resource) {
            Utils.checkNotNull(resource, "resource");
            this.resource = resource;
            return this;
        }

        /**
         * The identifier uniquely referring to this organization. Example: `org_12345678`.
         */
        public Builder id(String id) {
            Utils.checkNotNull(id, "id");
            this.id = Optional.ofNullable(id);
            return this;
        }

        /**
         * The identifier uniquely referring to this organization. Example: `org_12345678`.
         */
        public Builder id(Optional<String> id) {
            Utils.checkNotNull(id, "id");
            this.id = id;
            return this;
        }

        /**
         * The name of the organization.
         */
        public Builder name(String name) {
            Utils.checkNotNull(name, "name");
            this.name = Optional.ofNullable(name);
            return this;
        }

        /**
         * The name of the organization.
         */
        public Builder name(Optional<String> name) {
            Utils.checkNotNull(name, "name");
            this.name = name;
            return this;
        }

        /**
         * The email address associated with the organization.
         */
        public Builder email(String email) {
            Utils.checkNotNull(email, "email");
            this.email = Optional.ofNullable(email);
            return this;
        }

        /**
         * The email address associated with the organization.
         */
        public Builder email(Optional<String> email) {
            Utils.checkNotNull(email, "email");
            this.email = email;
            return this;
        }

        /**
         * The preferred locale of the merchant, as set in their Mollie dashboard.
         */
        public Builder locale(String locale) {
            Utils.checkNotNull(locale, "locale");
            this.locale = Optional.ofNullable(locale);
            return this;
        }

        /**
         * The preferred locale of the merchant, as set in their Mollie dashboard.
         */
        public Builder locale(Optional<String> locale) {
            Utils.checkNotNull(locale, "locale");
            this.locale = locale;
            return this;
        }

        /**
         * The address of the organization.
         */
        public Builder address(GetCurrentOrganizationAddress address) {
            Utils.checkNotNull(address, "address");
            this.address = Optional.ofNullable(address);
            return this;
        }

        /**
         * The address of the organization.
         */
        public Builder address(Optional<? extends GetCurrentOrganizationAddress> address) {
            Utils.checkNotNull(address, "address");
            this.address = address;
            return this;
        }

        /**
         * The registration number of the organization at their local chamber of commerce.
         */
        public Builder registrationNumber(String registrationNumber) {
            Utils.checkNotNull(registrationNumber, "registrationNumber");
            this.registrationNumber = Optional.ofNullable(registrationNumber);
            return this;
        }

        /**
         * The registration number of the organization at their local chamber of commerce.
         */
        public Builder registrationNumber(Optional<String> registrationNumber) {
            Utils.checkNotNull(registrationNumber, "registrationNumber");
            this.registrationNumber = registrationNumber;
            return this;
        }

        /**
         * The VAT number of the organization, if based in the European Union or in The United Kingdom. VAT numbers are verified against the international registry *VIES*.
         * 
         * <p>The field is not present for merchants residing in other countries.
         */
        public Builder vatNumber(String vatNumber) {
            Utils.checkNotNull(vatNumber, "vatNumber");
            this.vatNumber = JsonNullable.of(vatNumber);
            return this;
        }

        /**
         * The VAT number of the organization, if based in the European Union or in The United Kingdom. VAT numbers are verified against the international registry *VIES*.
         * 
         * <p>The field is not present for merchants residing in other countries.
         */
        public Builder vatNumber(JsonNullable<String> vatNumber) {
            Utils.checkNotNull(vatNumber, "vatNumber");
            this.vatNumber = vatNumber;
            return this;
        }

        /**
         * Mollie applies Dutch VAT for merchants based in The Netherlands, British VAT for merchants based in The United Kingdom, and shifted VAT for merchants in the European Union.
         * 
         * <p>The field is not present for merchants residing in other countries.
         * 
         * <p>Possible values: `dutch` `british` `shifted`
         */
        public Builder vatRegulation(String vatRegulation) {
            Utils.checkNotNull(vatRegulation, "vatRegulation");
            this.vatRegulation = JsonNullable.of(vatRegulation);
            return this;
        }

        /**
         * Mollie applies Dutch VAT for merchants based in The Netherlands, British VAT for merchants based in The United Kingdom, and shifted VAT for merchants in the European Union.
         * 
         * <p>The field is not present for merchants residing in other countries.
         * 
         * <p>Possible values: `dutch` `british` `shifted`
         */
        public Builder vatRegulation(JsonNullable<String> vatRegulation) {
            Utils.checkNotNull(vatRegulation, "vatRegulation");
            this.vatRegulation = vatRegulation;
            return this;
        }

        /**
         * An object with several relevant URLs. Every URL object will contain an `href` and a `type` field.
         */
        public Builder links(GetCurrentOrganizationLinks links) {
            Utils.checkNotNull(links, "links");
            this.links = Optional.ofNullable(links);
            return this;
        }

        /**
         * An object with several relevant URLs. Every URL object will contain an `href` and a `type` field.
         */
        public Builder links(Optional<? extends GetCurrentOrganizationLinks> links) {
            Utils.checkNotNull(links, "links");
            this.links = links;
            return this;
        }
        
        public GetCurrentOrganizationResponseBody build() {
            if (resource == null) {
                resource = _SINGLETON_VALUE_Resource.value();
            }
            return new GetCurrentOrganizationResponseBody(
                resource,
                id,
                name,
                email,
                locale,
                address,
                registrationNumber,
                vatNumber,
                vatRegulation,
                links);
        }

        private static final LazySingletonValue<Optional<String>> _SINGLETON_VALUE_Resource =
                new LazySingletonValue<>(
                        "resource",
                        "\"organization\"",
                        new TypeReference<Optional<String>>() {});
    }
}
