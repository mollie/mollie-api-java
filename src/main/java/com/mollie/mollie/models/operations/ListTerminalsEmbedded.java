/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.mollie.mollie.models.operations;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.mollie.mollie.models.components.EntityTerminal;
import com.mollie.mollie.utils.Utils;
import java.lang.Override;
import java.lang.String;
import java.lang.SuppressWarnings;
import java.util.List;
import java.util.Optional;


public class ListTerminalsEmbedded {
    /**
     * An array of terminal objects.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("terminals")
    private Optional<? extends List<EntityTerminal>> terminals;

    @JsonCreator
    public ListTerminalsEmbedded(
            @JsonProperty("terminals") Optional<? extends List<EntityTerminal>> terminals) {
        Utils.checkNotNull(terminals, "terminals");
        this.terminals = terminals;
    }
    
    public ListTerminalsEmbedded() {
        this(Optional.empty());
    }

    /**
     * An array of terminal objects.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<List<EntityTerminal>> terminals() {
        return (Optional<List<EntityTerminal>>) terminals;
    }

    public static Builder builder() {
        return new Builder();
    }


    /**
     * An array of terminal objects.
     */
    public ListTerminalsEmbedded withTerminals(List<EntityTerminal> terminals) {
        Utils.checkNotNull(terminals, "terminals");
        this.terminals = Optional.ofNullable(terminals);
        return this;
    }


    /**
     * An array of terminal objects.
     */
    public ListTerminalsEmbedded withTerminals(Optional<? extends List<EntityTerminal>> terminals) {
        Utils.checkNotNull(terminals, "terminals");
        this.terminals = terminals;
        return this;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ListTerminalsEmbedded other = (ListTerminalsEmbedded) o;
        return 
            Utils.enhancedDeepEquals(this.terminals, other.terminals);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            terminals);
    }
    
    @Override
    public String toString() {
        return Utils.toString(ListTerminalsEmbedded.class,
                "terminals", terminals);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private Optional<? extends List<EntityTerminal>> terminals = Optional.empty();

        private Builder() {
          // force use of static builder() method
        }


        /**
         * An array of terminal objects.
         */
        public Builder terminals(List<EntityTerminal> terminals) {
            Utils.checkNotNull(terminals, "terminals");
            this.terminals = Optional.ofNullable(terminals);
            return this;
        }

        /**
         * An array of terminal objects.
         */
        public Builder terminals(Optional<? extends List<EntityTerminal>> terminals) {
            Utils.checkNotNull(terminals, "terminals");
            this.terminals = terminals;
            return this;
        }

        public ListTerminalsEmbedded build() {

            return new ListTerminalsEmbedded(
                terminals);
        }

    }
}
