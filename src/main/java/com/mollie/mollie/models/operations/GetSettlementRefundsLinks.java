/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.mollie.mollie.models.operations;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.mollie.mollie.utils.Utils;
import java.lang.Override;
import java.lang.String;
import java.lang.SuppressWarnings;
import java.util.Objects;
import java.util.Optional;
import org.openapitools.jackson.nullable.JsonNullable;

/**
 * GetSettlementRefundsLinks
 * 
 * <p>Links to help navigate through the lists of items. Every URL object will contain an `href` and a `type` field.
 */
public class GetSettlementRefundsLinks {

    /**
     * The URL to the current set of items.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("self")
    private Optional<? extends GetSettlementRefundsSelf> self;

    /**
     * The previous set of items, if available.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("previous")
    private JsonNullable<? extends GetSettlementRefundsPrevious> previous;

    /**
     * The next set of items, if available.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("next")
    private JsonNullable<? extends GetSettlementRefundsNext> next;

    /**
     * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("documentation")
    private Optional<? extends GetSettlementRefundsDocumentation> documentation;

    @JsonCreator
    public GetSettlementRefundsLinks(
            @JsonProperty("self") Optional<? extends GetSettlementRefundsSelf> self,
            @JsonProperty("previous") JsonNullable<? extends GetSettlementRefundsPrevious> previous,
            @JsonProperty("next") JsonNullable<? extends GetSettlementRefundsNext> next,
            @JsonProperty("documentation") Optional<? extends GetSettlementRefundsDocumentation> documentation) {
        Utils.checkNotNull(self, "self");
        Utils.checkNotNull(previous, "previous");
        Utils.checkNotNull(next, "next");
        Utils.checkNotNull(documentation, "documentation");
        this.self = self;
        this.previous = previous;
        this.next = next;
        this.documentation = documentation;
    }
    
    public GetSettlementRefundsLinks() {
        this(Optional.empty(), JsonNullable.undefined(), JsonNullable.undefined(), Optional.empty());
    }

    /**
     * The URL to the current set of items.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<GetSettlementRefundsSelf> self() {
        return (Optional<GetSettlementRefundsSelf>) self;
    }

    /**
     * The previous set of items, if available.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public JsonNullable<GetSettlementRefundsPrevious> previous() {
        return (JsonNullable<GetSettlementRefundsPrevious>) previous;
    }

    /**
     * The next set of items, if available.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public JsonNullable<GetSettlementRefundsNext> next() {
        return (JsonNullable<GetSettlementRefundsNext>) next;
    }

    /**
     * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<GetSettlementRefundsDocumentation> documentation() {
        return (Optional<GetSettlementRefundsDocumentation>) documentation;
    }

    public final static Builder builder() {
        return new Builder();
    }    

    /**
     * The URL to the current set of items.
     */
    public GetSettlementRefundsLinks withSelf(GetSettlementRefundsSelf self) {
        Utils.checkNotNull(self, "self");
        this.self = Optional.ofNullable(self);
        return this;
    }

    /**
     * The URL to the current set of items.
     */
    public GetSettlementRefundsLinks withSelf(Optional<? extends GetSettlementRefundsSelf> self) {
        Utils.checkNotNull(self, "self");
        this.self = self;
        return this;
    }

    /**
     * The previous set of items, if available.
     */
    public GetSettlementRefundsLinks withPrevious(GetSettlementRefundsPrevious previous) {
        Utils.checkNotNull(previous, "previous");
        this.previous = JsonNullable.of(previous);
        return this;
    }

    /**
     * The previous set of items, if available.
     */
    public GetSettlementRefundsLinks withPrevious(JsonNullable<? extends GetSettlementRefundsPrevious> previous) {
        Utils.checkNotNull(previous, "previous");
        this.previous = previous;
        return this;
    }

    /**
     * The next set of items, if available.
     */
    public GetSettlementRefundsLinks withNext(GetSettlementRefundsNext next) {
        Utils.checkNotNull(next, "next");
        this.next = JsonNullable.of(next);
        return this;
    }

    /**
     * The next set of items, if available.
     */
    public GetSettlementRefundsLinks withNext(JsonNullable<? extends GetSettlementRefundsNext> next) {
        Utils.checkNotNull(next, "next");
        this.next = next;
        return this;
    }

    /**
     * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
     */
    public GetSettlementRefundsLinks withDocumentation(GetSettlementRefundsDocumentation documentation) {
        Utils.checkNotNull(documentation, "documentation");
        this.documentation = Optional.ofNullable(documentation);
        return this;
    }

    /**
     * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
     */
    public GetSettlementRefundsLinks withDocumentation(Optional<? extends GetSettlementRefundsDocumentation> documentation) {
        Utils.checkNotNull(documentation, "documentation");
        this.documentation = documentation;
        return this;
    }

    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        GetSettlementRefundsLinks other = (GetSettlementRefundsLinks) o;
        return 
            Objects.deepEquals(this.self, other.self) &&
            Objects.deepEquals(this.previous, other.previous) &&
            Objects.deepEquals(this.next, other.next) &&
            Objects.deepEquals(this.documentation, other.documentation);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            self,
            previous,
            next,
            documentation);
    }
    
    @Override
    public String toString() {
        return Utils.toString(GetSettlementRefundsLinks.class,
                "self", self,
                "previous", previous,
                "next", next,
                "documentation", documentation);
    }
    
    public final static class Builder {
 
        private Optional<? extends GetSettlementRefundsSelf> self = Optional.empty();
 
        private JsonNullable<? extends GetSettlementRefundsPrevious> previous = JsonNullable.undefined();
 
        private JsonNullable<? extends GetSettlementRefundsNext> next = JsonNullable.undefined();
 
        private Optional<? extends GetSettlementRefundsDocumentation> documentation = Optional.empty();
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * The URL to the current set of items.
         */
        public Builder self(GetSettlementRefundsSelf self) {
            Utils.checkNotNull(self, "self");
            this.self = Optional.ofNullable(self);
            return this;
        }

        /**
         * The URL to the current set of items.
         */
        public Builder self(Optional<? extends GetSettlementRefundsSelf> self) {
            Utils.checkNotNull(self, "self");
            this.self = self;
            return this;
        }

        /**
         * The previous set of items, if available.
         */
        public Builder previous(GetSettlementRefundsPrevious previous) {
            Utils.checkNotNull(previous, "previous");
            this.previous = JsonNullable.of(previous);
            return this;
        }

        /**
         * The previous set of items, if available.
         */
        public Builder previous(JsonNullable<? extends GetSettlementRefundsPrevious> previous) {
            Utils.checkNotNull(previous, "previous");
            this.previous = previous;
            return this;
        }

        /**
         * The next set of items, if available.
         */
        public Builder next(GetSettlementRefundsNext next) {
            Utils.checkNotNull(next, "next");
            this.next = JsonNullable.of(next);
            return this;
        }

        /**
         * The next set of items, if available.
         */
        public Builder next(JsonNullable<? extends GetSettlementRefundsNext> next) {
            Utils.checkNotNull(next, "next");
            this.next = next;
            return this;
        }

        /**
         * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
         */
        public Builder documentation(GetSettlementRefundsDocumentation documentation) {
            Utils.checkNotNull(documentation, "documentation");
            this.documentation = Optional.ofNullable(documentation);
            return this;
        }

        /**
         * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
         */
        public Builder documentation(Optional<? extends GetSettlementRefundsDocumentation> documentation) {
            Utils.checkNotNull(documentation, "documentation");
            this.documentation = documentation;
            return this;
        }
        
        public GetSettlementRefundsLinks build() {
            return new GetSettlementRefundsLinks(
                self,
                previous,
                next,
                documentation);
        }
    }
}
