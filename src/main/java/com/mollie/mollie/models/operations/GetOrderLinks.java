/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

package com.mollie.mollie.models.operations;


import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.mollie.mollie.utils.Utils;
import java.lang.Override;
import java.lang.String;
import java.lang.SuppressWarnings;
import java.util.Objects;
import java.util.Optional;
import org.openapitools.jackson.nullable.JsonNullable;

/**
 * GetOrderLinks - An object with several relevant URLs. Every URL object will contain an `href` and a `type` field.
 */

public class GetOrderLinks {

    /**
     * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("self")
    private Optional<? extends GetOrderSelf> self;

    /**
     * The URL your customer should visit to make the payment. This is where you should redirect the customer to.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("checkout")
    private JsonNullable<? extends Checkout> checkout;

    /**
     * Direct link to the order in the Mollie dashboard.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dashboard")
    private Optional<? extends GetOrderDashboard> dashboard;

    /**
     * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("documentation")
    private Optional<? extends GetOrderDocumentation> documentation;

    @JsonCreator
    public GetOrderLinks(
            @JsonProperty("self") Optional<? extends GetOrderSelf> self,
            @JsonProperty("checkout") JsonNullable<? extends Checkout> checkout,
            @JsonProperty("dashboard") Optional<? extends GetOrderDashboard> dashboard,
            @JsonProperty("documentation") Optional<? extends GetOrderDocumentation> documentation) {
        Utils.checkNotNull(self, "self");
        Utils.checkNotNull(checkout, "checkout");
        Utils.checkNotNull(dashboard, "dashboard");
        Utils.checkNotNull(documentation, "documentation");
        this.self = self;
        this.checkout = checkout;
        this.dashboard = dashboard;
        this.documentation = documentation;
    }
    
    public GetOrderLinks() {
        this(Optional.empty(), JsonNullable.undefined(), Optional.empty(), Optional.empty());
    }

    /**
     * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<GetOrderSelf> self() {
        return (Optional<GetOrderSelf>) self;
    }

    /**
     * The URL your customer should visit to make the payment. This is where you should redirect the customer to.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public JsonNullable<Checkout> checkout() {
        return (JsonNullable<Checkout>) checkout;
    }

    /**
     * Direct link to the order in the Mollie dashboard.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<GetOrderDashboard> dashboard() {
        return (Optional<GetOrderDashboard>) dashboard;
    }

    /**
     * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<GetOrderDocumentation> documentation() {
        return (Optional<GetOrderDocumentation>) documentation;
    }

    public final static Builder builder() {
        return new Builder();
    }

    /**
     * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
     */
    public GetOrderLinks withSelf(GetOrderSelf self) {
        Utils.checkNotNull(self, "self");
        this.self = Optional.ofNullable(self);
        return this;
    }

    /**
     * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
     */
    public GetOrderLinks withSelf(Optional<? extends GetOrderSelf> self) {
        Utils.checkNotNull(self, "self");
        this.self = self;
        return this;
    }

    /**
     * The URL your customer should visit to make the payment. This is where you should redirect the customer to.
     */
    public GetOrderLinks withCheckout(Checkout checkout) {
        Utils.checkNotNull(checkout, "checkout");
        this.checkout = JsonNullable.of(checkout);
        return this;
    }

    /**
     * The URL your customer should visit to make the payment. This is where you should redirect the customer to.
     */
    public GetOrderLinks withCheckout(JsonNullable<? extends Checkout> checkout) {
        Utils.checkNotNull(checkout, "checkout");
        this.checkout = checkout;
        return this;
    }

    /**
     * Direct link to the order in the Mollie dashboard.
     */
    public GetOrderLinks withDashboard(GetOrderDashboard dashboard) {
        Utils.checkNotNull(dashboard, "dashboard");
        this.dashboard = Optional.ofNullable(dashboard);
        return this;
    }

    /**
     * Direct link to the order in the Mollie dashboard.
     */
    public GetOrderLinks withDashboard(Optional<? extends GetOrderDashboard> dashboard) {
        Utils.checkNotNull(dashboard, "dashboard");
        this.dashboard = dashboard;
        return this;
    }

    /**
     * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
     */
    public GetOrderLinks withDocumentation(GetOrderDocumentation documentation) {
        Utils.checkNotNull(documentation, "documentation");
        this.documentation = Optional.ofNullable(documentation);
        return this;
    }

    /**
     * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
     */
    public GetOrderLinks withDocumentation(Optional<? extends GetOrderDocumentation> documentation) {
        Utils.checkNotNull(documentation, "documentation");
        this.documentation = documentation;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        GetOrderLinks other = (GetOrderLinks) o;
        return 
            Objects.deepEquals(this.self, other.self) &&
            Objects.deepEquals(this.checkout, other.checkout) &&
            Objects.deepEquals(this.dashboard, other.dashboard) &&
            Objects.deepEquals(this.documentation, other.documentation);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            self,
            checkout,
            dashboard,
            documentation);
    }
    
    @Override
    public String toString() {
        return Utils.toString(GetOrderLinks.class,
                "self", self,
                "checkout", checkout,
                "dashboard", dashboard,
                "documentation", documentation);
    }
    
    public final static class Builder {
 
        private Optional<? extends GetOrderSelf> self = Optional.empty();
 
        private JsonNullable<? extends Checkout> checkout = JsonNullable.undefined();
 
        private Optional<? extends GetOrderDashboard> dashboard = Optional.empty();
 
        private Optional<? extends GetOrderDocumentation> documentation = Optional.empty();  
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
         */
        public Builder self(GetOrderSelf self) {
            Utils.checkNotNull(self, "self");
            this.self = Optional.ofNullable(self);
            return this;
        }

        /**
         * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
         */
        public Builder self(Optional<? extends GetOrderSelf> self) {
            Utils.checkNotNull(self, "self");
            this.self = self;
            return this;
        }

        /**
         * The URL your customer should visit to make the payment. This is where you should redirect the customer to.
         */
        public Builder checkout(Checkout checkout) {
            Utils.checkNotNull(checkout, "checkout");
            this.checkout = JsonNullable.of(checkout);
            return this;
        }

        /**
         * The URL your customer should visit to make the payment. This is where you should redirect the customer to.
         */
        public Builder checkout(JsonNullable<? extends Checkout> checkout) {
            Utils.checkNotNull(checkout, "checkout");
            this.checkout = checkout;
            return this;
        }

        /**
         * Direct link to the order in the Mollie dashboard.
         */
        public Builder dashboard(GetOrderDashboard dashboard) {
            Utils.checkNotNull(dashboard, "dashboard");
            this.dashboard = Optional.ofNullable(dashboard);
            return this;
        }

        /**
         * Direct link to the order in the Mollie dashboard.
         */
        public Builder dashboard(Optional<? extends GetOrderDashboard> dashboard) {
            Utils.checkNotNull(dashboard, "dashboard");
            this.dashboard = dashboard;
            return this;
        }

        /**
         * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
         */
        public Builder documentation(GetOrderDocumentation documentation) {
            Utils.checkNotNull(documentation, "documentation");
            this.documentation = Optional.ofNullable(documentation);
            return this;
        }

        /**
         * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
         */
        public Builder documentation(Optional<? extends GetOrderDocumentation> documentation) {
            Utils.checkNotNull(documentation, "documentation");
            this.documentation = documentation;
            return this;
        }
        
        public GetOrderLinks build() {
            return new GetOrderLinks(
                self,
                checkout,
                dashboard,
                documentation);
        }
    }
}

