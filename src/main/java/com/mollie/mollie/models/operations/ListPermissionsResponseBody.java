/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.mollie.mollie.models.operations;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.mollie.mollie.utils.Utils;
import java.lang.Long;
import java.lang.Override;
import java.lang.String;

/**
 * ListPermissionsResponseBody
 * 
 * <p>A list of permission objects.
 */
public class ListPermissionsResponseBody {
    /**
     * The number of items in this result set. If more items are available, a `_links.next` URL will be
     * present in the result
     * as well.
     * 
     * <p>The maximum number of items per result set is controlled by the `limit` property provided in the
     * request. The default
     * limit is 50 items.
     */
    @JsonProperty("count")
    private long count;


    @JsonProperty("_embedded")
    private ListPermissionsEmbedded embedded;

    /**
     * An object with several relevant URLs. Every URL object will contain an `href` and a `type` field.
     */
    @JsonProperty("_links")
    private Links links;

    @JsonCreator
    public ListPermissionsResponseBody(
            @JsonProperty("count") long count,
            @JsonProperty("_embedded") ListPermissionsEmbedded embedded,
            @JsonProperty("_links") Links links) {
        Utils.checkNotNull(count, "count");
        Utils.checkNotNull(embedded, "embedded");
        Utils.checkNotNull(links, "links");
        this.count = count;
        this.embedded = embedded;
        this.links = links;
    }

    /**
     * The number of items in this result set. If more items are available, a `_links.next` URL will be
     * present in the result
     * as well.
     * 
     * <p>The maximum number of items per result set is controlled by the `limit` property provided in the
     * request. The default
     * limit is 50 items.
     */
    @JsonIgnore
    public long count() {
        return count;
    }

    @JsonIgnore
    public ListPermissionsEmbedded embedded() {
        return embedded;
    }

    /**
     * An object with several relevant URLs. Every URL object will contain an `href` and a `type` field.
     */
    @JsonIgnore
    public Links links() {
        return links;
    }

    public static Builder builder() {
        return new Builder();
    }


    /**
     * The number of items in this result set. If more items are available, a `_links.next` URL will be
     * present in the result
     * as well.
     * 
     * <p>The maximum number of items per result set is controlled by the `limit` property provided in the
     * request. The default
     * limit is 50 items.
     */
    public ListPermissionsResponseBody withCount(long count) {
        Utils.checkNotNull(count, "count");
        this.count = count;
        return this;
    }

    public ListPermissionsResponseBody withEmbedded(ListPermissionsEmbedded embedded) {
        Utils.checkNotNull(embedded, "embedded");
        this.embedded = embedded;
        return this;
    }

    /**
     * An object with several relevant URLs. Every URL object will contain an `href` and a `type` field.
     */
    public ListPermissionsResponseBody withLinks(Links links) {
        Utils.checkNotNull(links, "links");
        this.links = links;
        return this;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ListPermissionsResponseBody other = (ListPermissionsResponseBody) o;
        return 
            Utils.enhancedDeepEquals(this.count, other.count) &&
            Utils.enhancedDeepEquals(this.embedded, other.embedded) &&
            Utils.enhancedDeepEquals(this.links, other.links);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            count, embedded, links);
    }
    
    @Override
    public String toString() {
        return Utils.toString(ListPermissionsResponseBody.class,
                "count", count,
                "embedded", embedded,
                "links", links);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private Long count;

        private ListPermissionsEmbedded embedded;

        private Links links;

        private Builder() {
          // force use of static builder() method
        }


        /**
         * The number of items in this result set. If more items are available, a `_links.next` URL will be
         * present in the result
         * as well.
         * 
         * <p>The maximum number of items per result set is controlled by the `limit` property provided in the
         * request. The default
         * limit is 50 items.
         */
        public Builder count(long count) {
            Utils.checkNotNull(count, "count");
            this.count = count;
            return this;
        }


        public Builder embedded(ListPermissionsEmbedded embedded) {
            Utils.checkNotNull(embedded, "embedded");
            this.embedded = embedded;
            return this;
        }


        /**
         * An object with several relevant URLs. Every URL object will contain an `href` and a `type` field.
         */
        public Builder links(Links links) {
            Utils.checkNotNull(links, "links");
            this.links = links;
            return this;
        }

        public ListPermissionsResponseBody build() {

            return new ListPermissionsResponseBody(
                count, embedded, links);
        }

    }
}
