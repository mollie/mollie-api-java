/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.mollie.mollie.models.operations;

import com.fasterxml.jackson.core.type.TypeReference;
import com.mollie.mollie.utils.LazySingletonValue;
import com.mollie.mollie.utils.Options;
import com.mollie.mollie.utils.RetryConfig;
import com.mollie.mollie.utils.Utils;
import java.lang.Boolean;
import java.lang.Exception;
import java.lang.String;
import java.util.Optional;
import org.openapitools.jackson.nullable.JsonNullable;

public class GetPaymentRequestBuilder {

    private String paymentId;
    private JsonNullable<? extends QueryParamInclude> include = JsonNullable.undefined();
    private JsonNullable<? extends Embed> embed = JsonNullable.undefined();
    private JsonNullable<Boolean> testmode = Utils.readDefaultOrConstValue(
                            "testmode",
                            "false",
                            new TypeReference<JsonNullable<Boolean>>() {});
    private Optional<RetryConfig> retryConfig = Optional.empty();
    private final SDKMethodInterfaces.MethodCallGetPayment sdk;

    public GetPaymentRequestBuilder(SDKMethodInterfaces.MethodCallGetPayment sdk) {
        this.sdk = sdk;
    }

    public GetPaymentRequestBuilder paymentId(String paymentId) {
        Utils.checkNotNull(paymentId, "paymentId");
        this.paymentId = paymentId;
        return this;
    }

    public GetPaymentRequestBuilder include(QueryParamInclude include) {
        Utils.checkNotNull(include, "include");
        this.include = JsonNullable.of(include);
        return this;
    }

    public GetPaymentRequestBuilder include(JsonNullable<? extends QueryParamInclude> include) {
        Utils.checkNotNull(include, "include");
        this.include = include;
        return this;
    }

    public GetPaymentRequestBuilder embed(Embed embed) {
        Utils.checkNotNull(embed, "embed");
        this.embed = JsonNullable.of(embed);
        return this;
    }

    public GetPaymentRequestBuilder embed(JsonNullable<? extends Embed> embed) {
        Utils.checkNotNull(embed, "embed");
        this.embed = embed;
        return this;
    }

    public GetPaymentRequestBuilder testmode(boolean testmode) {
        Utils.checkNotNull(testmode, "testmode");
        this.testmode = JsonNullable.of(testmode);
        return this;
    }

    public GetPaymentRequestBuilder testmode(JsonNullable<Boolean> testmode) {
        Utils.checkNotNull(testmode, "testmode");
        this.testmode = testmode;
        return this;
    }
                
    public GetPaymentRequestBuilder retryConfig(RetryConfig retryConfig) {
        Utils.checkNotNull(retryConfig, "retryConfig");
        this.retryConfig = Optional.of(retryConfig);
        return this;
    }

    public GetPaymentRequestBuilder retryConfig(Optional<RetryConfig> retryConfig) {
        Utils.checkNotNull(retryConfig, "retryConfig");
        this.retryConfig = retryConfig;
        return this;
    }

    public GetPaymentResponse call() throws Exception {
        if (testmode == null) {
            testmode = _SINGLETON_VALUE_Testmode.value();
        }        Optional<Options> options = Optional.of(Options.builder()
                                                    .retryConfig(retryConfig)
                                                    .build());
        return sdk.get(
            paymentId,
            include,
            embed,
            testmode,
            options);
    }

    private static final LazySingletonValue<JsonNullable<Boolean>> _SINGLETON_VALUE_Testmode =
            new LazySingletonValue<>(
                    "testmode",
                    "false",
                    new TypeReference<JsonNullable<Boolean>>() {});
}
