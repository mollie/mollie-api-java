/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.mollie.mollie.models.operations;

import com.fasterxml.jackson.annotation.JsonValue;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;

/**
 * GetBalanceReportBalancesResponse200ApplicationHalPlusJsonResponseBodyTotalsPendingBalanceMovedToAvailableTransactionType
 * 
 * <p>Represents the transaction type
 */
public enum GetBalanceReportBalancesResponse200ApplicationHalPlusJsonResponseBodyTotalsPendingBalanceMovedToAvailableTransactionType {
    PAYMENT("payment"),
    SPLIT_PAYMENT("split-payment"),
    FAILED_PAYMENT("failed-payment"),
    FAILED_PLATFORM_SPLIT_PAYMENT("failed-platform-split-payment"),
    FAILED_SPLIT_PAYMENT_COMPENSATION("failed-split-payment-compensation"),
    CAPTURE("capture"),
    SPLIT_TRANSACTION("split-transaction"),
    REFUND("refund"),
    PLATFORM_PAYMENT_REFUND("platform-payment-refund"),
    RETURNED_PLATFORM_PAYMENT_REFUND("returned-platform-payment-refund"),
    REFUND_COMPENSATION("refund-compensation"),
    RETURNED_REFUND_COMPENSATION("returned-refund-compensation"),
    RETURNED_REFUND("returned-refund"),
    CHARGEBACK("chargeback"),
    CHARGEBACK_REVERSAL("chargeback-reversal"),
    CHARGEBACK_COMPENSATION("chargeback-compensation"),
    REVERSED_CHARGEBACK_COMPENSATION("reversed-chargeback-compensation"),
    PLATFORM_PAYMENT_CHARGEBACK("platform-payment-chargeback"),
    REVERSED_PLATFORM_PAYMENT_CHARGEBACK("reversed-platform-payment-chargeback"),
    FEE_PREPAYMENT("fee-prepayment"),
    OUTGOING_TRANSFER("outgoing-transfer"),
    INCOMING_TRANSFER("incoming-transfer"),
    CANCELED_TRANSFER("canceled-transfer"),
    RETURNED_TRANSFER("returned-transfer"),
    BALANCE_RESERVE("balance-reserve"),
    BALANCE_RESERVE_RETURN("balance-reserve-return"),
    INVOICE_ROUNDING_COMPENSATION("invoice-rounding-compensation"),
    ROLLING_RESERVE_HOLD("rolling-reserve-hold"),
    ROLLING_RESERVE_RELEASE("rolling-reserve-release"),
    BALANCE_CORRECTION("balance-correction"),
    REPAYMENT("repayment"),
    LOAN("loan"),
    BALANCE_TOPUP("balance-topup"),
    CASH_COLLATERAL_ISSUANCE("cash-collateral-issuance';"),
    CASH_COLLATERAL_RELEASE("cash-collateral-release"),
    PENDING_ROLLING_RESERVE("pending-rolling-reserve"),
    TO_BE_RELEASED_ROLLING_RESERVE("to-be-released-rolling-reserve"),
    HELD_ROLLING_RESERVE("held-rolling-reserve"),
    RELEASED_ROLLING_RESERVE("released-rolling-reserve");

    @JsonValue
    private final String value;

    GetBalanceReportBalancesResponse200ApplicationHalPlusJsonResponseBodyTotalsPendingBalanceMovedToAvailableTransactionType(String value) {
        this.value = value;
    }
    
    public String value() {
        return value;
    }
    
    public static Optional<GetBalanceReportBalancesResponse200ApplicationHalPlusJsonResponseBodyTotalsPendingBalanceMovedToAvailableTransactionType> fromValue(String value) {
        for (GetBalanceReportBalancesResponse200ApplicationHalPlusJsonResponseBodyTotalsPendingBalanceMovedToAvailableTransactionType o: GetBalanceReportBalancesResponse200ApplicationHalPlusJsonResponseBodyTotalsPendingBalanceMovedToAvailableTransactionType.values()) {
            if (Objects.deepEquals(o.value, value)) {
                return Optional.of(o);
            }
        }
        return Optional.empty();
    }
}

