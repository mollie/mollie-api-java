/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.mollie.mollie.models.operations.async;

import static com.mollie.mollie.operations.Operations.AsyncRequestlessOperation;

import com.mollie.mollie.SDKConfiguration;
import com.mollie.mollie.operations.GetOnboardingStatus;
import com.mollie.mollie.utils.Options;
import com.mollie.mollie.utils.RetryConfig;
import com.mollie.mollie.utils.Utils;
import java.lang.Exception;
import java.util.Optional;
import java.util.concurrent.CompletableFuture;

public class GetOnboardingStatusRequestBuilder {

    private Optional<RetryConfig> retryConfig = Optional.empty();
    private final SDKConfiguration sdkConfiguration;

    public GetOnboardingStatusRequestBuilder(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
    }
                
    public GetOnboardingStatusRequestBuilder retryConfig(RetryConfig retryConfig) {
        Utils.checkNotNull(retryConfig, "retryConfig");
        this.retryConfig = Optional.of(retryConfig);
        return this;
    }

    public GetOnboardingStatusRequestBuilder retryConfig(Optional<RetryConfig> retryConfig) {
        Utils.checkNotNull(retryConfig, "retryConfig");
        this.retryConfig = retryConfig;
        return this;
    }

    public CompletableFuture<GetOnboardingStatusResponse> call() throws Exception {
        Optional<Options> options = Optional.of(Options.builder()
            .retryConfig(retryConfig)
            .build());

        AsyncRequestlessOperation<GetOnboardingStatusResponse> operation
            = new GetOnboardingStatus.Async(sdkConfiguration, options, sdkConfiguration.retryScheduler());

        return operation.doRequest()
            .thenCompose(operation::handleResponse);
    }
}
