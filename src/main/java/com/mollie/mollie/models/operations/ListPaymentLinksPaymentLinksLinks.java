/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.mollie.mollie.models.operations;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.mollie.mollie.utils.Utils;
import java.lang.Override;
import java.lang.String;
import java.lang.SuppressWarnings;
import java.util.Objects;
import java.util.Optional;

/**
 * ListPaymentLinksPaymentLinksLinks
 * 
 * <p>An object with several relevant URLs. Every URL object will contain an `href` and a `type` field.
 */
public class ListPaymentLinksPaymentLinksLinks {

    /**
     * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("self")
    private Optional<? extends ListPaymentLinksPaymentLinksSelf> self;

    /**
     * The URL your customer should visit to make the payment. This is where you should redirect the customer to.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("paymentLink")
    private Optional<? extends ListPaymentLinksPaymentLink> paymentLink;

    /**
     * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("documentation")
    private Optional<? extends ListPaymentLinksPaymentLinksDocumentation> documentation;

    @JsonCreator
    public ListPaymentLinksPaymentLinksLinks(
            @JsonProperty("self") Optional<? extends ListPaymentLinksPaymentLinksSelf> self,
            @JsonProperty("paymentLink") Optional<? extends ListPaymentLinksPaymentLink> paymentLink,
            @JsonProperty("documentation") Optional<? extends ListPaymentLinksPaymentLinksDocumentation> documentation) {
        Utils.checkNotNull(self, "self");
        Utils.checkNotNull(paymentLink, "paymentLink");
        Utils.checkNotNull(documentation, "documentation");
        this.self = self;
        this.paymentLink = paymentLink;
        this.documentation = documentation;
    }
    
    public ListPaymentLinksPaymentLinksLinks() {
        this(Optional.empty(), Optional.empty(), Optional.empty());
    }

    /**
     * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<ListPaymentLinksPaymentLinksSelf> self() {
        return (Optional<ListPaymentLinksPaymentLinksSelf>) self;
    }

    /**
     * The URL your customer should visit to make the payment. This is where you should redirect the customer to.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<ListPaymentLinksPaymentLink> paymentLink() {
        return (Optional<ListPaymentLinksPaymentLink>) paymentLink;
    }

    /**
     * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<ListPaymentLinksPaymentLinksDocumentation> documentation() {
        return (Optional<ListPaymentLinksPaymentLinksDocumentation>) documentation;
    }

    public final static Builder builder() {
        return new Builder();
    }    

    /**
     * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
     */
    public ListPaymentLinksPaymentLinksLinks withSelf(ListPaymentLinksPaymentLinksSelf self) {
        Utils.checkNotNull(self, "self");
        this.self = Optional.ofNullable(self);
        return this;
    }

    /**
     * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
     */
    public ListPaymentLinksPaymentLinksLinks withSelf(Optional<? extends ListPaymentLinksPaymentLinksSelf> self) {
        Utils.checkNotNull(self, "self");
        this.self = self;
        return this;
    }

    /**
     * The URL your customer should visit to make the payment. This is where you should redirect the customer to.
     */
    public ListPaymentLinksPaymentLinksLinks withPaymentLink(ListPaymentLinksPaymentLink paymentLink) {
        Utils.checkNotNull(paymentLink, "paymentLink");
        this.paymentLink = Optional.ofNullable(paymentLink);
        return this;
    }

    /**
     * The URL your customer should visit to make the payment. This is where you should redirect the customer to.
     */
    public ListPaymentLinksPaymentLinksLinks withPaymentLink(Optional<? extends ListPaymentLinksPaymentLink> paymentLink) {
        Utils.checkNotNull(paymentLink, "paymentLink");
        this.paymentLink = paymentLink;
        return this;
    }

    /**
     * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
     */
    public ListPaymentLinksPaymentLinksLinks withDocumentation(ListPaymentLinksPaymentLinksDocumentation documentation) {
        Utils.checkNotNull(documentation, "documentation");
        this.documentation = Optional.ofNullable(documentation);
        return this;
    }

    /**
     * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
     */
    public ListPaymentLinksPaymentLinksLinks withDocumentation(Optional<? extends ListPaymentLinksPaymentLinksDocumentation> documentation) {
        Utils.checkNotNull(documentation, "documentation");
        this.documentation = documentation;
        return this;
    }

    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ListPaymentLinksPaymentLinksLinks other = (ListPaymentLinksPaymentLinksLinks) o;
        return 
            Objects.deepEquals(this.self, other.self) &&
            Objects.deepEquals(this.paymentLink, other.paymentLink) &&
            Objects.deepEquals(this.documentation, other.documentation);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            self,
            paymentLink,
            documentation);
    }
    
    @Override
    public String toString() {
        return Utils.toString(ListPaymentLinksPaymentLinksLinks.class,
                "self", self,
                "paymentLink", paymentLink,
                "documentation", documentation);
    }
    
    public final static class Builder {
 
        private Optional<? extends ListPaymentLinksPaymentLinksSelf> self = Optional.empty();
 
        private Optional<? extends ListPaymentLinksPaymentLink> paymentLink = Optional.empty();
 
        private Optional<? extends ListPaymentLinksPaymentLinksDocumentation> documentation = Optional.empty();
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
         */
        public Builder self(ListPaymentLinksPaymentLinksSelf self) {
            Utils.checkNotNull(self, "self");
            this.self = Optional.ofNullable(self);
            return this;
        }

        /**
         * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
         */
        public Builder self(Optional<? extends ListPaymentLinksPaymentLinksSelf> self) {
            Utils.checkNotNull(self, "self");
            this.self = self;
            return this;
        }

        /**
         * The URL your customer should visit to make the payment. This is where you should redirect the customer to.
         */
        public Builder paymentLink(ListPaymentLinksPaymentLink paymentLink) {
            Utils.checkNotNull(paymentLink, "paymentLink");
            this.paymentLink = Optional.ofNullable(paymentLink);
            return this;
        }

        /**
         * The URL your customer should visit to make the payment. This is where you should redirect the customer to.
         */
        public Builder paymentLink(Optional<? extends ListPaymentLinksPaymentLink> paymentLink) {
            Utils.checkNotNull(paymentLink, "paymentLink");
            this.paymentLink = paymentLink;
            return this;
        }

        /**
         * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
         */
        public Builder documentation(ListPaymentLinksPaymentLinksDocumentation documentation) {
            Utils.checkNotNull(documentation, "documentation");
            this.documentation = Optional.ofNullable(documentation);
            return this;
        }

        /**
         * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
         */
        public Builder documentation(Optional<? extends ListPaymentLinksPaymentLinksDocumentation> documentation) {
            Utils.checkNotNull(documentation, "documentation");
            this.documentation = documentation;
            return this;
        }
        
        public ListPaymentLinksPaymentLinksLinks build() {
            return new ListPaymentLinksPaymentLinksLinks(
                self,
                paymentLink,
                documentation);
        }
    }
}
