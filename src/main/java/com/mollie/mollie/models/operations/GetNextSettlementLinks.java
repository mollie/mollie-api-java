/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.mollie.mollie.models.operations;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.mollie.mollie.utils.Utils;
import java.lang.Override;
import java.lang.String;
import java.lang.SuppressWarnings;
import java.util.Optional;
import org.openapitools.jackson.nullable.JsonNullable;

/**
 * GetNextSettlementLinks
 * 
 * <p>An object with several relevant URLs. Every URL object will contain an `href` and a `type` field.
 */
public class GetNextSettlementLinks {
    /**
     * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("self")
    private Optional<? extends GetNextSettlementSelf> self;

    /**
     * The API resource URL of the [payments](list-payments) included in this settlement.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("payments")
    private Optional<? extends GetNextSettlementPayments> payments;

    /**
     * The API resource URL of the [captures](list-captures) included in this settlement.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("captures")
    private Optional<? extends GetNextSettlementCaptures> captures;

    /**
     * The API resource URL of the [refunds](list-refunds) deducted from this settlement.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("refunds")
    private Optional<? extends GetNextSettlementRefunds> refunds;

    /**
     * The API resource URL of the [chargebacks](list-chargebacks) deducted from this settlement.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("chargebacks")
    private Optional<? extends GetNextSettlementChargebacks> chargebacks;

    /**
     * The API resource URL of the [invoice](list-invoices).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("invoice")
    private JsonNullable<? extends GetNextSettlementInvoice> invoice;

    /**
     * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("documentation")
    private Optional<? extends GetNextSettlementDocumentation> documentation;

    @JsonCreator
    public GetNextSettlementLinks(
            @JsonProperty("self") Optional<? extends GetNextSettlementSelf> self,
            @JsonProperty("payments") Optional<? extends GetNextSettlementPayments> payments,
            @JsonProperty("captures") Optional<? extends GetNextSettlementCaptures> captures,
            @JsonProperty("refunds") Optional<? extends GetNextSettlementRefunds> refunds,
            @JsonProperty("chargebacks") Optional<? extends GetNextSettlementChargebacks> chargebacks,
            @JsonProperty("invoice") JsonNullable<? extends GetNextSettlementInvoice> invoice,
            @JsonProperty("documentation") Optional<? extends GetNextSettlementDocumentation> documentation) {
        Utils.checkNotNull(self, "self");
        Utils.checkNotNull(payments, "payments");
        Utils.checkNotNull(captures, "captures");
        Utils.checkNotNull(refunds, "refunds");
        Utils.checkNotNull(chargebacks, "chargebacks");
        Utils.checkNotNull(invoice, "invoice");
        Utils.checkNotNull(documentation, "documentation");
        this.self = self;
        this.payments = payments;
        this.captures = captures;
        this.refunds = refunds;
        this.chargebacks = chargebacks;
        this.invoice = invoice;
        this.documentation = documentation;
    }
    
    public GetNextSettlementLinks() {
        this(Optional.empty(), Optional.empty(), Optional.empty(),
            Optional.empty(), Optional.empty(), JsonNullable.undefined(),
            Optional.empty());
    }

    /**
     * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<GetNextSettlementSelf> self() {
        return (Optional<GetNextSettlementSelf>) self;
    }

    /**
     * The API resource URL of the [payments](list-payments) included in this settlement.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<GetNextSettlementPayments> payments() {
        return (Optional<GetNextSettlementPayments>) payments;
    }

    /**
     * The API resource URL of the [captures](list-captures) included in this settlement.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<GetNextSettlementCaptures> captures() {
        return (Optional<GetNextSettlementCaptures>) captures;
    }

    /**
     * The API resource URL of the [refunds](list-refunds) deducted from this settlement.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<GetNextSettlementRefunds> refunds() {
        return (Optional<GetNextSettlementRefunds>) refunds;
    }

    /**
     * The API resource URL of the [chargebacks](list-chargebacks) deducted from this settlement.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<GetNextSettlementChargebacks> chargebacks() {
        return (Optional<GetNextSettlementChargebacks>) chargebacks;
    }

    /**
     * The API resource URL of the [invoice](list-invoices).
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public JsonNullable<GetNextSettlementInvoice> invoice() {
        return (JsonNullable<GetNextSettlementInvoice>) invoice;
    }

    /**
     * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<GetNextSettlementDocumentation> documentation() {
        return (Optional<GetNextSettlementDocumentation>) documentation;
    }

    public static Builder builder() {
        return new Builder();
    }


    /**
     * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
     */
    public GetNextSettlementLinks withSelf(GetNextSettlementSelf self) {
        Utils.checkNotNull(self, "self");
        this.self = Optional.ofNullable(self);
        return this;
    }


    /**
     * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
     */
    public GetNextSettlementLinks withSelf(Optional<? extends GetNextSettlementSelf> self) {
        Utils.checkNotNull(self, "self");
        this.self = self;
        return this;
    }

    /**
     * The API resource URL of the [payments](list-payments) included in this settlement.
     */
    public GetNextSettlementLinks withPayments(GetNextSettlementPayments payments) {
        Utils.checkNotNull(payments, "payments");
        this.payments = Optional.ofNullable(payments);
        return this;
    }


    /**
     * The API resource URL of the [payments](list-payments) included in this settlement.
     */
    public GetNextSettlementLinks withPayments(Optional<? extends GetNextSettlementPayments> payments) {
        Utils.checkNotNull(payments, "payments");
        this.payments = payments;
        return this;
    }

    /**
     * The API resource URL of the [captures](list-captures) included in this settlement.
     */
    public GetNextSettlementLinks withCaptures(GetNextSettlementCaptures captures) {
        Utils.checkNotNull(captures, "captures");
        this.captures = Optional.ofNullable(captures);
        return this;
    }


    /**
     * The API resource URL of the [captures](list-captures) included in this settlement.
     */
    public GetNextSettlementLinks withCaptures(Optional<? extends GetNextSettlementCaptures> captures) {
        Utils.checkNotNull(captures, "captures");
        this.captures = captures;
        return this;
    }

    /**
     * The API resource URL of the [refunds](list-refunds) deducted from this settlement.
     */
    public GetNextSettlementLinks withRefunds(GetNextSettlementRefunds refunds) {
        Utils.checkNotNull(refunds, "refunds");
        this.refunds = Optional.ofNullable(refunds);
        return this;
    }


    /**
     * The API resource URL of the [refunds](list-refunds) deducted from this settlement.
     */
    public GetNextSettlementLinks withRefunds(Optional<? extends GetNextSettlementRefunds> refunds) {
        Utils.checkNotNull(refunds, "refunds");
        this.refunds = refunds;
        return this;
    }

    /**
     * The API resource URL of the [chargebacks](list-chargebacks) deducted from this settlement.
     */
    public GetNextSettlementLinks withChargebacks(GetNextSettlementChargebacks chargebacks) {
        Utils.checkNotNull(chargebacks, "chargebacks");
        this.chargebacks = Optional.ofNullable(chargebacks);
        return this;
    }


    /**
     * The API resource URL of the [chargebacks](list-chargebacks) deducted from this settlement.
     */
    public GetNextSettlementLinks withChargebacks(Optional<? extends GetNextSettlementChargebacks> chargebacks) {
        Utils.checkNotNull(chargebacks, "chargebacks");
        this.chargebacks = chargebacks;
        return this;
    }

    /**
     * The API resource URL of the [invoice](list-invoices).
     */
    public GetNextSettlementLinks withInvoice(GetNextSettlementInvoice invoice) {
        Utils.checkNotNull(invoice, "invoice");
        this.invoice = JsonNullable.of(invoice);
        return this;
    }

    /**
     * The API resource URL of the [invoice](list-invoices).
     */
    public GetNextSettlementLinks withInvoice(JsonNullable<? extends GetNextSettlementInvoice> invoice) {
        Utils.checkNotNull(invoice, "invoice");
        this.invoice = invoice;
        return this;
    }

    /**
     * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
     */
    public GetNextSettlementLinks withDocumentation(GetNextSettlementDocumentation documentation) {
        Utils.checkNotNull(documentation, "documentation");
        this.documentation = Optional.ofNullable(documentation);
        return this;
    }


    /**
     * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
     */
    public GetNextSettlementLinks withDocumentation(Optional<? extends GetNextSettlementDocumentation> documentation) {
        Utils.checkNotNull(documentation, "documentation");
        this.documentation = documentation;
        return this;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        GetNextSettlementLinks other = (GetNextSettlementLinks) o;
        return 
            Utils.enhancedDeepEquals(this.self, other.self) &&
            Utils.enhancedDeepEquals(this.payments, other.payments) &&
            Utils.enhancedDeepEquals(this.captures, other.captures) &&
            Utils.enhancedDeepEquals(this.refunds, other.refunds) &&
            Utils.enhancedDeepEquals(this.chargebacks, other.chargebacks) &&
            Utils.enhancedDeepEquals(this.invoice, other.invoice) &&
            Utils.enhancedDeepEquals(this.documentation, other.documentation);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            self, payments, captures,
            refunds, chargebacks, invoice,
            documentation);
    }
    
    @Override
    public String toString() {
        return Utils.toString(GetNextSettlementLinks.class,
                "self", self,
                "payments", payments,
                "captures", captures,
                "refunds", refunds,
                "chargebacks", chargebacks,
                "invoice", invoice,
                "documentation", documentation);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private Optional<? extends GetNextSettlementSelf> self = Optional.empty();

        private Optional<? extends GetNextSettlementPayments> payments = Optional.empty();

        private Optional<? extends GetNextSettlementCaptures> captures = Optional.empty();

        private Optional<? extends GetNextSettlementRefunds> refunds = Optional.empty();

        private Optional<? extends GetNextSettlementChargebacks> chargebacks = Optional.empty();

        private JsonNullable<? extends GetNextSettlementInvoice> invoice = JsonNullable.undefined();

        private Optional<? extends GetNextSettlementDocumentation> documentation = Optional.empty();

        private Builder() {
          // force use of static builder() method
        }


        /**
         * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
         */
        public Builder self(GetNextSettlementSelf self) {
            Utils.checkNotNull(self, "self");
            this.self = Optional.ofNullable(self);
            return this;
        }

        /**
         * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
         */
        public Builder self(Optional<? extends GetNextSettlementSelf> self) {
            Utils.checkNotNull(self, "self");
            this.self = self;
            return this;
        }


        /**
         * The API resource URL of the [payments](list-payments) included in this settlement.
         */
        public Builder payments(GetNextSettlementPayments payments) {
            Utils.checkNotNull(payments, "payments");
            this.payments = Optional.ofNullable(payments);
            return this;
        }

        /**
         * The API resource URL of the [payments](list-payments) included in this settlement.
         */
        public Builder payments(Optional<? extends GetNextSettlementPayments> payments) {
            Utils.checkNotNull(payments, "payments");
            this.payments = payments;
            return this;
        }


        /**
         * The API resource URL of the [captures](list-captures) included in this settlement.
         */
        public Builder captures(GetNextSettlementCaptures captures) {
            Utils.checkNotNull(captures, "captures");
            this.captures = Optional.ofNullable(captures);
            return this;
        }

        /**
         * The API resource URL of the [captures](list-captures) included in this settlement.
         */
        public Builder captures(Optional<? extends GetNextSettlementCaptures> captures) {
            Utils.checkNotNull(captures, "captures");
            this.captures = captures;
            return this;
        }


        /**
         * The API resource URL of the [refunds](list-refunds) deducted from this settlement.
         */
        public Builder refunds(GetNextSettlementRefunds refunds) {
            Utils.checkNotNull(refunds, "refunds");
            this.refunds = Optional.ofNullable(refunds);
            return this;
        }

        /**
         * The API resource URL of the [refunds](list-refunds) deducted from this settlement.
         */
        public Builder refunds(Optional<? extends GetNextSettlementRefunds> refunds) {
            Utils.checkNotNull(refunds, "refunds");
            this.refunds = refunds;
            return this;
        }


        /**
         * The API resource URL of the [chargebacks](list-chargebacks) deducted from this settlement.
         */
        public Builder chargebacks(GetNextSettlementChargebacks chargebacks) {
            Utils.checkNotNull(chargebacks, "chargebacks");
            this.chargebacks = Optional.ofNullable(chargebacks);
            return this;
        }

        /**
         * The API resource URL of the [chargebacks](list-chargebacks) deducted from this settlement.
         */
        public Builder chargebacks(Optional<? extends GetNextSettlementChargebacks> chargebacks) {
            Utils.checkNotNull(chargebacks, "chargebacks");
            this.chargebacks = chargebacks;
            return this;
        }


        /**
         * The API resource URL of the [invoice](list-invoices).
         */
        public Builder invoice(GetNextSettlementInvoice invoice) {
            Utils.checkNotNull(invoice, "invoice");
            this.invoice = JsonNullable.of(invoice);
            return this;
        }

        /**
         * The API resource URL of the [invoice](list-invoices).
         */
        public Builder invoice(JsonNullable<? extends GetNextSettlementInvoice> invoice) {
            Utils.checkNotNull(invoice, "invoice");
            this.invoice = invoice;
            return this;
        }


        /**
         * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
         */
        public Builder documentation(GetNextSettlementDocumentation documentation) {
            Utils.checkNotNull(documentation, "documentation");
            this.documentation = Optional.ofNullable(documentation);
            return this;
        }

        /**
         * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
         */
        public Builder documentation(Optional<? extends GetNextSettlementDocumentation> documentation) {
            Utils.checkNotNull(documentation, "documentation");
            this.documentation = documentation;
            return this;
        }

        public GetNextSettlementLinks build() {

            return new GetNextSettlementLinks(
                self, payments, captures,
                refunds, chargebacks, invoice,
                documentation);
        }

    }
}
