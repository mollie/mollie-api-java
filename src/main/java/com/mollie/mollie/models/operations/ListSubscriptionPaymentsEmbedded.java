/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

package com.mollie.mollie.models.operations;


import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.mollie.mollie.utils.Utils;
import java.lang.Override;
import java.lang.String;
import java.lang.SuppressWarnings;
import java.util.List;
import java.util.Objects;
import java.util.Optional;


public class ListSubscriptionPaymentsEmbedded {

    /**
     * An array of payment objects. For a complete reference of the payment object, refer to the [Get payment endpoint](get-payment) documentation.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("payments")
    private Optional<? extends List<ListSubscriptionPaymentsPayments>> payments;

    @JsonCreator
    public ListSubscriptionPaymentsEmbedded(
            @JsonProperty("payments") Optional<? extends List<ListSubscriptionPaymentsPayments>> payments) {
        Utils.checkNotNull(payments, "payments");
        this.payments = payments;
    }
    
    public ListSubscriptionPaymentsEmbedded() {
        this(Optional.empty());
    }

    /**
     * An array of payment objects. For a complete reference of the payment object, refer to the [Get payment endpoint](get-payment) documentation.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<List<ListSubscriptionPaymentsPayments>> payments() {
        return (Optional<List<ListSubscriptionPaymentsPayments>>) payments;
    }

    public final static Builder builder() {
        return new Builder();
    }

    /**
     * An array of payment objects. For a complete reference of the payment object, refer to the [Get payment endpoint](get-payment) documentation.
     */
    public ListSubscriptionPaymentsEmbedded withPayments(List<ListSubscriptionPaymentsPayments> payments) {
        Utils.checkNotNull(payments, "payments");
        this.payments = Optional.ofNullable(payments);
        return this;
    }

    /**
     * An array of payment objects. For a complete reference of the payment object, refer to the [Get payment endpoint](get-payment) documentation.
     */
    public ListSubscriptionPaymentsEmbedded withPayments(Optional<? extends List<ListSubscriptionPaymentsPayments>> payments) {
        Utils.checkNotNull(payments, "payments");
        this.payments = payments;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ListSubscriptionPaymentsEmbedded other = (ListSubscriptionPaymentsEmbedded) o;
        return 
            Objects.deepEquals(this.payments, other.payments);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            payments);
    }
    
    @Override
    public String toString() {
        return Utils.toString(ListSubscriptionPaymentsEmbedded.class,
                "payments", payments);
    }
    
    public final static class Builder {
 
        private Optional<? extends List<ListSubscriptionPaymentsPayments>> payments = Optional.empty();  
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * An array of payment objects. For a complete reference of the payment object, refer to the [Get payment endpoint](get-payment) documentation.
         */
        public Builder payments(List<ListSubscriptionPaymentsPayments> payments) {
            Utils.checkNotNull(payments, "payments");
            this.payments = Optional.ofNullable(payments);
            return this;
        }

        /**
         * An array of payment objects. For a complete reference of the payment object, refer to the [Get payment endpoint](get-payment) documentation.
         */
        public Builder payments(Optional<? extends List<ListSubscriptionPaymentsPayments>> payments) {
            Utils.checkNotNull(payments, "payments");
            this.payments = payments;
            return this;
        }
        
        public ListSubscriptionPaymentsEmbedded build() {
            return new ListSubscriptionPaymentsEmbedded(
                payments);
        }
    }
}

