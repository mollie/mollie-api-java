/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.mollie.mollie.models.operations;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.mollie.mollie.models.components.EntityBalanceTransferResponse;
import com.mollie.mollie.utils.Utils;
import java.lang.Override;
import java.lang.String;
import java.util.List;


public class ListConnectBalanceTransfersEmbedded {
    /**
     * A list of Connect balance transfers.
     */
    @JsonProperty("connect_balance_transfers")
    private List<EntityBalanceTransferResponse> connectBalanceTransfers;

    @JsonCreator
    public ListConnectBalanceTransfersEmbedded(
            @JsonProperty("connect_balance_transfers") List<EntityBalanceTransferResponse> connectBalanceTransfers) {
        Utils.checkNotNull(connectBalanceTransfers, "connectBalanceTransfers");
        this.connectBalanceTransfers = connectBalanceTransfers;
    }

    /**
     * A list of Connect balance transfers.
     */
    @JsonIgnore
    public List<EntityBalanceTransferResponse> connectBalanceTransfers() {
        return connectBalanceTransfers;
    }

    public static Builder builder() {
        return new Builder();
    }


    /**
     * A list of Connect balance transfers.
     */
    public ListConnectBalanceTransfersEmbedded withConnectBalanceTransfers(List<EntityBalanceTransferResponse> connectBalanceTransfers) {
        Utils.checkNotNull(connectBalanceTransfers, "connectBalanceTransfers");
        this.connectBalanceTransfers = connectBalanceTransfers;
        return this;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ListConnectBalanceTransfersEmbedded other = (ListConnectBalanceTransfersEmbedded) o;
        return 
            Utils.enhancedDeepEquals(this.connectBalanceTransfers, other.connectBalanceTransfers);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            connectBalanceTransfers);
    }
    
    @Override
    public String toString() {
        return Utils.toString(ListConnectBalanceTransfersEmbedded.class,
                "connectBalanceTransfers", connectBalanceTransfers);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private List<EntityBalanceTransferResponse> connectBalanceTransfers;

        private Builder() {
          // force use of static builder() method
        }


        /**
         * A list of Connect balance transfers.
         */
        public Builder connectBalanceTransfers(List<EntityBalanceTransferResponse> connectBalanceTransfers) {
            Utils.checkNotNull(connectBalanceTransfers, "connectBalanceTransfers");
            this.connectBalanceTransfers = connectBalanceTransfers;
            return this;
        }

        public ListConnectBalanceTransfersEmbedded build() {

            return new ListConnectBalanceTransfersEmbedded(
                connectBalanceTransfers);
        }

    }
}
