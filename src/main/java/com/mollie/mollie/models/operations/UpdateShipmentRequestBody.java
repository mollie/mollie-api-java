/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

package com.mollie.mollie.models.operations;


import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.mollie.mollie.utils.Utils;
import java.lang.Override;
import java.lang.String;
import java.lang.SuppressWarnings;
import java.util.Objects;
import org.openapitools.jackson.nullable.JsonNullable;


public class UpdateShipmentRequestBody {

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tracking")
    private JsonNullable<? extends UpdateShipmentTracking> tracking;

    @JsonCreator
    public UpdateShipmentRequestBody(
            @JsonProperty("tracking") JsonNullable<? extends UpdateShipmentTracking> tracking) {
        Utils.checkNotNull(tracking, "tracking");
        this.tracking = tracking;
    }
    
    public UpdateShipmentRequestBody() {
        this(JsonNullable.undefined());
    }

    @SuppressWarnings("unchecked")
    @JsonIgnore
    public JsonNullable<UpdateShipmentTracking> tracking() {
        return (JsonNullable<UpdateShipmentTracking>) tracking;
    }

    public final static Builder builder() {
        return new Builder();
    }

    public UpdateShipmentRequestBody withTracking(UpdateShipmentTracking tracking) {
        Utils.checkNotNull(tracking, "tracking");
        this.tracking = JsonNullable.of(tracking);
        return this;
    }

    public UpdateShipmentRequestBody withTracking(JsonNullable<? extends UpdateShipmentTracking> tracking) {
        Utils.checkNotNull(tracking, "tracking");
        this.tracking = tracking;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        UpdateShipmentRequestBody other = (UpdateShipmentRequestBody) o;
        return 
            Objects.deepEquals(this.tracking, other.tracking);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            tracking);
    }
    
    @Override
    public String toString() {
        return Utils.toString(UpdateShipmentRequestBody.class,
                "tracking", tracking);
    }
    
    public final static class Builder {
 
        private JsonNullable<? extends UpdateShipmentTracking> tracking = JsonNullable.undefined();  
        
        private Builder() {
          // force use of static builder() method
        }

        public Builder tracking(UpdateShipmentTracking tracking) {
            Utils.checkNotNull(tracking, "tracking");
            this.tracking = JsonNullable.of(tracking);
            return this;
        }

        public Builder tracking(JsonNullable<? extends UpdateShipmentTracking> tracking) {
            Utils.checkNotNull(tracking, "tracking");
            this.tracking = tracking;
            return this;
        }
        
        public UpdateShipmentRequestBody build() {
            return new UpdateShipmentRequestBody(
                tracking);
        }
    }
}

