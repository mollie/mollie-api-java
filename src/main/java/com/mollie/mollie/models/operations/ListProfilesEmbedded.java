/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.mollie.mollie.models.operations;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.mollie.mollie.models.components.EntityProfileResponse;
import com.mollie.mollie.utils.Utils;
import java.lang.Override;
import java.lang.String;
import java.lang.SuppressWarnings;
import java.util.List;
import java.util.Optional;


public class ListProfilesEmbedded {
    /**
     * An array of profile objects.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("profiles")
    private Optional<? extends List<EntityProfileResponse>> profiles;

    @JsonCreator
    public ListProfilesEmbedded(
            @JsonProperty("profiles") Optional<? extends List<EntityProfileResponse>> profiles) {
        Utils.checkNotNull(profiles, "profiles");
        this.profiles = profiles;
    }
    
    public ListProfilesEmbedded() {
        this(Optional.empty());
    }

    /**
     * An array of profile objects.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<List<EntityProfileResponse>> profiles() {
        return (Optional<List<EntityProfileResponse>>) profiles;
    }

    public static Builder builder() {
        return new Builder();
    }


    /**
     * An array of profile objects.
     */
    public ListProfilesEmbedded withProfiles(List<EntityProfileResponse> profiles) {
        Utils.checkNotNull(profiles, "profiles");
        this.profiles = Optional.ofNullable(profiles);
        return this;
    }


    /**
     * An array of profile objects.
     */
    public ListProfilesEmbedded withProfiles(Optional<? extends List<EntityProfileResponse>> profiles) {
        Utils.checkNotNull(profiles, "profiles");
        this.profiles = profiles;
        return this;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ListProfilesEmbedded other = (ListProfilesEmbedded) o;
        return 
            Utils.enhancedDeepEquals(this.profiles, other.profiles);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            profiles);
    }
    
    @Override
    public String toString() {
        return Utils.toString(ListProfilesEmbedded.class,
                "profiles", profiles);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private Optional<? extends List<EntityProfileResponse>> profiles = Optional.empty();

        private Builder() {
          // force use of static builder() method
        }


        /**
         * An array of profile objects.
         */
        public Builder profiles(List<EntityProfileResponse> profiles) {
            Utils.checkNotNull(profiles, "profiles");
            this.profiles = Optional.ofNullable(profiles);
            return this;
        }

        /**
         * An array of profile objects.
         */
        public Builder profiles(Optional<? extends List<EntityProfileResponse>> profiles) {
            Utils.checkNotNull(profiles, "profiles");
            this.profiles = profiles;
            return this;
        }

        public ListProfilesEmbedded build() {

            return new ListProfilesEmbedded(
                profiles);
        }

    }
}
