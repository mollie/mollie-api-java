/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.mollie.mollie.models.operations;

import com.fasterxml.jackson.annotation.JsonValue;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;

/**
 * GetBalanceReportBalancesResponse200ApplicationHalPlusJsonResponseBodyTotalsChargebacksImmediatelyAvailablePrepaymentPartType
 * 
 * <p>Prepayment part: fee itself, reimbursement, discount, VAT or rounding compensation.
 */
public enum GetBalanceReportBalancesResponse200ApplicationHalPlusJsonResponseBodyTotalsChargebacksImmediatelyAvailablePrepaymentPartType {
    FEE("fee"),
    FEE_REIMBURSEMENT("fee-reimbursement"),
    FEE_DISCOUNT("fee-discount"),
    FEE_VAT("fee-vat"),
    FEE_ROUNDING_COMPENSATION("fee-rounding-compensation");

    @JsonValue
    private final String value;

    GetBalanceReportBalancesResponse200ApplicationHalPlusJsonResponseBodyTotalsChargebacksImmediatelyAvailablePrepaymentPartType(String value) {
        this.value = value;
    }
    
    public String value() {
        return value;
    }
    
    public static Optional<GetBalanceReportBalancesResponse200ApplicationHalPlusJsonResponseBodyTotalsChargebacksImmediatelyAvailablePrepaymentPartType> fromValue(String value) {
        for (GetBalanceReportBalancesResponse200ApplicationHalPlusJsonResponseBodyTotalsChargebacksImmediatelyAvailablePrepaymentPartType o: GetBalanceReportBalancesResponse200ApplicationHalPlusJsonResponseBodyTotalsChargebacksImmediatelyAvailablePrepaymentPartType.values()) {
            if (Objects.deepEquals(o.value, value)) {
                return Optional.of(o);
            }
        }
        return Optional.empty();
    }
}

