/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.mollie.mollie.models.operations;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.mollie.mollie.utils.Utils;
import java.lang.Override;
import java.lang.String;
import java.util.Optional;
import org.openapitools.jackson.nullable.JsonNullable;

public class UserAgentTokens {

    /**
     * The unique User-Agent token.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("token")
    private Optional<String> token;

    /**
     * The date from which the token is active, in ISO 8601 format.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("startsAt")
    private Optional<String> startsAt;

    /**
     * The date until when the token will be active, in ISO 8601 format. Will be `null` if the token does not have an end date (yet).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("endsAt")
    private JsonNullable<String> endsAt;

    @JsonCreator
    public UserAgentTokens(
            @JsonProperty("token") Optional<String> token,
            @JsonProperty("startsAt") Optional<String> startsAt,
            @JsonProperty("endsAt") JsonNullable<String> endsAt) {
        Utils.checkNotNull(token, "token");
        Utils.checkNotNull(startsAt, "startsAt");
        Utils.checkNotNull(endsAt, "endsAt");
        this.token = token;
        this.startsAt = startsAt;
        this.endsAt = endsAt;
    }
    
    public UserAgentTokens() {
        this(Optional.empty(), Optional.empty(), JsonNullable.undefined());
    }

    /**
     * The unique User-Agent token.
     */
    @JsonIgnore
    public Optional<String> token() {
        return token;
    }

    /**
     * The date from which the token is active, in ISO 8601 format.
     */
    @JsonIgnore
    public Optional<String> startsAt() {
        return startsAt;
    }

    /**
     * The date until when the token will be active, in ISO 8601 format. Will be `null` if the token does not have an end date (yet).
     */
    @JsonIgnore
    public JsonNullable<String> endsAt() {
        return endsAt;
    }

    public final static Builder builder() {
        return new Builder();
    }    

    /**
     * The unique User-Agent token.
     */
    public UserAgentTokens withToken(String token) {
        Utils.checkNotNull(token, "token");
        this.token = Optional.ofNullable(token);
        return this;
    }

    /**
     * The unique User-Agent token.
     */
    public UserAgentTokens withToken(Optional<String> token) {
        Utils.checkNotNull(token, "token");
        this.token = token;
        return this;
    }

    /**
     * The date from which the token is active, in ISO 8601 format.
     */
    public UserAgentTokens withStartsAt(String startsAt) {
        Utils.checkNotNull(startsAt, "startsAt");
        this.startsAt = Optional.ofNullable(startsAt);
        return this;
    }

    /**
     * The date from which the token is active, in ISO 8601 format.
     */
    public UserAgentTokens withStartsAt(Optional<String> startsAt) {
        Utils.checkNotNull(startsAt, "startsAt");
        this.startsAt = startsAt;
        return this;
    }

    /**
     * The date until when the token will be active, in ISO 8601 format. Will be `null` if the token does not have an end date (yet).
     */
    public UserAgentTokens withEndsAt(String endsAt) {
        Utils.checkNotNull(endsAt, "endsAt");
        this.endsAt = JsonNullable.of(endsAt);
        return this;
    }

    /**
     * The date until when the token will be active, in ISO 8601 format. Will be `null` if the token does not have an end date (yet).
     */
    public UserAgentTokens withEndsAt(JsonNullable<String> endsAt) {
        Utils.checkNotNull(endsAt, "endsAt");
        this.endsAt = endsAt;
        return this;
    }

    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        UserAgentTokens other = (UserAgentTokens) o;
        return 
            Utils.enhancedDeepEquals(this.token, other.token) &&
            Utils.enhancedDeepEquals(this.startsAt, other.startsAt) &&
            Utils.enhancedDeepEquals(this.endsAt, other.endsAt);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            token,
            startsAt,
            endsAt);
    }
    
    @Override
    public String toString() {
        return Utils.toString(UserAgentTokens.class,
                "token", token,
                "startsAt", startsAt,
                "endsAt", endsAt);
    }
    
    public final static class Builder {
 
        private Optional<String> token = Optional.empty();
 
        private Optional<String> startsAt = Optional.empty();
 
        private JsonNullable<String> endsAt = JsonNullable.undefined();
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * The unique User-Agent token.
         */
        public Builder token(String token) {
            Utils.checkNotNull(token, "token");
            this.token = Optional.ofNullable(token);
            return this;
        }

        /**
         * The unique User-Agent token.
         */
        public Builder token(Optional<String> token) {
            Utils.checkNotNull(token, "token");
            this.token = token;
            return this;
        }

        /**
         * The date from which the token is active, in ISO 8601 format.
         */
        public Builder startsAt(String startsAt) {
            Utils.checkNotNull(startsAt, "startsAt");
            this.startsAt = Optional.ofNullable(startsAt);
            return this;
        }

        /**
         * The date from which the token is active, in ISO 8601 format.
         */
        public Builder startsAt(Optional<String> startsAt) {
            Utils.checkNotNull(startsAt, "startsAt");
            this.startsAt = startsAt;
            return this;
        }

        /**
         * The date until when the token will be active, in ISO 8601 format. Will be `null` if the token does not have an end date (yet).
         */
        public Builder endsAt(String endsAt) {
            Utils.checkNotNull(endsAt, "endsAt");
            this.endsAt = JsonNullable.of(endsAt);
            return this;
        }

        /**
         * The date until when the token will be active, in ISO 8601 format. Will be `null` if the token does not have an end date (yet).
         */
        public Builder endsAt(JsonNullable<String> endsAt) {
            Utils.checkNotNull(endsAt, "endsAt");
            this.endsAt = endsAt;
            return this;
        }
        
        public UserAgentTokens build() {
            return new UserAgentTokens(
                token,
                startsAt,
                endsAt);
        }
    }
}
