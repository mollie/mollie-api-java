/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */


package com.mollie.mollie.models.operations;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.core.type.TypeReference;
import com.mollie.mollie.utils.LazySingletonValue;
import com.mollie.mollie.utils.Utils;
import java.lang.Boolean;
import java.lang.Override;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import org.openapitools.jackson.nullable.JsonNullable;

public class ManageOrderLinesRequestBody {

    /**
     * List of operations to be performed on the order's line items.
     */
    @JsonProperty("operations")
    private List<Operations> operations;

    /**
     * Most API credentials are specifically created for either live mode or test mode. For organization-level credentials such as OAuth access tokens, you can enable test mode by setting `testmode` to `true`.
     * 
     * Test entities cannot be retrieved when the endpoint is set to live mode, and vice versa.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("testmode")
    private JsonNullable<Boolean> testmode;

    @JsonCreator
    public ManageOrderLinesRequestBody(
            @JsonProperty("operations") List<Operations> operations,
            @JsonProperty("testmode") JsonNullable<Boolean> testmode) {
        Utils.checkNotNull(operations, "operations");
        Utils.checkNotNull(testmode, "testmode");
        this.operations = operations;
        this.testmode = testmode;
    }
    
    public ManageOrderLinesRequestBody(
            List<Operations> operations) {
        this(operations, JsonNullable.undefined());
    }

    /**
     * List of operations to be performed on the order's line items.
     */
    @JsonIgnore
    public List<Operations> operations() {
        return operations;
    }

    /**
     * Most API credentials are specifically created for either live mode or test mode. For organization-level credentials such as OAuth access tokens, you can enable test mode by setting `testmode` to `true`.
     * 
     * Test entities cannot be retrieved when the endpoint is set to live mode, and vice versa.
     */
    @JsonIgnore
    public JsonNullable<Boolean> testmode() {
        return testmode;
    }

    public final static Builder builder() {
        return new Builder();
    }

    /**
     * List of operations to be performed on the order's line items.
     */
    public ManageOrderLinesRequestBody withOperations(List<Operations> operations) {
        Utils.checkNotNull(operations, "operations");
        this.operations = operations;
        return this;
    }

    /**
     * Most API credentials are specifically created for either live mode or test mode. For organization-level credentials such as OAuth access tokens, you can enable test mode by setting `testmode` to `true`.
     * 
     * Test entities cannot be retrieved when the endpoint is set to live mode, and vice versa.
     */
    public ManageOrderLinesRequestBody withTestmode(boolean testmode) {
        Utils.checkNotNull(testmode, "testmode");
        this.testmode = JsonNullable.of(testmode);
        return this;
    }

    /**
     * Most API credentials are specifically created for either live mode or test mode. For organization-level credentials such as OAuth access tokens, you can enable test mode by setting `testmode` to `true`.
     * 
     * Test entities cannot be retrieved when the endpoint is set to live mode, and vice versa.
     */
    public ManageOrderLinesRequestBody withTestmode(JsonNullable<Boolean> testmode) {
        Utils.checkNotNull(testmode, "testmode");
        this.testmode = testmode;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ManageOrderLinesRequestBody other = (ManageOrderLinesRequestBody) o;
        return 
            Objects.deepEquals(this.operations, other.operations) &&
            Objects.deepEquals(this.testmode, other.testmode);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            operations,
            testmode);
    }
    
    @Override
    public String toString() {
        return Utils.toString(ManageOrderLinesRequestBody.class,
                "operations", operations,
                "testmode", testmode);
    }
    
    public final static class Builder {
 
        private List<Operations> operations;
 
        private JsonNullable<Boolean> testmode;  
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * List of operations to be performed on the order's line items.
         */
        public Builder operations(List<Operations> operations) {
            Utils.checkNotNull(operations, "operations");
            this.operations = operations;
            return this;
        }

        /**
         * Most API credentials are specifically created for either live mode or test mode. For organization-level credentials such as OAuth access tokens, you can enable test mode by setting `testmode` to `true`.
         * 
         * Test entities cannot be retrieved when the endpoint is set to live mode, and vice versa.
         */
        public Builder testmode(boolean testmode) {
            Utils.checkNotNull(testmode, "testmode");
            this.testmode = JsonNullable.of(testmode);
            return this;
        }

        /**
         * Most API credentials are specifically created for either live mode or test mode. For organization-level credentials such as OAuth access tokens, you can enable test mode by setting `testmode` to `true`.
         * 
         * Test entities cannot be retrieved when the endpoint is set to live mode, and vice versa.
         */
        public Builder testmode(JsonNullable<Boolean> testmode) {
            Utils.checkNotNull(testmode, "testmode");
            this.testmode = testmode;
            return this;
        }
        
        public ManageOrderLinesRequestBody build() {
            if (testmode == null) {
                testmode = _SINGLETON_VALUE_Testmode.value();
            }            return new ManageOrderLinesRequestBody(
                operations,
                testmode);
        }

        private static final LazySingletonValue<JsonNullable<Boolean>> _SINGLETON_VALUE_Testmode =
                new LazySingletonValue<>(
                        "testmode",
                        "false",
                        new TypeReference<JsonNullable<Boolean>>() {});
    }
}

