/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.mollie.mollie.models.operations;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.mollie.mollie.utils.Utils;
import java.lang.Override;
import java.lang.String;
import java.lang.SuppressWarnings;
import org.openapitools.jackson.nullable.JsonNullable;

/**
 * ListSettlementChargebacksSettlementsLinks
 * 
 * <p>An object with several relevant URLs. Every URL object will contain an `href` and a `type` field.
 */
public class ListSettlementChargebacksSettlementsLinks {
    /**
     * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
     */
    @JsonProperty("self")
    private ListSettlementChargebacksSettlementsSelf self;

    /**
     * The API resource URL of the [payment](get-payment) that this chargeback belongs to.
     */
    @JsonProperty("payment")
    private ListSettlementChargebacksPayment payment;

    /**
     * The API resource URL of the [settlement](get-settlement) this chargeback has been settled with. Not present if not yet settled.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("settlement")
    private JsonNullable<? extends ListSettlementChargebacksSettlement> settlement;

    /**
     * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
     */
    @JsonProperty("documentation")
    private ListSettlementChargebacksSettlementsDocumentation documentation;

    @JsonCreator
    public ListSettlementChargebacksSettlementsLinks(
            @JsonProperty("self") ListSettlementChargebacksSettlementsSelf self,
            @JsonProperty("payment") ListSettlementChargebacksPayment payment,
            @JsonProperty("settlement") JsonNullable<? extends ListSettlementChargebacksSettlement> settlement,
            @JsonProperty("documentation") ListSettlementChargebacksSettlementsDocumentation documentation) {
        Utils.checkNotNull(self, "self");
        Utils.checkNotNull(payment, "payment");
        Utils.checkNotNull(settlement, "settlement");
        Utils.checkNotNull(documentation, "documentation");
        this.self = self;
        this.payment = payment;
        this.settlement = settlement;
        this.documentation = documentation;
    }
    
    public ListSettlementChargebacksSettlementsLinks(
            ListSettlementChargebacksSettlementsSelf self,
            ListSettlementChargebacksPayment payment,
            ListSettlementChargebacksSettlementsDocumentation documentation) {
        this(self, payment, JsonNullable.undefined(),
            documentation);
    }

    /**
     * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
     */
    @JsonIgnore
    public ListSettlementChargebacksSettlementsSelf self() {
        return self;
    }

    /**
     * The API resource URL of the [payment](get-payment) that this chargeback belongs to.
     */
    @JsonIgnore
    public ListSettlementChargebacksPayment payment() {
        return payment;
    }

    /**
     * The API resource URL of the [settlement](get-settlement) this chargeback has been settled with. Not present if not yet settled.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public JsonNullable<ListSettlementChargebacksSettlement> settlement() {
        return (JsonNullable<ListSettlementChargebacksSettlement>) settlement;
    }

    /**
     * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
     */
    @JsonIgnore
    public ListSettlementChargebacksSettlementsDocumentation documentation() {
        return documentation;
    }

    public static Builder builder() {
        return new Builder();
    }


    /**
     * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
     */
    public ListSettlementChargebacksSettlementsLinks withSelf(ListSettlementChargebacksSettlementsSelf self) {
        Utils.checkNotNull(self, "self");
        this.self = self;
        return this;
    }

    /**
     * The API resource URL of the [payment](get-payment) that this chargeback belongs to.
     */
    public ListSettlementChargebacksSettlementsLinks withPayment(ListSettlementChargebacksPayment payment) {
        Utils.checkNotNull(payment, "payment");
        this.payment = payment;
        return this;
    }

    /**
     * The API resource URL of the [settlement](get-settlement) this chargeback has been settled with. Not present if not yet settled.
     */
    public ListSettlementChargebacksSettlementsLinks withSettlement(ListSettlementChargebacksSettlement settlement) {
        Utils.checkNotNull(settlement, "settlement");
        this.settlement = JsonNullable.of(settlement);
        return this;
    }

    /**
     * The API resource URL of the [settlement](get-settlement) this chargeback has been settled with. Not present if not yet settled.
     */
    public ListSettlementChargebacksSettlementsLinks withSettlement(JsonNullable<? extends ListSettlementChargebacksSettlement> settlement) {
        Utils.checkNotNull(settlement, "settlement");
        this.settlement = settlement;
        return this;
    }

    /**
     * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
     */
    public ListSettlementChargebacksSettlementsLinks withDocumentation(ListSettlementChargebacksSettlementsDocumentation documentation) {
        Utils.checkNotNull(documentation, "documentation");
        this.documentation = documentation;
        return this;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ListSettlementChargebacksSettlementsLinks other = (ListSettlementChargebacksSettlementsLinks) o;
        return 
            Utils.enhancedDeepEquals(this.self, other.self) &&
            Utils.enhancedDeepEquals(this.payment, other.payment) &&
            Utils.enhancedDeepEquals(this.settlement, other.settlement) &&
            Utils.enhancedDeepEquals(this.documentation, other.documentation);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            self, payment, settlement,
            documentation);
    }
    
    @Override
    public String toString() {
        return Utils.toString(ListSettlementChargebacksSettlementsLinks.class,
                "self", self,
                "payment", payment,
                "settlement", settlement,
                "documentation", documentation);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private ListSettlementChargebacksSettlementsSelf self;

        private ListSettlementChargebacksPayment payment;

        private JsonNullable<? extends ListSettlementChargebacksSettlement> settlement = JsonNullable.undefined();

        private ListSettlementChargebacksSettlementsDocumentation documentation;

        private Builder() {
          // force use of static builder() method
        }


        /**
         * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
         */
        public Builder self(ListSettlementChargebacksSettlementsSelf self) {
            Utils.checkNotNull(self, "self");
            this.self = self;
            return this;
        }


        /**
         * The API resource URL of the [payment](get-payment) that this chargeback belongs to.
         */
        public Builder payment(ListSettlementChargebacksPayment payment) {
            Utils.checkNotNull(payment, "payment");
            this.payment = payment;
            return this;
        }


        /**
         * The API resource URL of the [settlement](get-settlement) this chargeback has been settled with. Not present if not yet settled.
         */
        public Builder settlement(ListSettlementChargebacksSettlement settlement) {
            Utils.checkNotNull(settlement, "settlement");
            this.settlement = JsonNullable.of(settlement);
            return this;
        }

        /**
         * The API resource URL of the [settlement](get-settlement) this chargeback has been settled with. Not present if not yet settled.
         */
        public Builder settlement(JsonNullable<? extends ListSettlementChargebacksSettlement> settlement) {
            Utils.checkNotNull(settlement, "settlement");
            this.settlement = settlement;
            return this;
        }


        /**
         * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
         */
        public Builder documentation(ListSettlementChargebacksSettlementsDocumentation documentation) {
            Utils.checkNotNull(documentation, "documentation");
            this.documentation = documentation;
            return this;
        }

        public ListSettlementChargebacksSettlementsLinks build() {

            return new ListSettlementChargebacksSettlementsLinks(
                self, payment, settlement,
                documentation);
        }

    }
}
