/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.mollie.mollie.models.operations;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.mollie.mollie.utils.Utils;
import java.lang.Override;
import java.lang.String;
import java.util.Objects;

/**
 * ListCustomerPaymentsCustomersResponseLinks
 * 
 * <p>An object with several relevant URLs. Every URL object will contain an `href` and a `type` field.
 */
public class ListCustomerPaymentsCustomersResponseLinks {

    /**
     * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
     */
    @JsonProperty("self")
    private ListCustomerPaymentsCustomersResponseSelf self;

    /**
     * The API resource URL of the [payment](get-payment) that belong to this route.
     */
    @JsonProperty("payment")
    private ListCustomerPaymentsPayment payment;

    @JsonCreator
    public ListCustomerPaymentsCustomersResponseLinks(
            @JsonProperty("self") ListCustomerPaymentsCustomersResponseSelf self,
            @JsonProperty("payment") ListCustomerPaymentsPayment payment) {
        Utils.checkNotNull(self, "self");
        Utils.checkNotNull(payment, "payment");
        this.self = self;
        this.payment = payment;
    }

    /**
     * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
     */
    @JsonIgnore
    public ListCustomerPaymentsCustomersResponseSelf self() {
        return self;
    }

    /**
     * The API resource URL of the [payment](get-payment) that belong to this route.
     */
    @JsonIgnore
    public ListCustomerPaymentsPayment payment() {
        return payment;
    }

    public final static Builder builder() {
        return new Builder();
    }    

    /**
     * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
     */
    public ListCustomerPaymentsCustomersResponseLinks withSelf(ListCustomerPaymentsCustomersResponseSelf self) {
        Utils.checkNotNull(self, "self");
        this.self = self;
        return this;
    }

    /**
     * The API resource URL of the [payment](get-payment) that belong to this route.
     */
    public ListCustomerPaymentsCustomersResponseLinks withPayment(ListCustomerPaymentsPayment payment) {
        Utils.checkNotNull(payment, "payment");
        this.payment = payment;
        return this;
    }

    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ListCustomerPaymentsCustomersResponseLinks other = (ListCustomerPaymentsCustomersResponseLinks) o;
        return 
            Objects.deepEquals(this.self, other.self) &&
            Objects.deepEquals(this.payment, other.payment);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            self,
            payment);
    }
    
    @Override
    public String toString() {
        return Utils.toString(ListCustomerPaymentsCustomersResponseLinks.class,
                "self", self,
                "payment", payment);
    }
    
    public final static class Builder {
 
        private ListCustomerPaymentsCustomersResponseSelf self;
 
        private ListCustomerPaymentsPayment payment;
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
         */
        public Builder self(ListCustomerPaymentsCustomersResponseSelf self) {
            Utils.checkNotNull(self, "self");
            this.self = self;
            return this;
        }

        /**
         * The API resource URL of the [payment](get-payment) that belong to this route.
         */
        public Builder payment(ListCustomerPaymentsPayment payment) {
            Utils.checkNotNull(payment, "payment");
            this.payment = payment;
            return this;
        }
        
        public ListCustomerPaymentsCustomersResponseLinks build() {
            return new ListCustomerPaymentsCustomersResponseLinks(
                self,
                payment);
        }
    }
}
