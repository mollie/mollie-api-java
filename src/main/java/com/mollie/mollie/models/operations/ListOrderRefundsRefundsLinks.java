/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.mollie.mollie.models.operations;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.mollie.mollie.utils.Utils;
import java.lang.Override;
import java.lang.String;
import java.lang.SuppressWarnings;
import java.util.Optional;
import org.openapitools.jackson.nullable.JsonNullable;

/**
 * ListOrderRefundsRefundsLinks
 * 
 * <p>An object with several relevant URLs. Every URL object will contain an `href` and a `type` field.
 */
public class ListOrderRefundsRefundsLinks {

    /**
     * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("self")
    private Optional<? extends ListOrderRefundsRefundsSelf> self;

    /**
     * The API resource URL of the [order](get-order) that this refund belongs to, if applicable.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("order")
    private Optional<? extends ListOrderRefundsOrder> order;

    /**
     * The API resource URL of the [settlement](get-settlement) this refund has been settled with. Not present if not yet settled.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("settlement")
    private JsonNullable<? extends ListOrderRefundsSettlement> settlement;

    /**
     * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("documentation")
    private Optional<? extends ListOrderRefundsRefundsDocumentation> documentation;

    @JsonCreator
    public ListOrderRefundsRefundsLinks(
            @JsonProperty("self") Optional<? extends ListOrderRefundsRefundsSelf> self,
            @JsonProperty("order") Optional<? extends ListOrderRefundsOrder> order,
            @JsonProperty("settlement") JsonNullable<? extends ListOrderRefundsSettlement> settlement,
            @JsonProperty("documentation") Optional<? extends ListOrderRefundsRefundsDocumentation> documentation) {
        Utils.checkNotNull(self, "self");
        Utils.checkNotNull(order, "order");
        Utils.checkNotNull(settlement, "settlement");
        Utils.checkNotNull(documentation, "documentation");
        this.self = self;
        this.order = order;
        this.settlement = settlement;
        this.documentation = documentation;
    }
    
    public ListOrderRefundsRefundsLinks() {
        this(Optional.empty(), Optional.empty(), JsonNullable.undefined(), Optional.empty());
    }

    /**
     * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<ListOrderRefundsRefundsSelf> self() {
        return (Optional<ListOrderRefundsRefundsSelf>) self;
    }

    /**
     * The API resource URL of the [order](get-order) that this refund belongs to, if applicable.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<ListOrderRefundsOrder> order() {
        return (Optional<ListOrderRefundsOrder>) order;
    }

    /**
     * The API resource URL of the [settlement](get-settlement) this refund has been settled with. Not present if not yet settled.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public JsonNullable<ListOrderRefundsSettlement> settlement() {
        return (JsonNullable<ListOrderRefundsSettlement>) settlement;
    }

    /**
     * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<ListOrderRefundsRefundsDocumentation> documentation() {
        return (Optional<ListOrderRefundsRefundsDocumentation>) documentation;
    }

    public final static Builder builder() {
        return new Builder();
    }    

    /**
     * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
     */
    public ListOrderRefundsRefundsLinks withSelf(ListOrderRefundsRefundsSelf self) {
        Utils.checkNotNull(self, "self");
        this.self = Optional.ofNullable(self);
        return this;
    }

    /**
     * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
     */
    public ListOrderRefundsRefundsLinks withSelf(Optional<? extends ListOrderRefundsRefundsSelf> self) {
        Utils.checkNotNull(self, "self");
        this.self = self;
        return this;
    }

    /**
     * The API resource URL of the [order](get-order) that this refund belongs to, if applicable.
     */
    public ListOrderRefundsRefundsLinks withOrder(ListOrderRefundsOrder order) {
        Utils.checkNotNull(order, "order");
        this.order = Optional.ofNullable(order);
        return this;
    }

    /**
     * The API resource URL of the [order](get-order) that this refund belongs to, if applicable.
     */
    public ListOrderRefundsRefundsLinks withOrder(Optional<? extends ListOrderRefundsOrder> order) {
        Utils.checkNotNull(order, "order");
        this.order = order;
        return this;
    }

    /**
     * The API resource URL of the [settlement](get-settlement) this refund has been settled with. Not present if not yet settled.
     */
    public ListOrderRefundsRefundsLinks withSettlement(ListOrderRefundsSettlement settlement) {
        Utils.checkNotNull(settlement, "settlement");
        this.settlement = JsonNullable.of(settlement);
        return this;
    }

    /**
     * The API resource URL of the [settlement](get-settlement) this refund has been settled with. Not present if not yet settled.
     */
    public ListOrderRefundsRefundsLinks withSettlement(JsonNullable<? extends ListOrderRefundsSettlement> settlement) {
        Utils.checkNotNull(settlement, "settlement");
        this.settlement = settlement;
        return this;
    }

    /**
     * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
     */
    public ListOrderRefundsRefundsLinks withDocumentation(ListOrderRefundsRefundsDocumentation documentation) {
        Utils.checkNotNull(documentation, "documentation");
        this.documentation = Optional.ofNullable(documentation);
        return this;
    }

    /**
     * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
     */
    public ListOrderRefundsRefundsLinks withDocumentation(Optional<? extends ListOrderRefundsRefundsDocumentation> documentation) {
        Utils.checkNotNull(documentation, "documentation");
        this.documentation = documentation;
        return this;
    }

    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ListOrderRefundsRefundsLinks other = (ListOrderRefundsRefundsLinks) o;
        return 
            Utils.enhancedDeepEquals(this.self, other.self) &&
            Utils.enhancedDeepEquals(this.order, other.order) &&
            Utils.enhancedDeepEquals(this.settlement, other.settlement) &&
            Utils.enhancedDeepEquals(this.documentation, other.documentation);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            self,
            order,
            settlement,
            documentation);
    }
    
    @Override
    public String toString() {
        return Utils.toString(ListOrderRefundsRefundsLinks.class,
                "self", self,
                "order", order,
                "settlement", settlement,
                "documentation", documentation);
    }
    
    public final static class Builder {
 
        private Optional<? extends ListOrderRefundsRefundsSelf> self = Optional.empty();
 
        private Optional<? extends ListOrderRefundsOrder> order = Optional.empty();
 
        private JsonNullable<? extends ListOrderRefundsSettlement> settlement = JsonNullable.undefined();
 
        private Optional<? extends ListOrderRefundsRefundsDocumentation> documentation = Optional.empty();
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
         */
        public Builder self(ListOrderRefundsRefundsSelf self) {
            Utils.checkNotNull(self, "self");
            this.self = Optional.ofNullable(self);
            return this;
        }

        /**
         * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
         */
        public Builder self(Optional<? extends ListOrderRefundsRefundsSelf> self) {
            Utils.checkNotNull(self, "self");
            this.self = self;
            return this;
        }

        /**
         * The API resource URL of the [order](get-order) that this refund belongs to, if applicable.
         */
        public Builder order(ListOrderRefundsOrder order) {
            Utils.checkNotNull(order, "order");
            this.order = Optional.ofNullable(order);
            return this;
        }

        /**
         * The API resource URL of the [order](get-order) that this refund belongs to, if applicable.
         */
        public Builder order(Optional<? extends ListOrderRefundsOrder> order) {
            Utils.checkNotNull(order, "order");
            this.order = order;
            return this;
        }

        /**
         * The API resource URL of the [settlement](get-settlement) this refund has been settled with. Not present if not yet settled.
         */
        public Builder settlement(ListOrderRefundsSettlement settlement) {
            Utils.checkNotNull(settlement, "settlement");
            this.settlement = JsonNullable.of(settlement);
            return this;
        }

        /**
         * The API resource URL of the [settlement](get-settlement) this refund has been settled with. Not present if not yet settled.
         */
        public Builder settlement(JsonNullable<? extends ListOrderRefundsSettlement> settlement) {
            Utils.checkNotNull(settlement, "settlement");
            this.settlement = settlement;
            return this;
        }

        /**
         * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
         */
        public Builder documentation(ListOrderRefundsRefundsDocumentation documentation) {
            Utils.checkNotNull(documentation, "documentation");
            this.documentation = Optional.ofNullable(documentation);
            return this;
        }

        /**
         * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
         */
        public Builder documentation(Optional<? extends ListOrderRefundsRefundsDocumentation> documentation) {
            Utils.checkNotNull(documentation, "documentation");
            this.documentation = documentation;
            return this;
        }
        
        public ListOrderRefundsRefundsLinks build() {
            return new ListOrderRefundsRefundsLinks(
                self,
                order,
                settlement,
                documentation);
        }
    }
}
