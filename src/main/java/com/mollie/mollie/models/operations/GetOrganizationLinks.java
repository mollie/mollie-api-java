/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.mollie.mollie.models.operations;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.mollie.mollie.utils.Utils;
import java.lang.Override;
import java.lang.String;
import java.lang.SuppressWarnings;
import java.util.Optional;

/**
 * GetOrganizationLinks
 * 
 * <p>An object with several relevant URLs. Every URL object will contain an `href` and a `type` field.
 */
public class GetOrganizationLinks {
    /**
     * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("self")
    private Optional<? extends GetOrganizationSelf> self;

    /**
     * Direct link to the organization's Mollie dashboard.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dashboard")
    private Optional<? extends Dashboard> dashboard;

    /**
     * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("documentation")
    private Optional<? extends GetOrganizationDocumentation> documentation;

    @JsonCreator
    public GetOrganizationLinks(
            @JsonProperty("self") Optional<? extends GetOrganizationSelf> self,
            @JsonProperty("dashboard") Optional<? extends Dashboard> dashboard,
            @JsonProperty("documentation") Optional<? extends GetOrganizationDocumentation> documentation) {
        Utils.checkNotNull(self, "self");
        Utils.checkNotNull(dashboard, "dashboard");
        Utils.checkNotNull(documentation, "documentation");
        this.self = self;
        this.dashboard = dashboard;
        this.documentation = documentation;
    }
    
    public GetOrganizationLinks() {
        this(Optional.empty(), Optional.empty(), Optional.empty());
    }

    /**
     * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<GetOrganizationSelf> self() {
        return (Optional<GetOrganizationSelf>) self;
    }

    /**
     * Direct link to the organization's Mollie dashboard.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<Dashboard> dashboard() {
        return (Optional<Dashboard>) dashboard;
    }

    /**
     * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<GetOrganizationDocumentation> documentation() {
        return (Optional<GetOrganizationDocumentation>) documentation;
    }

    public static Builder builder() {
        return new Builder();
    }


    /**
     * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
     */
    public GetOrganizationLinks withSelf(GetOrganizationSelf self) {
        Utils.checkNotNull(self, "self");
        this.self = Optional.ofNullable(self);
        return this;
    }


    /**
     * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
     */
    public GetOrganizationLinks withSelf(Optional<? extends GetOrganizationSelf> self) {
        Utils.checkNotNull(self, "self");
        this.self = self;
        return this;
    }

    /**
     * Direct link to the organization's Mollie dashboard.
     */
    public GetOrganizationLinks withDashboard(Dashboard dashboard) {
        Utils.checkNotNull(dashboard, "dashboard");
        this.dashboard = Optional.ofNullable(dashboard);
        return this;
    }


    /**
     * Direct link to the organization's Mollie dashboard.
     */
    public GetOrganizationLinks withDashboard(Optional<? extends Dashboard> dashboard) {
        Utils.checkNotNull(dashboard, "dashboard");
        this.dashboard = dashboard;
        return this;
    }

    /**
     * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
     */
    public GetOrganizationLinks withDocumentation(GetOrganizationDocumentation documentation) {
        Utils.checkNotNull(documentation, "documentation");
        this.documentation = Optional.ofNullable(documentation);
        return this;
    }


    /**
     * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
     */
    public GetOrganizationLinks withDocumentation(Optional<? extends GetOrganizationDocumentation> documentation) {
        Utils.checkNotNull(documentation, "documentation");
        this.documentation = documentation;
        return this;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        GetOrganizationLinks other = (GetOrganizationLinks) o;
        return 
            Utils.enhancedDeepEquals(this.self, other.self) &&
            Utils.enhancedDeepEquals(this.dashboard, other.dashboard) &&
            Utils.enhancedDeepEquals(this.documentation, other.documentation);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            self, dashboard, documentation);
    }
    
    @Override
    public String toString() {
        return Utils.toString(GetOrganizationLinks.class,
                "self", self,
                "dashboard", dashboard,
                "documentation", documentation);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private Optional<? extends GetOrganizationSelf> self = Optional.empty();

        private Optional<? extends Dashboard> dashboard = Optional.empty();

        private Optional<? extends GetOrganizationDocumentation> documentation = Optional.empty();

        private Builder() {
          // force use of static builder() method
        }


        /**
         * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
         */
        public Builder self(GetOrganizationSelf self) {
            Utils.checkNotNull(self, "self");
            this.self = Optional.ofNullable(self);
            return this;
        }

        /**
         * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
         */
        public Builder self(Optional<? extends GetOrganizationSelf> self) {
            Utils.checkNotNull(self, "self");
            this.self = self;
            return this;
        }


        /**
         * Direct link to the organization's Mollie dashboard.
         */
        public Builder dashboard(Dashboard dashboard) {
            Utils.checkNotNull(dashboard, "dashboard");
            this.dashboard = Optional.ofNullable(dashboard);
            return this;
        }

        /**
         * Direct link to the organization's Mollie dashboard.
         */
        public Builder dashboard(Optional<? extends Dashboard> dashboard) {
            Utils.checkNotNull(dashboard, "dashboard");
            this.dashboard = dashboard;
            return this;
        }


        /**
         * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
         */
        public Builder documentation(GetOrganizationDocumentation documentation) {
            Utils.checkNotNull(documentation, "documentation");
            this.documentation = Optional.ofNullable(documentation);
            return this;
        }

        /**
         * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
         */
        public Builder documentation(Optional<? extends GetOrganizationDocumentation> documentation) {
            Utils.checkNotNull(documentation, "documentation");
            this.documentation = documentation;
            return this;
        }

        public GetOrganizationLinks build() {

            return new GetOrganizationLinks(
                self, dashboard, documentation);
        }

    }
}
