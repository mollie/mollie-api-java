/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

package com.mollie.mollie.models.operations;

import com.mollie.mollie.utils.Utils;
import java.lang.String;
import java.util.Optional;
import org.openapitools.jackson.nullable.JsonNullable;

public class ListAllMethodsRequestBuilder {

    private Optional<String> locale = Optional.empty();
    private Optional<? extends ListAllMethodsQueryParamAmount> amount = Optional.empty();
    private JsonNullable<String> include = JsonNullable.undefined();
    private final SDKMethodInterfaces.MethodCallListAllMethods sdk;

    public ListAllMethodsRequestBuilder(SDKMethodInterfaces.MethodCallListAllMethods sdk) {
        this.sdk = sdk;
    }
                
    public ListAllMethodsRequestBuilder locale(String locale) {
        Utils.checkNotNull(locale, "locale");
        this.locale = Optional.of(locale);
        return this;
    }

    public ListAllMethodsRequestBuilder locale(Optional<String> locale) {
        Utils.checkNotNull(locale, "locale");
        this.locale = locale;
        return this;
    }
                
    public ListAllMethodsRequestBuilder amount(ListAllMethodsQueryParamAmount amount) {
        Utils.checkNotNull(amount, "amount");
        this.amount = Optional.of(amount);
        return this;
    }

    public ListAllMethodsRequestBuilder amount(Optional<? extends ListAllMethodsQueryParamAmount> amount) {
        Utils.checkNotNull(amount, "amount");
        this.amount = amount;
        return this;
    }

    public ListAllMethodsRequestBuilder include(String include) {
        Utils.checkNotNull(include, "include");
        this.include = JsonNullable.of(include);
        return this;
    }

    public ListAllMethodsRequestBuilder include(JsonNullable<String> include) {
        Utils.checkNotNull(include, "include");
        this.include = include;
        return this;
    }

    public ListAllMethodsResponse call() throws Exception {

        return sdk.listAllMethods(
            locale,
            amount,
            include);
    }
}
