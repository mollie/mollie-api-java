/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.mollie.mollie.models.operations;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.mollie.mollie.utils.Utils;
import java.lang.Override;
import java.lang.String;
import java.lang.SuppressWarnings;
import java.util.Objects;
import java.util.Optional;
import org.openapitools.jackson.nullable.JsonNullable;

/**
 * CreateSubscriptionLinks
 * 
 * <p>An object with several relevant URLs. Every URL object will contain an `href` and a `type` field.
 */
public class CreateSubscriptionLinks {

    /**
     * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("self")
    private Optional<? extends CreateSubscriptionSelf> self;

    /**
     * The API resource URL of the [customer](get-customer) this subscription was created for.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("customer")
    private JsonNullable<? extends CreateSubscriptionCustomer> customer;

    /**
     * The API resource URL of the [mandate](get-mandate) this subscription was created for.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("mandate")
    private JsonNullable<? extends CreateSubscriptionMandate> mandate;

    /**
     * The API resource URL of the [profile](get-profile) this subscription was created for.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("profile")
    private JsonNullable<? extends CreateSubscriptionProfile> profile;

    /**
     * The API resource URL of the [payments](list-payments) created for this subscription. Omitted if no such payments exist (yet).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("payments")
    private JsonNullable<? extends CreateSubscriptionPayments> payments;

    /**
     * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("documentation")
    private Optional<? extends CreateSubscriptionDocumentation> documentation;

    @JsonCreator
    public CreateSubscriptionLinks(
            @JsonProperty("self") Optional<? extends CreateSubscriptionSelf> self,
            @JsonProperty("customer") JsonNullable<? extends CreateSubscriptionCustomer> customer,
            @JsonProperty("mandate") JsonNullable<? extends CreateSubscriptionMandate> mandate,
            @JsonProperty("profile") JsonNullable<? extends CreateSubscriptionProfile> profile,
            @JsonProperty("payments") JsonNullable<? extends CreateSubscriptionPayments> payments,
            @JsonProperty("documentation") Optional<? extends CreateSubscriptionDocumentation> documentation) {
        Utils.checkNotNull(self, "self");
        Utils.checkNotNull(customer, "customer");
        Utils.checkNotNull(mandate, "mandate");
        Utils.checkNotNull(profile, "profile");
        Utils.checkNotNull(payments, "payments");
        Utils.checkNotNull(documentation, "documentation");
        this.self = self;
        this.customer = customer;
        this.mandate = mandate;
        this.profile = profile;
        this.payments = payments;
        this.documentation = documentation;
    }
    
    public CreateSubscriptionLinks() {
        this(Optional.empty(), JsonNullable.undefined(), JsonNullable.undefined(), JsonNullable.undefined(), JsonNullable.undefined(), Optional.empty());
    }

    /**
     * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<CreateSubscriptionSelf> self() {
        return (Optional<CreateSubscriptionSelf>) self;
    }

    /**
     * The API resource URL of the [customer](get-customer) this subscription was created for.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public JsonNullable<CreateSubscriptionCustomer> customer() {
        return (JsonNullable<CreateSubscriptionCustomer>) customer;
    }

    /**
     * The API resource URL of the [mandate](get-mandate) this subscription was created for.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public JsonNullable<CreateSubscriptionMandate> mandate() {
        return (JsonNullable<CreateSubscriptionMandate>) mandate;
    }

    /**
     * The API resource URL of the [profile](get-profile) this subscription was created for.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public JsonNullable<CreateSubscriptionProfile> profile() {
        return (JsonNullable<CreateSubscriptionProfile>) profile;
    }

    /**
     * The API resource URL of the [payments](list-payments) created for this subscription. Omitted if no such payments exist (yet).
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public JsonNullable<CreateSubscriptionPayments> payments() {
        return (JsonNullable<CreateSubscriptionPayments>) payments;
    }

    /**
     * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<CreateSubscriptionDocumentation> documentation() {
        return (Optional<CreateSubscriptionDocumentation>) documentation;
    }

    public final static Builder builder() {
        return new Builder();
    }    

    /**
     * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
     */
    public CreateSubscriptionLinks withSelf(CreateSubscriptionSelf self) {
        Utils.checkNotNull(self, "self");
        this.self = Optional.ofNullable(self);
        return this;
    }

    /**
     * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
     */
    public CreateSubscriptionLinks withSelf(Optional<? extends CreateSubscriptionSelf> self) {
        Utils.checkNotNull(self, "self");
        this.self = self;
        return this;
    }

    /**
     * The API resource URL of the [customer](get-customer) this subscription was created for.
     */
    public CreateSubscriptionLinks withCustomer(CreateSubscriptionCustomer customer) {
        Utils.checkNotNull(customer, "customer");
        this.customer = JsonNullable.of(customer);
        return this;
    }

    /**
     * The API resource URL of the [customer](get-customer) this subscription was created for.
     */
    public CreateSubscriptionLinks withCustomer(JsonNullable<? extends CreateSubscriptionCustomer> customer) {
        Utils.checkNotNull(customer, "customer");
        this.customer = customer;
        return this;
    }

    /**
     * The API resource URL of the [mandate](get-mandate) this subscription was created for.
     */
    public CreateSubscriptionLinks withMandate(CreateSubscriptionMandate mandate) {
        Utils.checkNotNull(mandate, "mandate");
        this.mandate = JsonNullable.of(mandate);
        return this;
    }

    /**
     * The API resource URL of the [mandate](get-mandate) this subscription was created for.
     */
    public CreateSubscriptionLinks withMandate(JsonNullable<? extends CreateSubscriptionMandate> mandate) {
        Utils.checkNotNull(mandate, "mandate");
        this.mandate = mandate;
        return this;
    }

    /**
     * The API resource URL of the [profile](get-profile) this subscription was created for.
     */
    public CreateSubscriptionLinks withProfile(CreateSubscriptionProfile profile) {
        Utils.checkNotNull(profile, "profile");
        this.profile = JsonNullable.of(profile);
        return this;
    }

    /**
     * The API resource URL of the [profile](get-profile) this subscription was created for.
     */
    public CreateSubscriptionLinks withProfile(JsonNullable<? extends CreateSubscriptionProfile> profile) {
        Utils.checkNotNull(profile, "profile");
        this.profile = profile;
        return this;
    }

    /**
     * The API resource URL of the [payments](list-payments) created for this subscription. Omitted if no such payments exist (yet).
     */
    public CreateSubscriptionLinks withPayments(CreateSubscriptionPayments payments) {
        Utils.checkNotNull(payments, "payments");
        this.payments = JsonNullable.of(payments);
        return this;
    }

    /**
     * The API resource URL of the [payments](list-payments) created for this subscription. Omitted if no such payments exist (yet).
     */
    public CreateSubscriptionLinks withPayments(JsonNullable<? extends CreateSubscriptionPayments> payments) {
        Utils.checkNotNull(payments, "payments");
        this.payments = payments;
        return this;
    }

    /**
     * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
     */
    public CreateSubscriptionLinks withDocumentation(CreateSubscriptionDocumentation documentation) {
        Utils.checkNotNull(documentation, "documentation");
        this.documentation = Optional.ofNullable(documentation);
        return this;
    }

    /**
     * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
     */
    public CreateSubscriptionLinks withDocumentation(Optional<? extends CreateSubscriptionDocumentation> documentation) {
        Utils.checkNotNull(documentation, "documentation");
        this.documentation = documentation;
        return this;
    }

    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        CreateSubscriptionLinks other = (CreateSubscriptionLinks) o;
        return 
            Objects.deepEquals(this.self, other.self) &&
            Objects.deepEquals(this.customer, other.customer) &&
            Objects.deepEquals(this.mandate, other.mandate) &&
            Objects.deepEquals(this.profile, other.profile) &&
            Objects.deepEquals(this.payments, other.payments) &&
            Objects.deepEquals(this.documentation, other.documentation);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            self,
            customer,
            mandate,
            profile,
            payments,
            documentation);
    }
    
    @Override
    public String toString() {
        return Utils.toString(CreateSubscriptionLinks.class,
                "self", self,
                "customer", customer,
                "mandate", mandate,
                "profile", profile,
                "payments", payments,
                "documentation", documentation);
    }
    
    public final static class Builder {
 
        private Optional<? extends CreateSubscriptionSelf> self = Optional.empty();
 
        private JsonNullable<? extends CreateSubscriptionCustomer> customer = JsonNullable.undefined();
 
        private JsonNullable<? extends CreateSubscriptionMandate> mandate = JsonNullable.undefined();
 
        private JsonNullable<? extends CreateSubscriptionProfile> profile = JsonNullable.undefined();
 
        private JsonNullable<? extends CreateSubscriptionPayments> payments = JsonNullable.undefined();
 
        private Optional<? extends CreateSubscriptionDocumentation> documentation = Optional.empty();
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
         */
        public Builder self(CreateSubscriptionSelf self) {
            Utils.checkNotNull(self, "self");
            this.self = Optional.ofNullable(self);
            return this;
        }

        /**
         * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
         */
        public Builder self(Optional<? extends CreateSubscriptionSelf> self) {
            Utils.checkNotNull(self, "self");
            this.self = self;
            return this;
        }

        /**
         * The API resource URL of the [customer](get-customer) this subscription was created for.
         */
        public Builder customer(CreateSubscriptionCustomer customer) {
            Utils.checkNotNull(customer, "customer");
            this.customer = JsonNullable.of(customer);
            return this;
        }

        /**
         * The API resource URL of the [customer](get-customer) this subscription was created for.
         */
        public Builder customer(JsonNullable<? extends CreateSubscriptionCustomer> customer) {
            Utils.checkNotNull(customer, "customer");
            this.customer = customer;
            return this;
        }

        /**
         * The API resource URL of the [mandate](get-mandate) this subscription was created for.
         */
        public Builder mandate(CreateSubscriptionMandate mandate) {
            Utils.checkNotNull(mandate, "mandate");
            this.mandate = JsonNullable.of(mandate);
            return this;
        }

        /**
         * The API resource URL of the [mandate](get-mandate) this subscription was created for.
         */
        public Builder mandate(JsonNullable<? extends CreateSubscriptionMandate> mandate) {
            Utils.checkNotNull(mandate, "mandate");
            this.mandate = mandate;
            return this;
        }

        /**
         * The API resource URL of the [profile](get-profile) this subscription was created for.
         */
        public Builder profile(CreateSubscriptionProfile profile) {
            Utils.checkNotNull(profile, "profile");
            this.profile = JsonNullable.of(profile);
            return this;
        }

        /**
         * The API resource URL of the [profile](get-profile) this subscription was created for.
         */
        public Builder profile(JsonNullable<? extends CreateSubscriptionProfile> profile) {
            Utils.checkNotNull(profile, "profile");
            this.profile = profile;
            return this;
        }

        /**
         * The API resource URL of the [payments](list-payments) created for this subscription. Omitted if no such payments exist (yet).
         */
        public Builder payments(CreateSubscriptionPayments payments) {
            Utils.checkNotNull(payments, "payments");
            this.payments = JsonNullable.of(payments);
            return this;
        }

        /**
         * The API resource URL of the [payments](list-payments) created for this subscription. Omitted if no such payments exist (yet).
         */
        public Builder payments(JsonNullable<? extends CreateSubscriptionPayments> payments) {
            Utils.checkNotNull(payments, "payments");
            this.payments = payments;
            return this;
        }

        /**
         * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
         */
        public Builder documentation(CreateSubscriptionDocumentation documentation) {
            Utils.checkNotNull(documentation, "documentation");
            this.documentation = Optional.ofNullable(documentation);
            return this;
        }

        /**
         * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
         */
        public Builder documentation(Optional<? extends CreateSubscriptionDocumentation> documentation) {
            Utils.checkNotNull(documentation, "documentation");
            this.documentation = documentation;
            return this;
        }
        
        public CreateSubscriptionLinks build() {
            return new CreateSubscriptionLinks(
                self,
                customer,
                mandate,
                profile,
                payments,
                documentation);
        }
    }
}
