/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.mollie.mollie.models.operations;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.mollie.mollie.utils.Utils;
import java.lang.Override;
import java.lang.String;
import java.lang.SuppressWarnings;
import java.util.Optional;

/**
 * GetWebhookEventLinks
 * 
 * <p>An object with several relevant URLs. Every URL object will contain an `href` and a `type` field.
 */
public class GetWebhookEventLinks {
    /**
     * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
     */
    @JsonProperty("self")
    private GetWebhookEventSelf self;

    /**
     * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
     */
    @JsonProperty("documentation")
    private GetWebhookEventDocumentation documentation;

    /**
     * The API resource URL of the entity that this event belongs to.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("entity")
    private Optional<? extends Entity> entity;

    @JsonCreator
    public GetWebhookEventLinks(
            @JsonProperty("self") GetWebhookEventSelf self,
            @JsonProperty("documentation") GetWebhookEventDocumentation documentation,
            @JsonProperty("entity") Optional<? extends Entity> entity) {
        Utils.checkNotNull(self, "self");
        Utils.checkNotNull(documentation, "documentation");
        Utils.checkNotNull(entity, "entity");
        this.self = self;
        this.documentation = documentation;
        this.entity = entity;
    }
    
    public GetWebhookEventLinks(
            GetWebhookEventSelf self,
            GetWebhookEventDocumentation documentation) {
        this(self, documentation, Optional.empty());
    }

    /**
     * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
     */
    @JsonIgnore
    public GetWebhookEventSelf self() {
        return self;
    }

    /**
     * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
     */
    @JsonIgnore
    public GetWebhookEventDocumentation documentation() {
        return documentation;
    }

    /**
     * The API resource URL of the entity that this event belongs to.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<Entity> entity() {
        return (Optional<Entity>) entity;
    }

    public static Builder builder() {
        return new Builder();
    }


    /**
     * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
     */
    public GetWebhookEventLinks withSelf(GetWebhookEventSelf self) {
        Utils.checkNotNull(self, "self");
        this.self = self;
        return this;
    }

    /**
     * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
     */
    public GetWebhookEventLinks withDocumentation(GetWebhookEventDocumentation documentation) {
        Utils.checkNotNull(documentation, "documentation");
        this.documentation = documentation;
        return this;
    }

    /**
     * The API resource URL of the entity that this event belongs to.
     */
    public GetWebhookEventLinks withEntity(Entity entity) {
        Utils.checkNotNull(entity, "entity");
        this.entity = Optional.ofNullable(entity);
        return this;
    }


    /**
     * The API resource URL of the entity that this event belongs to.
     */
    public GetWebhookEventLinks withEntity(Optional<? extends Entity> entity) {
        Utils.checkNotNull(entity, "entity");
        this.entity = entity;
        return this;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        GetWebhookEventLinks other = (GetWebhookEventLinks) o;
        return 
            Utils.enhancedDeepEquals(this.self, other.self) &&
            Utils.enhancedDeepEquals(this.documentation, other.documentation) &&
            Utils.enhancedDeepEquals(this.entity, other.entity);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            self, documentation, entity);
    }
    
    @Override
    public String toString() {
        return Utils.toString(GetWebhookEventLinks.class,
                "self", self,
                "documentation", documentation,
                "entity", entity);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private GetWebhookEventSelf self;

        private GetWebhookEventDocumentation documentation;

        private Optional<? extends Entity> entity = Optional.empty();

        private Builder() {
          // force use of static builder() method
        }


        /**
         * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
         */
        public Builder self(GetWebhookEventSelf self) {
            Utils.checkNotNull(self, "self");
            this.self = self;
            return this;
        }


        /**
         * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
         */
        public Builder documentation(GetWebhookEventDocumentation documentation) {
            Utils.checkNotNull(documentation, "documentation");
            this.documentation = documentation;
            return this;
        }


        /**
         * The API resource URL of the entity that this event belongs to.
         */
        public Builder entity(Entity entity) {
            Utils.checkNotNull(entity, "entity");
            this.entity = Optional.ofNullable(entity);
            return this;
        }

        /**
         * The API resource URL of the entity that this event belongs to.
         */
        public Builder entity(Optional<? extends Entity> entity) {
            Utils.checkNotNull(entity, "entity");
            this.entity = entity;
            return this;
        }

        public GetWebhookEventLinks build() {

            return new GetWebhookEventLinks(
                self, documentation, entity);
        }

    }
}
