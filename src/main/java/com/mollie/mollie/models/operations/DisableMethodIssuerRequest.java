/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

package com.mollie.mollie.models.operations;


import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.mollie.mollie.utils.SpeakeasyMetadata;
import com.mollie.mollie.utils.Utils;
import java.lang.Override;
import java.lang.String;
import java.util.Objects;


public class DisableMethodIssuerRequest {

    /**
     * Provide the ID of the related profile.
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=profileId")
    private String profileId;

    /**
     * Provide the ID of the related payment method.
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=methodId")
    private String methodId;

    /**
     * Provide the ID of the item you want to perform this operation on.
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=id")
    private String id;

    @JsonCreator
    public DisableMethodIssuerRequest(
            String profileId,
            String methodId,
            String id) {
        Utils.checkNotNull(profileId, "profileId");
        Utils.checkNotNull(methodId, "methodId");
        Utils.checkNotNull(id, "id");
        this.profileId = profileId;
        this.methodId = methodId;
        this.id = id;
    }

    /**
     * Provide the ID of the related profile.
     */
    @JsonIgnore
    public String profileId() {
        return profileId;
    }

    /**
     * Provide the ID of the related payment method.
     */
    @JsonIgnore
    public String methodId() {
        return methodId;
    }

    /**
     * Provide the ID of the item you want to perform this operation on.
     */
    @JsonIgnore
    public String id() {
        return id;
    }

    public final static Builder builder() {
        return new Builder();
    }

    /**
     * Provide the ID of the related profile.
     */
    public DisableMethodIssuerRequest withProfileId(String profileId) {
        Utils.checkNotNull(profileId, "profileId");
        this.profileId = profileId;
        return this;
    }

    /**
     * Provide the ID of the related payment method.
     */
    public DisableMethodIssuerRequest withMethodId(String methodId) {
        Utils.checkNotNull(methodId, "methodId");
        this.methodId = methodId;
        return this;
    }

    /**
     * Provide the ID of the item you want to perform this operation on.
     */
    public DisableMethodIssuerRequest withId(String id) {
        Utils.checkNotNull(id, "id");
        this.id = id;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        DisableMethodIssuerRequest other = (DisableMethodIssuerRequest) o;
        return 
            Objects.deepEquals(this.profileId, other.profileId) &&
            Objects.deepEquals(this.methodId, other.methodId) &&
            Objects.deepEquals(this.id, other.id);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            profileId,
            methodId,
            id);
    }
    
    @Override
    public String toString() {
        return Utils.toString(DisableMethodIssuerRequest.class,
                "profileId", profileId,
                "methodId", methodId,
                "id", id);
    }
    
    public final static class Builder {
 
        private String profileId;
 
        private String methodId;
 
        private String id;  
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * Provide the ID of the related profile.
         */
        public Builder profileId(String profileId) {
            Utils.checkNotNull(profileId, "profileId");
            this.profileId = profileId;
            return this;
        }

        /**
         * Provide the ID of the related payment method.
         */
        public Builder methodId(String methodId) {
            Utils.checkNotNull(methodId, "methodId");
            this.methodId = methodId;
            return this;
        }

        /**
         * Provide the ID of the item you want to perform this operation on.
         */
        public Builder id(String id) {
            Utils.checkNotNull(id, "id");
            this.id = id;
            return this;
        }
        
        public DisableMethodIssuerRequest build() {
            return new DisableMethodIssuerRequest(
                profileId,
                methodId,
                id);
        }
    }
}

