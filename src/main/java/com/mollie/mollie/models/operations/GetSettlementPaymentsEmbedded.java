/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.mollie.mollie.models.operations;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.mollie.mollie.utils.Utils;
import java.lang.Override;
import java.lang.String;
import java.lang.SuppressWarnings;
import java.util.List;
import java.util.Objects;
import java.util.Optional;

public class GetSettlementPaymentsEmbedded {

    /**
     * An array of payment objects.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("payments")
    private Optional<? extends List<GetSettlementPaymentsPayments>> payments;

    @JsonCreator
    public GetSettlementPaymentsEmbedded(
            @JsonProperty("payments") Optional<? extends List<GetSettlementPaymentsPayments>> payments) {
        Utils.checkNotNull(payments, "payments");
        this.payments = payments;
    }
    
    public GetSettlementPaymentsEmbedded() {
        this(Optional.empty());
    }

    /**
     * An array of payment objects.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<List<GetSettlementPaymentsPayments>> payments() {
        return (Optional<List<GetSettlementPaymentsPayments>>) payments;
    }

    public final static Builder builder() {
        return new Builder();
    }    

    /**
     * An array of payment objects.
     */
    public GetSettlementPaymentsEmbedded withPayments(List<GetSettlementPaymentsPayments> payments) {
        Utils.checkNotNull(payments, "payments");
        this.payments = Optional.ofNullable(payments);
        return this;
    }

    /**
     * An array of payment objects.
     */
    public GetSettlementPaymentsEmbedded withPayments(Optional<? extends List<GetSettlementPaymentsPayments>> payments) {
        Utils.checkNotNull(payments, "payments");
        this.payments = payments;
        return this;
    }

    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        GetSettlementPaymentsEmbedded other = (GetSettlementPaymentsEmbedded) o;
        return 
            Objects.deepEquals(this.payments, other.payments);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            payments);
    }
    
    @Override
    public String toString() {
        return Utils.toString(GetSettlementPaymentsEmbedded.class,
                "payments", payments);
    }
    
    public final static class Builder {
 
        private Optional<? extends List<GetSettlementPaymentsPayments>> payments = Optional.empty();
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * An array of payment objects.
         */
        public Builder payments(List<GetSettlementPaymentsPayments> payments) {
            Utils.checkNotNull(payments, "payments");
            this.payments = Optional.ofNullable(payments);
            return this;
        }

        /**
         * An array of payment objects.
         */
        public Builder payments(Optional<? extends List<GetSettlementPaymentsPayments>> payments) {
            Utils.checkNotNull(payments, "payments");
            this.payments = payments;
            return this;
        }
        
        public GetSettlementPaymentsEmbedded build() {
            return new GetSettlementPaymentsEmbedded(
                payments);
        }
    }
}
