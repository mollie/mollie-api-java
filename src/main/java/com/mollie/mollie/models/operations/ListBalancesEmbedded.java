/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.mollie.mollie.models.operations;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.mollie.mollie.utils.Utils;
import java.lang.Override;
import java.lang.String;
import java.lang.SuppressWarnings;
import java.util.List;
import java.util.Objects;
import java.util.Optional;

public class ListBalancesEmbedded {

    /**
     * An array of balance objects. For a complete reference of the balance object, refer to the [Get balance endpoint](get-balance) documentation.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("balances")
    private Optional<? extends List<Balances>> balances;

    @JsonCreator
    public ListBalancesEmbedded(
            @JsonProperty("balances") Optional<? extends List<Balances>> balances) {
        Utils.checkNotNull(balances, "balances");
        this.balances = balances;
    }
    
    public ListBalancesEmbedded() {
        this(Optional.empty());
    }

    /**
     * An array of balance objects. For a complete reference of the balance object, refer to the [Get balance endpoint](get-balance) documentation.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<List<Balances>> balances() {
        return (Optional<List<Balances>>) balances;
    }

    public final static Builder builder() {
        return new Builder();
    }    

    /**
     * An array of balance objects. For a complete reference of the balance object, refer to the [Get balance endpoint](get-balance) documentation.
     */
    public ListBalancesEmbedded withBalances(List<Balances> balances) {
        Utils.checkNotNull(balances, "balances");
        this.balances = Optional.ofNullable(balances);
        return this;
    }

    /**
     * An array of balance objects. For a complete reference of the balance object, refer to the [Get balance endpoint](get-balance) documentation.
     */
    public ListBalancesEmbedded withBalances(Optional<? extends List<Balances>> balances) {
        Utils.checkNotNull(balances, "balances");
        this.balances = balances;
        return this;
    }

    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ListBalancesEmbedded other = (ListBalancesEmbedded) o;
        return 
            Objects.deepEquals(this.balances, other.balances);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            balances);
    }
    
    @Override
    public String toString() {
        return Utils.toString(ListBalancesEmbedded.class,
                "balances", balances);
    }
    
    public final static class Builder {
 
        private Optional<? extends List<Balances>> balances = Optional.empty();
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * An array of balance objects. For a complete reference of the balance object, refer to the [Get balance endpoint](get-balance) documentation.
         */
        public Builder balances(List<Balances> balances) {
            Utils.checkNotNull(balances, "balances");
            this.balances = Optional.ofNullable(balances);
            return this;
        }

        /**
         * An array of balance objects. For a complete reference of the balance object, refer to the [Get balance endpoint](get-balance) documentation.
         */
        public Builder balances(Optional<? extends List<Balances>> balances) {
            Utils.checkNotNull(balances, "balances");
            this.balances = balances;
            return this;
        }
        
        public ListBalancesEmbedded build() {
            return new ListBalancesEmbedded(
                balances);
        }
    }
}
