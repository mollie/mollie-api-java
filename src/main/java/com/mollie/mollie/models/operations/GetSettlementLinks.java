/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.mollie.mollie.models.operations;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.mollie.mollie.utils.Utils;
import java.lang.Override;
import java.lang.String;
import java.lang.SuppressWarnings;
import java.util.Objects;
import java.util.Optional;
import org.openapitools.jackson.nullable.JsonNullable;

/**
 * GetSettlementLinks
 * 
 * <p>An object with several relevant URLs. Every URL object will contain an `href` and a `type` field.
 */
public class GetSettlementLinks {

    /**
     * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("self")
    private Optional<? extends GetSettlementSelf> self;

    /**
     * The API resource URL of the [payments](list-payments) included in this settlement.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("payments")
    private Optional<? extends GetSettlementPayments> payments;

    /**
     * The API resource URL of the [captures](list-captures) included in this settlement.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("captures")
    private Optional<? extends GetSettlementCaptures> captures;

    /**
     * The API resource URL of the [refunds](list-refunds) deducted from this settlement.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("refunds")
    private Optional<? extends GetSettlementRefunds> refunds;

    /**
     * The API resource URL of the [chargebacks](list-chargebacks) deducted from this settlement.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("chargebacks")
    private Optional<? extends GetSettlementChargebacks> chargebacks;

    /**
     * The API resource URL of the [invoice](list-invoices).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("invoice")
    private JsonNullable<? extends Invoice> invoice;

    /**
     * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("documentation")
    private Optional<? extends GetSettlementDocumentation> documentation;

    @JsonCreator
    public GetSettlementLinks(
            @JsonProperty("self") Optional<? extends GetSettlementSelf> self,
            @JsonProperty("payments") Optional<? extends GetSettlementPayments> payments,
            @JsonProperty("captures") Optional<? extends GetSettlementCaptures> captures,
            @JsonProperty("refunds") Optional<? extends GetSettlementRefunds> refunds,
            @JsonProperty("chargebacks") Optional<? extends GetSettlementChargebacks> chargebacks,
            @JsonProperty("invoice") JsonNullable<? extends Invoice> invoice,
            @JsonProperty("documentation") Optional<? extends GetSettlementDocumentation> documentation) {
        Utils.checkNotNull(self, "self");
        Utils.checkNotNull(payments, "payments");
        Utils.checkNotNull(captures, "captures");
        Utils.checkNotNull(refunds, "refunds");
        Utils.checkNotNull(chargebacks, "chargebacks");
        Utils.checkNotNull(invoice, "invoice");
        Utils.checkNotNull(documentation, "documentation");
        this.self = self;
        this.payments = payments;
        this.captures = captures;
        this.refunds = refunds;
        this.chargebacks = chargebacks;
        this.invoice = invoice;
        this.documentation = documentation;
    }
    
    public GetSettlementLinks() {
        this(Optional.empty(), Optional.empty(), Optional.empty(), Optional.empty(), Optional.empty(), JsonNullable.undefined(), Optional.empty());
    }

    /**
     * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<GetSettlementSelf> self() {
        return (Optional<GetSettlementSelf>) self;
    }

    /**
     * The API resource URL of the [payments](list-payments) included in this settlement.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<GetSettlementPayments> payments() {
        return (Optional<GetSettlementPayments>) payments;
    }

    /**
     * The API resource URL of the [captures](list-captures) included in this settlement.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<GetSettlementCaptures> captures() {
        return (Optional<GetSettlementCaptures>) captures;
    }

    /**
     * The API resource URL of the [refunds](list-refunds) deducted from this settlement.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<GetSettlementRefunds> refunds() {
        return (Optional<GetSettlementRefunds>) refunds;
    }

    /**
     * The API resource URL of the [chargebacks](list-chargebacks) deducted from this settlement.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<GetSettlementChargebacks> chargebacks() {
        return (Optional<GetSettlementChargebacks>) chargebacks;
    }

    /**
     * The API resource URL of the [invoice](list-invoices).
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public JsonNullable<Invoice> invoice() {
        return (JsonNullable<Invoice>) invoice;
    }

    /**
     * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<GetSettlementDocumentation> documentation() {
        return (Optional<GetSettlementDocumentation>) documentation;
    }

    public final static Builder builder() {
        return new Builder();
    }    

    /**
     * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
     */
    public GetSettlementLinks withSelf(GetSettlementSelf self) {
        Utils.checkNotNull(self, "self");
        this.self = Optional.ofNullable(self);
        return this;
    }

    /**
     * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
     */
    public GetSettlementLinks withSelf(Optional<? extends GetSettlementSelf> self) {
        Utils.checkNotNull(self, "self");
        this.self = self;
        return this;
    }

    /**
     * The API resource URL of the [payments](list-payments) included in this settlement.
     */
    public GetSettlementLinks withPayments(GetSettlementPayments payments) {
        Utils.checkNotNull(payments, "payments");
        this.payments = Optional.ofNullable(payments);
        return this;
    }

    /**
     * The API resource URL of the [payments](list-payments) included in this settlement.
     */
    public GetSettlementLinks withPayments(Optional<? extends GetSettlementPayments> payments) {
        Utils.checkNotNull(payments, "payments");
        this.payments = payments;
        return this;
    }

    /**
     * The API resource URL of the [captures](list-captures) included in this settlement.
     */
    public GetSettlementLinks withCaptures(GetSettlementCaptures captures) {
        Utils.checkNotNull(captures, "captures");
        this.captures = Optional.ofNullable(captures);
        return this;
    }

    /**
     * The API resource URL of the [captures](list-captures) included in this settlement.
     */
    public GetSettlementLinks withCaptures(Optional<? extends GetSettlementCaptures> captures) {
        Utils.checkNotNull(captures, "captures");
        this.captures = captures;
        return this;
    }

    /**
     * The API resource URL of the [refunds](list-refunds) deducted from this settlement.
     */
    public GetSettlementLinks withRefunds(GetSettlementRefunds refunds) {
        Utils.checkNotNull(refunds, "refunds");
        this.refunds = Optional.ofNullable(refunds);
        return this;
    }

    /**
     * The API resource URL of the [refunds](list-refunds) deducted from this settlement.
     */
    public GetSettlementLinks withRefunds(Optional<? extends GetSettlementRefunds> refunds) {
        Utils.checkNotNull(refunds, "refunds");
        this.refunds = refunds;
        return this;
    }

    /**
     * The API resource URL of the [chargebacks](list-chargebacks) deducted from this settlement.
     */
    public GetSettlementLinks withChargebacks(GetSettlementChargebacks chargebacks) {
        Utils.checkNotNull(chargebacks, "chargebacks");
        this.chargebacks = Optional.ofNullable(chargebacks);
        return this;
    }

    /**
     * The API resource URL of the [chargebacks](list-chargebacks) deducted from this settlement.
     */
    public GetSettlementLinks withChargebacks(Optional<? extends GetSettlementChargebacks> chargebacks) {
        Utils.checkNotNull(chargebacks, "chargebacks");
        this.chargebacks = chargebacks;
        return this;
    }

    /**
     * The API resource URL of the [invoice](list-invoices).
     */
    public GetSettlementLinks withInvoice(Invoice invoice) {
        Utils.checkNotNull(invoice, "invoice");
        this.invoice = JsonNullable.of(invoice);
        return this;
    }

    /**
     * The API resource URL of the [invoice](list-invoices).
     */
    public GetSettlementLinks withInvoice(JsonNullable<? extends Invoice> invoice) {
        Utils.checkNotNull(invoice, "invoice");
        this.invoice = invoice;
        return this;
    }

    /**
     * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
     */
    public GetSettlementLinks withDocumentation(GetSettlementDocumentation documentation) {
        Utils.checkNotNull(documentation, "documentation");
        this.documentation = Optional.ofNullable(documentation);
        return this;
    }

    /**
     * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
     */
    public GetSettlementLinks withDocumentation(Optional<? extends GetSettlementDocumentation> documentation) {
        Utils.checkNotNull(documentation, "documentation");
        this.documentation = documentation;
        return this;
    }

    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        GetSettlementLinks other = (GetSettlementLinks) o;
        return 
            Objects.deepEquals(this.self, other.self) &&
            Objects.deepEquals(this.payments, other.payments) &&
            Objects.deepEquals(this.captures, other.captures) &&
            Objects.deepEquals(this.refunds, other.refunds) &&
            Objects.deepEquals(this.chargebacks, other.chargebacks) &&
            Objects.deepEquals(this.invoice, other.invoice) &&
            Objects.deepEquals(this.documentation, other.documentation);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            self,
            payments,
            captures,
            refunds,
            chargebacks,
            invoice,
            documentation);
    }
    
    @Override
    public String toString() {
        return Utils.toString(GetSettlementLinks.class,
                "self", self,
                "payments", payments,
                "captures", captures,
                "refunds", refunds,
                "chargebacks", chargebacks,
                "invoice", invoice,
                "documentation", documentation);
    }
    
    public final static class Builder {
 
        private Optional<? extends GetSettlementSelf> self = Optional.empty();
 
        private Optional<? extends GetSettlementPayments> payments = Optional.empty();
 
        private Optional<? extends GetSettlementCaptures> captures = Optional.empty();
 
        private Optional<? extends GetSettlementRefunds> refunds = Optional.empty();
 
        private Optional<? extends GetSettlementChargebacks> chargebacks = Optional.empty();
 
        private JsonNullable<? extends Invoice> invoice = JsonNullable.undefined();
 
        private Optional<? extends GetSettlementDocumentation> documentation = Optional.empty();
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
         */
        public Builder self(GetSettlementSelf self) {
            Utils.checkNotNull(self, "self");
            this.self = Optional.ofNullable(self);
            return this;
        }

        /**
         * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
         */
        public Builder self(Optional<? extends GetSettlementSelf> self) {
            Utils.checkNotNull(self, "self");
            this.self = self;
            return this;
        }

        /**
         * The API resource URL of the [payments](list-payments) included in this settlement.
         */
        public Builder payments(GetSettlementPayments payments) {
            Utils.checkNotNull(payments, "payments");
            this.payments = Optional.ofNullable(payments);
            return this;
        }

        /**
         * The API resource URL of the [payments](list-payments) included in this settlement.
         */
        public Builder payments(Optional<? extends GetSettlementPayments> payments) {
            Utils.checkNotNull(payments, "payments");
            this.payments = payments;
            return this;
        }

        /**
         * The API resource URL of the [captures](list-captures) included in this settlement.
         */
        public Builder captures(GetSettlementCaptures captures) {
            Utils.checkNotNull(captures, "captures");
            this.captures = Optional.ofNullable(captures);
            return this;
        }

        /**
         * The API resource URL of the [captures](list-captures) included in this settlement.
         */
        public Builder captures(Optional<? extends GetSettlementCaptures> captures) {
            Utils.checkNotNull(captures, "captures");
            this.captures = captures;
            return this;
        }

        /**
         * The API resource URL of the [refunds](list-refunds) deducted from this settlement.
         */
        public Builder refunds(GetSettlementRefunds refunds) {
            Utils.checkNotNull(refunds, "refunds");
            this.refunds = Optional.ofNullable(refunds);
            return this;
        }

        /**
         * The API resource URL of the [refunds](list-refunds) deducted from this settlement.
         */
        public Builder refunds(Optional<? extends GetSettlementRefunds> refunds) {
            Utils.checkNotNull(refunds, "refunds");
            this.refunds = refunds;
            return this;
        }

        /**
         * The API resource URL of the [chargebacks](list-chargebacks) deducted from this settlement.
         */
        public Builder chargebacks(GetSettlementChargebacks chargebacks) {
            Utils.checkNotNull(chargebacks, "chargebacks");
            this.chargebacks = Optional.ofNullable(chargebacks);
            return this;
        }

        /**
         * The API resource URL of the [chargebacks](list-chargebacks) deducted from this settlement.
         */
        public Builder chargebacks(Optional<? extends GetSettlementChargebacks> chargebacks) {
            Utils.checkNotNull(chargebacks, "chargebacks");
            this.chargebacks = chargebacks;
            return this;
        }

        /**
         * The API resource URL of the [invoice](list-invoices).
         */
        public Builder invoice(Invoice invoice) {
            Utils.checkNotNull(invoice, "invoice");
            this.invoice = JsonNullable.of(invoice);
            return this;
        }

        /**
         * The API resource URL of the [invoice](list-invoices).
         */
        public Builder invoice(JsonNullable<? extends Invoice> invoice) {
            Utils.checkNotNull(invoice, "invoice");
            this.invoice = invoice;
            return this;
        }

        /**
         * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
         */
        public Builder documentation(GetSettlementDocumentation documentation) {
            Utils.checkNotNull(documentation, "documentation");
            this.documentation = Optional.ofNullable(documentation);
            return this;
        }

        /**
         * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
         */
        public Builder documentation(Optional<? extends GetSettlementDocumentation> documentation) {
            Utils.checkNotNull(documentation, "documentation");
            this.documentation = documentation;
            return this;
        }
        
        public GetSettlementLinks build() {
            return new GetSettlementLinks(
                self,
                payments,
                captures,
                refunds,
                chargebacks,
                invoice,
                documentation);
        }
    }
}
