/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.mollie.mollie.models.operations;

import static com.mollie.mollie.operations.Operations.RequestOperation;

import com.mollie.mollie.SDKConfiguration;
import com.mollie.mollie.operations.ListClients;
import com.mollie.mollie.utils.Headers;
import com.mollie.mollie.utils.Options;
import com.mollie.mollie.utils.RetryConfig;
import com.mollie.mollie.utils.Utils;
import java.lang.Long;
import java.lang.String;
import java.util.Optional;
import org.openapitools.jackson.nullable.JsonNullable;

public class ListClientsRequestBuilder {

    private JsonNullable<String> embed = JsonNullable.undefined();
    private JsonNullable<String> from = JsonNullable.undefined();
    private JsonNullable<Long> limit = JsonNullable.undefined();
    private Optional<String> idempotencyKey = Optional.empty();
    private Optional<RetryConfig> retryConfig = Optional.empty();
    private final SDKConfiguration sdkConfiguration;
    private final Headers _headers = new Headers(); 

    public ListClientsRequestBuilder(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
    }

    public ListClientsRequestBuilder embed(String embed) {
        Utils.checkNotNull(embed, "embed");
        this.embed = JsonNullable.of(embed);
        return this;
    }

    public ListClientsRequestBuilder embed(JsonNullable<String> embed) {
        Utils.checkNotNull(embed, "embed");
        this.embed = embed;
        return this;
    }

    public ListClientsRequestBuilder from(String from) {
        Utils.checkNotNull(from, "from");
        this.from = JsonNullable.of(from);
        return this;
    }

    public ListClientsRequestBuilder from(JsonNullable<String> from) {
        Utils.checkNotNull(from, "from");
        this.from = from;
        return this;
    }

    public ListClientsRequestBuilder limit(long limit) {
        Utils.checkNotNull(limit, "limit");
        this.limit = JsonNullable.of(limit);
        return this;
    }

    public ListClientsRequestBuilder limit(JsonNullable<Long> limit) {
        Utils.checkNotNull(limit, "limit");
        this.limit = limit;
        return this;
    }
                
    public ListClientsRequestBuilder idempotencyKey(String idempotencyKey) {
        Utils.checkNotNull(idempotencyKey, "idempotencyKey");
        this.idempotencyKey = Optional.of(idempotencyKey);
        return this;
    }

    public ListClientsRequestBuilder idempotencyKey(Optional<String> idempotencyKey) {
        Utils.checkNotNull(idempotencyKey, "idempotencyKey");
        this.idempotencyKey = idempotencyKey;
        return this;
    }
                
    public ListClientsRequestBuilder retryConfig(RetryConfig retryConfig) {
        Utils.checkNotNull(retryConfig, "retryConfig");
        this.retryConfig = Optional.of(retryConfig);
        return this;
    }

    public ListClientsRequestBuilder retryConfig(Optional<RetryConfig> retryConfig) {
        Utils.checkNotNull(retryConfig, "retryConfig");
        this.retryConfig = retryConfig;
        return this;
    }


    private ListClientsRequest buildRequest() {

        ListClientsRequest request = new ListClientsRequest(embed,
            from,
            limit,
            idempotencyKey);

        return request;
    }

    public ListClientsResponse call() {
        Optional<Options> options = Optional.of(Options.builder()
            .retryConfig(retryConfig)
            .build());

        RequestOperation<ListClientsRequest, ListClientsResponse> operation
              = new ListClients.Sync(sdkConfiguration, options, _headers);
        ListClientsRequest request = buildRequest();

        return operation.handleResponse(operation.doRequest(request));
    }
}
