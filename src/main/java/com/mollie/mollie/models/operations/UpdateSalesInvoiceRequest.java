/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.mollie.mollie.models.operations;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.mollie.mollie.models.components.UpdateValuesSalesInvoice;
import com.mollie.mollie.utils.SpeakeasyMetadata;
import com.mollie.mollie.utils.Utils;
import java.lang.Override;
import java.lang.String;
import java.lang.SuppressWarnings;
import java.util.Optional;


public class UpdateSalesInvoiceRequest {
    /**
     * Provide the ID of the item you want to perform this operation on.
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=id")
    private String id;


    @SpeakeasyMetadata("request:mediaType=application/json")
    private Optional<? extends UpdateValuesSalesInvoice> updateValuesSalesInvoice;

    @JsonCreator
    public UpdateSalesInvoiceRequest(
            String id,
            Optional<? extends UpdateValuesSalesInvoice> updateValuesSalesInvoice) {
        Utils.checkNotNull(id, "id");
        Utils.checkNotNull(updateValuesSalesInvoice, "updateValuesSalesInvoice");
        this.id = id;
        this.updateValuesSalesInvoice = updateValuesSalesInvoice;
    }
    
    public UpdateSalesInvoiceRequest(
            String id) {
        this(id, Optional.empty());
    }

    /**
     * Provide the ID of the item you want to perform this operation on.
     */
    @JsonIgnore
    public String id() {
        return id;
    }

    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<UpdateValuesSalesInvoice> updateValuesSalesInvoice() {
        return (Optional<UpdateValuesSalesInvoice>) updateValuesSalesInvoice;
    }

    public static Builder builder() {
        return new Builder();
    }


    /**
     * Provide the ID of the item you want to perform this operation on.
     */
    public UpdateSalesInvoiceRequest withId(String id) {
        Utils.checkNotNull(id, "id");
        this.id = id;
        return this;
    }

    public UpdateSalesInvoiceRequest withUpdateValuesSalesInvoice(UpdateValuesSalesInvoice updateValuesSalesInvoice) {
        Utils.checkNotNull(updateValuesSalesInvoice, "updateValuesSalesInvoice");
        this.updateValuesSalesInvoice = Optional.ofNullable(updateValuesSalesInvoice);
        return this;
    }


    public UpdateSalesInvoiceRequest withUpdateValuesSalesInvoice(Optional<? extends UpdateValuesSalesInvoice> updateValuesSalesInvoice) {
        Utils.checkNotNull(updateValuesSalesInvoice, "updateValuesSalesInvoice");
        this.updateValuesSalesInvoice = updateValuesSalesInvoice;
        return this;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        UpdateSalesInvoiceRequest other = (UpdateSalesInvoiceRequest) o;
        return 
            Utils.enhancedDeepEquals(this.id, other.id) &&
            Utils.enhancedDeepEquals(this.updateValuesSalesInvoice, other.updateValuesSalesInvoice);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            id, updateValuesSalesInvoice);
    }
    
    @Override
    public String toString() {
        return Utils.toString(UpdateSalesInvoiceRequest.class,
                "id", id,
                "updateValuesSalesInvoice", updateValuesSalesInvoice);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private String id;

        private Optional<? extends UpdateValuesSalesInvoice> updateValuesSalesInvoice = Optional.empty();

        private Builder() {
          // force use of static builder() method
        }


        /**
         * Provide the ID of the item you want to perform this operation on.
         */
        public Builder id(String id) {
            Utils.checkNotNull(id, "id");
            this.id = id;
            return this;
        }


        public Builder updateValuesSalesInvoice(UpdateValuesSalesInvoice updateValuesSalesInvoice) {
            Utils.checkNotNull(updateValuesSalesInvoice, "updateValuesSalesInvoice");
            this.updateValuesSalesInvoice = Optional.ofNullable(updateValuesSalesInvoice);
            return this;
        }

        public Builder updateValuesSalesInvoice(Optional<? extends UpdateValuesSalesInvoice> updateValuesSalesInvoice) {
            Utils.checkNotNull(updateValuesSalesInvoice, "updateValuesSalesInvoice");
            this.updateValuesSalesInvoice = updateValuesSalesInvoice;
            return this;
        }

        public UpdateSalesInvoiceRequest build() {

            return new UpdateSalesInvoiceRequest(
                id, updateValuesSalesInvoice);
        }

    }
}
