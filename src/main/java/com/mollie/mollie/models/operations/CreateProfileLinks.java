/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.mollie.mollie.models.operations;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.mollie.mollie.utils.Utils;
import java.lang.Override;
import java.lang.String;
import java.lang.SuppressWarnings;
import java.util.Optional;

/**
 * CreateProfileLinks
 * 
 * <p>An object with several relevant URLs. Every URL object will contain an `href` and a `type` field.
 */
public class CreateProfileLinks {
    /**
     * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("self")
    private Optional<? extends CreateProfileSelf> self;

    /**
     * Link to the profile in the Mollie dashboard.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dashboard")
    private Optional<? extends CreateProfileDashboard> dashboard;

    /**
     * The API resource URL of the chargebacks that belong to this profile.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("chargebacks")
    private Optional<? extends CreateProfileChargebacks> chargebacks;

    /**
     * The API resource URL of the methods that are enabled for this profile.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("methods")
    private Optional<? extends CreateProfileMethods> methods;

    /**
     * The API resource URL of the payments that belong to this profile.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("payments")
    private Optional<? extends CreateProfilePayments> payments;

    /**
     * The API resource URL of the refunds that belong to this profile.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("refunds")
    private Optional<? extends CreateProfileRefunds> refunds;

    /**
     * The hosted checkout preview URL. You need to be logged in to access this page.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("checkoutPreviewUrl")
    private Optional<? extends CheckoutPreviewUrl> checkoutPreviewUrl;

    /**
     * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("documentation")
    private Optional<? extends CreateProfileDocumentation> documentation;

    @JsonCreator
    public CreateProfileLinks(
            @JsonProperty("self") Optional<? extends CreateProfileSelf> self,
            @JsonProperty("dashboard") Optional<? extends CreateProfileDashboard> dashboard,
            @JsonProperty("chargebacks") Optional<? extends CreateProfileChargebacks> chargebacks,
            @JsonProperty("methods") Optional<? extends CreateProfileMethods> methods,
            @JsonProperty("payments") Optional<? extends CreateProfilePayments> payments,
            @JsonProperty("refunds") Optional<? extends CreateProfileRefunds> refunds,
            @JsonProperty("checkoutPreviewUrl") Optional<? extends CheckoutPreviewUrl> checkoutPreviewUrl,
            @JsonProperty("documentation") Optional<? extends CreateProfileDocumentation> documentation) {
        Utils.checkNotNull(self, "self");
        Utils.checkNotNull(dashboard, "dashboard");
        Utils.checkNotNull(chargebacks, "chargebacks");
        Utils.checkNotNull(methods, "methods");
        Utils.checkNotNull(payments, "payments");
        Utils.checkNotNull(refunds, "refunds");
        Utils.checkNotNull(checkoutPreviewUrl, "checkoutPreviewUrl");
        Utils.checkNotNull(documentation, "documentation");
        this.self = self;
        this.dashboard = dashboard;
        this.chargebacks = chargebacks;
        this.methods = methods;
        this.payments = payments;
        this.refunds = refunds;
        this.checkoutPreviewUrl = checkoutPreviewUrl;
        this.documentation = documentation;
    }
    
    public CreateProfileLinks() {
        this(Optional.empty(), Optional.empty(), Optional.empty(),
            Optional.empty(), Optional.empty(), Optional.empty(),
            Optional.empty(), Optional.empty());
    }

    /**
     * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<CreateProfileSelf> self() {
        return (Optional<CreateProfileSelf>) self;
    }

    /**
     * Link to the profile in the Mollie dashboard.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<CreateProfileDashboard> dashboard() {
        return (Optional<CreateProfileDashboard>) dashboard;
    }

    /**
     * The API resource URL of the chargebacks that belong to this profile.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<CreateProfileChargebacks> chargebacks() {
        return (Optional<CreateProfileChargebacks>) chargebacks;
    }

    /**
     * The API resource URL of the methods that are enabled for this profile.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<CreateProfileMethods> methods() {
        return (Optional<CreateProfileMethods>) methods;
    }

    /**
     * The API resource URL of the payments that belong to this profile.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<CreateProfilePayments> payments() {
        return (Optional<CreateProfilePayments>) payments;
    }

    /**
     * The API resource URL of the refunds that belong to this profile.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<CreateProfileRefunds> refunds() {
        return (Optional<CreateProfileRefunds>) refunds;
    }

    /**
     * The hosted checkout preview URL. You need to be logged in to access this page.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<CheckoutPreviewUrl> checkoutPreviewUrl() {
        return (Optional<CheckoutPreviewUrl>) checkoutPreviewUrl;
    }

    /**
     * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<CreateProfileDocumentation> documentation() {
        return (Optional<CreateProfileDocumentation>) documentation;
    }

    public static Builder builder() {
        return new Builder();
    }


    /**
     * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
     */
    public CreateProfileLinks withSelf(CreateProfileSelf self) {
        Utils.checkNotNull(self, "self");
        this.self = Optional.ofNullable(self);
        return this;
    }


    /**
     * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
     */
    public CreateProfileLinks withSelf(Optional<? extends CreateProfileSelf> self) {
        Utils.checkNotNull(self, "self");
        this.self = self;
        return this;
    }

    /**
     * Link to the profile in the Mollie dashboard.
     */
    public CreateProfileLinks withDashboard(CreateProfileDashboard dashboard) {
        Utils.checkNotNull(dashboard, "dashboard");
        this.dashboard = Optional.ofNullable(dashboard);
        return this;
    }


    /**
     * Link to the profile in the Mollie dashboard.
     */
    public CreateProfileLinks withDashboard(Optional<? extends CreateProfileDashboard> dashboard) {
        Utils.checkNotNull(dashboard, "dashboard");
        this.dashboard = dashboard;
        return this;
    }

    /**
     * The API resource URL of the chargebacks that belong to this profile.
     */
    public CreateProfileLinks withChargebacks(CreateProfileChargebacks chargebacks) {
        Utils.checkNotNull(chargebacks, "chargebacks");
        this.chargebacks = Optional.ofNullable(chargebacks);
        return this;
    }


    /**
     * The API resource URL of the chargebacks that belong to this profile.
     */
    public CreateProfileLinks withChargebacks(Optional<? extends CreateProfileChargebacks> chargebacks) {
        Utils.checkNotNull(chargebacks, "chargebacks");
        this.chargebacks = chargebacks;
        return this;
    }

    /**
     * The API resource URL of the methods that are enabled for this profile.
     */
    public CreateProfileLinks withMethods(CreateProfileMethods methods) {
        Utils.checkNotNull(methods, "methods");
        this.methods = Optional.ofNullable(methods);
        return this;
    }


    /**
     * The API resource URL of the methods that are enabled for this profile.
     */
    public CreateProfileLinks withMethods(Optional<? extends CreateProfileMethods> methods) {
        Utils.checkNotNull(methods, "methods");
        this.methods = methods;
        return this;
    }

    /**
     * The API resource URL of the payments that belong to this profile.
     */
    public CreateProfileLinks withPayments(CreateProfilePayments payments) {
        Utils.checkNotNull(payments, "payments");
        this.payments = Optional.ofNullable(payments);
        return this;
    }


    /**
     * The API resource URL of the payments that belong to this profile.
     */
    public CreateProfileLinks withPayments(Optional<? extends CreateProfilePayments> payments) {
        Utils.checkNotNull(payments, "payments");
        this.payments = payments;
        return this;
    }

    /**
     * The API resource URL of the refunds that belong to this profile.
     */
    public CreateProfileLinks withRefunds(CreateProfileRefunds refunds) {
        Utils.checkNotNull(refunds, "refunds");
        this.refunds = Optional.ofNullable(refunds);
        return this;
    }


    /**
     * The API resource URL of the refunds that belong to this profile.
     */
    public CreateProfileLinks withRefunds(Optional<? extends CreateProfileRefunds> refunds) {
        Utils.checkNotNull(refunds, "refunds");
        this.refunds = refunds;
        return this;
    }

    /**
     * The hosted checkout preview URL. You need to be logged in to access this page.
     */
    public CreateProfileLinks withCheckoutPreviewUrl(CheckoutPreviewUrl checkoutPreviewUrl) {
        Utils.checkNotNull(checkoutPreviewUrl, "checkoutPreviewUrl");
        this.checkoutPreviewUrl = Optional.ofNullable(checkoutPreviewUrl);
        return this;
    }


    /**
     * The hosted checkout preview URL. You need to be logged in to access this page.
     */
    public CreateProfileLinks withCheckoutPreviewUrl(Optional<? extends CheckoutPreviewUrl> checkoutPreviewUrl) {
        Utils.checkNotNull(checkoutPreviewUrl, "checkoutPreviewUrl");
        this.checkoutPreviewUrl = checkoutPreviewUrl;
        return this;
    }

    /**
     * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
     */
    public CreateProfileLinks withDocumentation(CreateProfileDocumentation documentation) {
        Utils.checkNotNull(documentation, "documentation");
        this.documentation = Optional.ofNullable(documentation);
        return this;
    }


    /**
     * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
     */
    public CreateProfileLinks withDocumentation(Optional<? extends CreateProfileDocumentation> documentation) {
        Utils.checkNotNull(documentation, "documentation");
        this.documentation = documentation;
        return this;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        CreateProfileLinks other = (CreateProfileLinks) o;
        return 
            Utils.enhancedDeepEquals(this.self, other.self) &&
            Utils.enhancedDeepEquals(this.dashboard, other.dashboard) &&
            Utils.enhancedDeepEquals(this.chargebacks, other.chargebacks) &&
            Utils.enhancedDeepEquals(this.methods, other.methods) &&
            Utils.enhancedDeepEquals(this.payments, other.payments) &&
            Utils.enhancedDeepEquals(this.refunds, other.refunds) &&
            Utils.enhancedDeepEquals(this.checkoutPreviewUrl, other.checkoutPreviewUrl) &&
            Utils.enhancedDeepEquals(this.documentation, other.documentation);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            self, dashboard, chargebacks,
            methods, payments, refunds,
            checkoutPreviewUrl, documentation);
    }
    
    @Override
    public String toString() {
        return Utils.toString(CreateProfileLinks.class,
                "self", self,
                "dashboard", dashboard,
                "chargebacks", chargebacks,
                "methods", methods,
                "payments", payments,
                "refunds", refunds,
                "checkoutPreviewUrl", checkoutPreviewUrl,
                "documentation", documentation);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private Optional<? extends CreateProfileSelf> self = Optional.empty();

        private Optional<? extends CreateProfileDashboard> dashboard = Optional.empty();

        private Optional<? extends CreateProfileChargebacks> chargebacks = Optional.empty();

        private Optional<? extends CreateProfileMethods> methods = Optional.empty();

        private Optional<? extends CreateProfilePayments> payments = Optional.empty();

        private Optional<? extends CreateProfileRefunds> refunds = Optional.empty();

        private Optional<? extends CheckoutPreviewUrl> checkoutPreviewUrl = Optional.empty();

        private Optional<? extends CreateProfileDocumentation> documentation = Optional.empty();

        private Builder() {
          // force use of static builder() method
        }


        /**
         * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
         */
        public Builder self(CreateProfileSelf self) {
            Utils.checkNotNull(self, "self");
            this.self = Optional.ofNullable(self);
            return this;
        }

        /**
         * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
         */
        public Builder self(Optional<? extends CreateProfileSelf> self) {
            Utils.checkNotNull(self, "self");
            this.self = self;
            return this;
        }


        /**
         * Link to the profile in the Mollie dashboard.
         */
        public Builder dashboard(CreateProfileDashboard dashboard) {
            Utils.checkNotNull(dashboard, "dashboard");
            this.dashboard = Optional.ofNullable(dashboard);
            return this;
        }

        /**
         * Link to the profile in the Mollie dashboard.
         */
        public Builder dashboard(Optional<? extends CreateProfileDashboard> dashboard) {
            Utils.checkNotNull(dashboard, "dashboard");
            this.dashboard = dashboard;
            return this;
        }


        /**
         * The API resource URL of the chargebacks that belong to this profile.
         */
        public Builder chargebacks(CreateProfileChargebacks chargebacks) {
            Utils.checkNotNull(chargebacks, "chargebacks");
            this.chargebacks = Optional.ofNullable(chargebacks);
            return this;
        }

        /**
         * The API resource URL of the chargebacks that belong to this profile.
         */
        public Builder chargebacks(Optional<? extends CreateProfileChargebacks> chargebacks) {
            Utils.checkNotNull(chargebacks, "chargebacks");
            this.chargebacks = chargebacks;
            return this;
        }


        /**
         * The API resource URL of the methods that are enabled for this profile.
         */
        public Builder methods(CreateProfileMethods methods) {
            Utils.checkNotNull(methods, "methods");
            this.methods = Optional.ofNullable(methods);
            return this;
        }

        /**
         * The API resource URL of the methods that are enabled for this profile.
         */
        public Builder methods(Optional<? extends CreateProfileMethods> methods) {
            Utils.checkNotNull(methods, "methods");
            this.methods = methods;
            return this;
        }


        /**
         * The API resource URL of the payments that belong to this profile.
         */
        public Builder payments(CreateProfilePayments payments) {
            Utils.checkNotNull(payments, "payments");
            this.payments = Optional.ofNullable(payments);
            return this;
        }

        /**
         * The API resource URL of the payments that belong to this profile.
         */
        public Builder payments(Optional<? extends CreateProfilePayments> payments) {
            Utils.checkNotNull(payments, "payments");
            this.payments = payments;
            return this;
        }


        /**
         * The API resource URL of the refunds that belong to this profile.
         */
        public Builder refunds(CreateProfileRefunds refunds) {
            Utils.checkNotNull(refunds, "refunds");
            this.refunds = Optional.ofNullable(refunds);
            return this;
        }

        /**
         * The API resource URL of the refunds that belong to this profile.
         */
        public Builder refunds(Optional<? extends CreateProfileRefunds> refunds) {
            Utils.checkNotNull(refunds, "refunds");
            this.refunds = refunds;
            return this;
        }


        /**
         * The hosted checkout preview URL. You need to be logged in to access this page.
         */
        public Builder checkoutPreviewUrl(CheckoutPreviewUrl checkoutPreviewUrl) {
            Utils.checkNotNull(checkoutPreviewUrl, "checkoutPreviewUrl");
            this.checkoutPreviewUrl = Optional.ofNullable(checkoutPreviewUrl);
            return this;
        }

        /**
         * The hosted checkout preview URL. You need to be logged in to access this page.
         */
        public Builder checkoutPreviewUrl(Optional<? extends CheckoutPreviewUrl> checkoutPreviewUrl) {
            Utils.checkNotNull(checkoutPreviewUrl, "checkoutPreviewUrl");
            this.checkoutPreviewUrl = checkoutPreviewUrl;
            return this;
        }


        /**
         * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
         */
        public Builder documentation(CreateProfileDocumentation documentation) {
            Utils.checkNotNull(documentation, "documentation");
            this.documentation = Optional.ofNullable(documentation);
            return this;
        }

        /**
         * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
         */
        public Builder documentation(Optional<? extends CreateProfileDocumentation> documentation) {
            Utils.checkNotNull(documentation, "documentation");
            this.documentation = documentation;
            return this;
        }

        public CreateProfileLinks build() {

            return new CreateProfileLinks(
                self, dashboard, chargebacks,
                methods, payments, refunds,
                checkoutPreviewUrl, documentation);
        }

    }
}
