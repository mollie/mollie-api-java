/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.mollie.mollie.models.operations;

import com.fasterxml.jackson.annotation.JsonValue;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;

/**
 * ListSettlementPaymentsSequenceType
 * 
 * <p>**Only relevant for recurring payments.**
 * 
 * <p>Indicate which part of a recurring sequence this payment is for.
 * 
 * <p>Recurring payments can only take place if a mandate is available. A common way to establish such a mandate is
 * through a `first` payment. With a `first` payment, the customer agrees to automatic recurring charges taking place
 * on their account in the future.
 * 
 * <p>If set to `recurring`, the customer's card is charged automatically.
 * 
 * <p>Defaults to `oneoff`, which is a regular non-recurring payment.
 * 
 * <p>For PayPal payments, recurring is only possible if your connected PayPal account allows it. You can call our
 * [Methods API](list-methods) with parameter `sequenceType: first` to discover which payment methods on your account
 * are set up correctly for recurring payments.
 */
public enum ListSettlementPaymentsSequenceType {
    ONEOFF("oneoff"),
    FIRST("first"),
    RECURRING("recurring");

    @JsonValue
    private final String value;

    ListSettlementPaymentsSequenceType(String value) {
        this.value = value;
    }
    
    public String value() {
        return value;
    }
    
    public static Optional<ListSettlementPaymentsSequenceType> fromValue(String value) {
        for (ListSettlementPaymentsSequenceType o: ListSettlementPaymentsSequenceType.values()) {
            if (Objects.deepEquals(o.value, value)) {
                return Optional.of(o);
            }
        }
        return Optional.empty();
    }
}

