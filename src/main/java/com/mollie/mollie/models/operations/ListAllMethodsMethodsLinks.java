/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.mollie.mollie.models.operations;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.mollie.mollie.utils.Utils;
import java.lang.Override;
import java.lang.String;
import java.lang.SuppressWarnings;
import java.util.Optional;

/**
 * ListAllMethodsMethodsLinks
 * 
 * <p>An object with several relevant URLs. Every URL object will contain an `href` and a `type` field.
 */
public class ListAllMethodsMethodsLinks {

    /**
     * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
     */
    @JsonProperty("self")
    private ListAllMethodsMethodsSelf self;

    /**
     * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("documentation")
    private Optional<? extends ListAllMethodsMethodsDocumentation> documentation;

    @JsonCreator
    public ListAllMethodsMethodsLinks(
            @JsonProperty("self") ListAllMethodsMethodsSelf self,
            @JsonProperty("documentation") Optional<? extends ListAllMethodsMethodsDocumentation> documentation) {
        Utils.checkNotNull(self, "self");
        Utils.checkNotNull(documentation, "documentation");
        this.self = self;
        this.documentation = documentation;
    }
    
    public ListAllMethodsMethodsLinks(
            ListAllMethodsMethodsSelf self) {
        this(self, Optional.empty());
    }

    /**
     * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
     */
    @JsonIgnore
    public ListAllMethodsMethodsSelf self() {
        return self;
    }

    /**
     * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<ListAllMethodsMethodsDocumentation> documentation() {
        return (Optional<ListAllMethodsMethodsDocumentation>) documentation;
    }

    public final static Builder builder() {
        return new Builder();
    }    

    /**
     * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
     */
    public ListAllMethodsMethodsLinks withSelf(ListAllMethodsMethodsSelf self) {
        Utils.checkNotNull(self, "self");
        this.self = self;
        return this;
    }

    /**
     * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
     */
    public ListAllMethodsMethodsLinks withDocumentation(ListAllMethodsMethodsDocumentation documentation) {
        Utils.checkNotNull(documentation, "documentation");
        this.documentation = Optional.ofNullable(documentation);
        return this;
    }

    /**
     * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
     */
    public ListAllMethodsMethodsLinks withDocumentation(Optional<? extends ListAllMethodsMethodsDocumentation> documentation) {
        Utils.checkNotNull(documentation, "documentation");
        this.documentation = documentation;
        return this;
    }

    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ListAllMethodsMethodsLinks other = (ListAllMethodsMethodsLinks) o;
        return 
            Utils.enhancedDeepEquals(this.self, other.self) &&
            Utils.enhancedDeepEquals(this.documentation, other.documentation);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            self,
            documentation);
    }
    
    @Override
    public String toString() {
        return Utils.toString(ListAllMethodsMethodsLinks.class,
                "self", self,
                "documentation", documentation);
    }
    
    public final static class Builder {
 
        private ListAllMethodsMethodsSelf self;
 
        private Optional<? extends ListAllMethodsMethodsDocumentation> documentation = Optional.empty();
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
         */
        public Builder self(ListAllMethodsMethodsSelf self) {
            Utils.checkNotNull(self, "self");
            this.self = self;
            return this;
        }

        /**
         * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
         */
        public Builder documentation(ListAllMethodsMethodsDocumentation documentation) {
            Utils.checkNotNull(documentation, "documentation");
            this.documentation = Optional.ofNullable(documentation);
            return this;
        }

        /**
         * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
         */
        public Builder documentation(Optional<? extends ListAllMethodsMethodsDocumentation> documentation) {
            Utils.checkNotNull(documentation, "documentation");
            this.documentation = documentation;
            return this;
        }
        
        public ListAllMethodsMethodsLinks build() {
            return new ListAllMethodsMethodsLinks(
                self,
                documentation);
        }
    }
}
