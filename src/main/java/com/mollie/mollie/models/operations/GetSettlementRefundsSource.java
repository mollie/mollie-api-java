/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.mollie.mollie.models.operations;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.mollie.mollie.utils.Utils;
import java.lang.Override;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;

/**
 * GetSettlementRefundsSource
 * 
 * <p>Where the funds will be pulled back from.
 */
public class GetSettlementRefundsSource {

    /**
     * Required for source type `organization`. The ID of the connected organization the funds should be pulled back from.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("organizationId")
    private Optional<String> organizationId;

    @JsonCreator
    public GetSettlementRefundsSource(
            @JsonProperty("organizationId") Optional<String> organizationId) {
        Utils.checkNotNull(organizationId, "organizationId");
        this.organizationId = organizationId;
    }
    
    public GetSettlementRefundsSource() {
        this(Optional.empty());
    }

    /**
     * Required for source type `organization`. The ID of the connected organization the funds should be pulled back from.
     */
    @JsonIgnore
    public Optional<String> organizationId() {
        return organizationId;
    }

    public final static Builder builder() {
        return new Builder();
    }    

    /**
     * Required for source type `organization`. The ID of the connected organization the funds should be pulled back from.
     */
    public GetSettlementRefundsSource withOrganizationId(String organizationId) {
        Utils.checkNotNull(organizationId, "organizationId");
        this.organizationId = Optional.ofNullable(organizationId);
        return this;
    }

    /**
     * Required for source type `organization`. The ID of the connected organization the funds should be pulled back from.
     */
    public GetSettlementRefundsSource withOrganizationId(Optional<String> organizationId) {
        Utils.checkNotNull(organizationId, "organizationId");
        this.organizationId = organizationId;
        return this;
    }

    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        GetSettlementRefundsSource other = (GetSettlementRefundsSource) o;
        return 
            Objects.deepEquals(this.organizationId, other.organizationId);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            organizationId);
    }
    
    @Override
    public String toString() {
        return Utils.toString(GetSettlementRefundsSource.class,
                "organizationId", organizationId);
    }
    
    public final static class Builder {
 
        private Optional<String> organizationId = Optional.empty();
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * Required for source type `organization`. The ID of the connected organization the funds should be pulled back from.
         */
        public Builder organizationId(String organizationId) {
            Utils.checkNotNull(organizationId, "organizationId");
            this.organizationId = Optional.ofNullable(organizationId);
            return this;
        }

        /**
         * Required for source type `organization`. The ID of the connected organization the funds should be pulled back from.
         */
        public Builder organizationId(Optional<String> organizationId) {
            Utils.checkNotNull(organizationId, "organizationId");
            this.organizationId = organizationId;
            return this;
        }
        
        public GetSettlementRefundsSource build() {
            return new GetSettlementRefundsSource(
                organizationId);
        }
    }
}
