/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.mollie.mollie.models.operations;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.mollie.mollie.utils.Utils;
import java.lang.Override;
import java.lang.String;

/**
 * GetSettlementPaymentsCheckout
 * 
 * <p>The URL your customer should visit to make the payment. This is where you should redirect the customer to.
 */
public class GetSettlementPaymentsCheckout {
    /**
     * The actual URL string.
     */
    @JsonProperty("href")
    private String href;

    /**
     * The content type of the page or endpoint the URL points to.
     */
    @JsonProperty("type")
    private String type;

    @JsonCreator
    public GetSettlementPaymentsCheckout(
            @JsonProperty("href") String href,
            @JsonProperty("type") String type) {
        Utils.checkNotNull(href, "href");
        Utils.checkNotNull(type, "type");
        this.href = href;
        this.type = type;
    }

    /**
     * The actual URL string.
     */
    @JsonIgnore
    public String href() {
        return href;
    }

    /**
     * The content type of the page or endpoint the URL points to.
     */
    @JsonIgnore
    public String type() {
        return type;
    }

    public static Builder builder() {
        return new Builder();
    }


    /**
     * The actual URL string.
     */
    public GetSettlementPaymentsCheckout withHref(String href) {
        Utils.checkNotNull(href, "href");
        this.href = href;
        return this;
    }

    /**
     * The content type of the page or endpoint the URL points to.
     */
    public GetSettlementPaymentsCheckout withType(String type) {
        Utils.checkNotNull(type, "type");
        this.type = type;
        return this;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        GetSettlementPaymentsCheckout other = (GetSettlementPaymentsCheckout) o;
        return 
            Utils.enhancedDeepEquals(this.href, other.href) &&
            Utils.enhancedDeepEquals(this.type, other.type);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            href, type);
    }
    
    @Override
    public String toString() {
        return Utils.toString(GetSettlementPaymentsCheckout.class,
                "href", href,
                "type", type);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private String href;

        private String type;

        private Builder() {
          // force use of static builder() method
        }


        /**
         * The actual URL string.
         */
        public Builder href(String href) {
            Utils.checkNotNull(href, "href");
            this.href = href;
            return this;
        }


        /**
         * The content type of the page or endpoint the URL points to.
         */
        public Builder type(String type) {
            Utils.checkNotNull(type, "type");
            this.type = type;
            return this;
        }

        public GetSettlementPaymentsCheckout build() {

            return new GetSettlementPaymentsCheckout(
                href, type);
        }

    }
}
