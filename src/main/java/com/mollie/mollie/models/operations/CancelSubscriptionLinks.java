/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.mollie.mollie.models.operations;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.mollie.mollie.utils.Utils;
import java.lang.Override;
import java.lang.String;
import java.lang.SuppressWarnings;
import java.util.Optional;
import org.openapitools.jackson.nullable.JsonNullable;

/**
 * CancelSubscriptionLinks
 * 
 * <p>An object with several relevant URLs. Every URL object will contain an `href` and a `type` field.
 */
public class CancelSubscriptionLinks {
    /**
     * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("self")
    private Optional<? extends CancelSubscriptionSelf> self;

    /**
     * The API resource URL of the [customer](get-customer) this subscription was created for.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("customer")
    private JsonNullable<? extends CancelSubscriptionCustomer> customer;

    /**
     * The API resource URL of the [mandate](get-mandate) this subscription was created for.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("mandate")
    private JsonNullable<? extends CancelSubscriptionMandate> mandate;

    /**
     * The API resource URL of the [profile](get-profile) this subscription was created for.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("profile")
    private JsonNullable<? extends CancelSubscriptionProfile> profile;

    /**
     * The API resource URL of the [payments](list-payments) created for this subscription. Omitted if no such
     * payments exist (yet).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("payments")
    private JsonNullable<? extends CancelSubscriptionPayments> payments;

    /**
     * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("documentation")
    private Optional<? extends CancelSubscriptionDocumentation> documentation;

    @JsonCreator
    public CancelSubscriptionLinks(
            @JsonProperty("self") Optional<? extends CancelSubscriptionSelf> self,
            @JsonProperty("customer") JsonNullable<? extends CancelSubscriptionCustomer> customer,
            @JsonProperty("mandate") JsonNullable<? extends CancelSubscriptionMandate> mandate,
            @JsonProperty("profile") JsonNullable<? extends CancelSubscriptionProfile> profile,
            @JsonProperty("payments") JsonNullable<? extends CancelSubscriptionPayments> payments,
            @JsonProperty("documentation") Optional<? extends CancelSubscriptionDocumentation> documentation) {
        Utils.checkNotNull(self, "self");
        Utils.checkNotNull(customer, "customer");
        Utils.checkNotNull(mandate, "mandate");
        Utils.checkNotNull(profile, "profile");
        Utils.checkNotNull(payments, "payments");
        Utils.checkNotNull(documentation, "documentation");
        this.self = self;
        this.customer = customer;
        this.mandate = mandate;
        this.profile = profile;
        this.payments = payments;
        this.documentation = documentation;
    }
    
    public CancelSubscriptionLinks() {
        this(Optional.empty(), JsonNullable.undefined(), JsonNullable.undefined(),
            JsonNullable.undefined(), JsonNullable.undefined(), Optional.empty());
    }

    /**
     * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<CancelSubscriptionSelf> self() {
        return (Optional<CancelSubscriptionSelf>) self;
    }

    /**
     * The API resource URL of the [customer](get-customer) this subscription was created for.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public JsonNullable<CancelSubscriptionCustomer> customer() {
        return (JsonNullable<CancelSubscriptionCustomer>) customer;
    }

    /**
     * The API resource URL of the [mandate](get-mandate) this subscription was created for.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public JsonNullable<CancelSubscriptionMandate> mandate() {
        return (JsonNullable<CancelSubscriptionMandate>) mandate;
    }

    /**
     * The API resource URL of the [profile](get-profile) this subscription was created for.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public JsonNullable<CancelSubscriptionProfile> profile() {
        return (JsonNullable<CancelSubscriptionProfile>) profile;
    }

    /**
     * The API resource URL of the [payments](list-payments) created for this subscription. Omitted if no such
     * payments exist (yet).
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public JsonNullable<CancelSubscriptionPayments> payments() {
        return (JsonNullable<CancelSubscriptionPayments>) payments;
    }

    /**
     * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<CancelSubscriptionDocumentation> documentation() {
        return (Optional<CancelSubscriptionDocumentation>) documentation;
    }

    public static Builder builder() {
        return new Builder();
    }


    /**
     * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
     */
    public CancelSubscriptionLinks withSelf(CancelSubscriptionSelf self) {
        Utils.checkNotNull(self, "self");
        this.self = Optional.ofNullable(self);
        return this;
    }


    /**
     * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
     */
    public CancelSubscriptionLinks withSelf(Optional<? extends CancelSubscriptionSelf> self) {
        Utils.checkNotNull(self, "self");
        this.self = self;
        return this;
    }

    /**
     * The API resource URL of the [customer](get-customer) this subscription was created for.
     */
    public CancelSubscriptionLinks withCustomer(CancelSubscriptionCustomer customer) {
        Utils.checkNotNull(customer, "customer");
        this.customer = JsonNullable.of(customer);
        return this;
    }

    /**
     * The API resource URL of the [customer](get-customer) this subscription was created for.
     */
    public CancelSubscriptionLinks withCustomer(JsonNullable<? extends CancelSubscriptionCustomer> customer) {
        Utils.checkNotNull(customer, "customer");
        this.customer = customer;
        return this;
    }

    /**
     * The API resource URL of the [mandate](get-mandate) this subscription was created for.
     */
    public CancelSubscriptionLinks withMandate(CancelSubscriptionMandate mandate) {
        Utils.checkNotNull(mandate, "mandate");
        this.mandate = JsonNullable.of(mandate);
        return this;
    }

    /**
     * The API resource URL of the [mandate](get-mandate) this subscription was created for.
     */
    public CancelSubscriptionLinks withMandate(JsonNullable<? extends CancelSubscriptionMandate> mandate) {
        Utils.checkNotNull(mandate, "mandate");
        this.mandate = mandate;
        return this;
    }

    /**
     * The API resource URL of the [profile](get-profile) this subscription was created for.
     */
    public CancelSubscriptionLinks withProfile(CancelSubscriptionProfile profile) {
        Utils.checkNotNull(profile, "profile");
        this.profile = JsonNullable.of(profile);
        return this;
    }

    /**
     * The API resource URL of the [profile](get-profile) this subscription was created for.
     */
    public CancelSubscriptionLinks withProfile(JsonNullable<? extends CancelSubscriptionProfile> profile) {
        Utils.checkNotNull(profile, "profile");
        this.profile = profile;
        return this;
    }

    /**
     * The API resource URL of the [payments](list-payments) created for this subscription. Omitted if no such
     * payments exist (yet).
     */
    public CancelSubscriptionLinks withPayments(CancelSubscriptionPayments payments) {
        Utils.checkNotNull(payments, "payments");
        this.payments = JsonNullable.of(payments);
        return this;
    }

    /**
     * The API resource URL of the [payments](list-payments) created for this subscription. Omitted if no such
     * payments exist (yet).
     */
    public CancelSubscriptionLinks withPayments(JsonNullable<? extends CancelSubscriptionPayments> payments) {
        Utils.checkNotNull(payments, "payments");
        this.payments = payments;
        return this;
    }

    /**
     * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
     */
    public CancelSubscriptionLinks withDocumentation(CancelSubscriptionDocumentation documentation) {
        Utils.checkNotNull(documentation, "documentation");
        this.documentation = Optional.ofNullable(documentation);
        return this;
    }


    /**
     * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
     */
    public CancelSubscriptionLinks withDocumentation(Optional<? extends CancelSubscriptionDocumentation> documentation) {
        Utils.checkNotNull(documentation, "documentation");
        this.documentation = documentation;
        return this;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        CancelSubscriptionLinks other = (CancelSubscriptionLinks) o;
        return 
            Utils.enhancedDeepEquals(this.self, other.self) &&
            Utils.enhancedDeepEquals(this.customer, other.customer) &&
            Utils.enhancedDeepEquals(this.mandate, other.mandate) &&
            Utils.enhancedDeepEquals(this.profile, other.profile) &&
            Utils.enhancedDeepEquals(this.payments, other.payments) &&
            Utils.enhancedDeepEquals(this.documentation, other.documentation);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            self, customer, mandate,
            profile, payments, documentation);
    }
    
    @Override
    public String toString() {
        return Utils.toString(CancelSubscriptionLinks.class,
                "self", self,
                "customer", customer,
                "mandate", mandate,
                "profile", profile,
                "payments", payments,
                "documentation", documentation);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private Optional<? extends CancelSubscriptionSelf> self = Optional.empty();

        private JsonNullable<? extends CancelSubscriptionCustomer> customer = JsonNullable.undefined();

        private JsonNullable<? extends CancelSubscriptionMandate> mandate = JsonNullable.undefined();

        private JsonNullable<? extends CancelSubscriptionProfile> profile = JsonNullable.undefined();

        private JsonNullable<? extends CancelSubscriptionPayments> payments = JsonNullable.undefined();

        private Optional<? extends CancelSubscriptionDocumentation> documentation = Optional.empty();

        private Builder() {
          // force use of static builder() method
        }


        /**
         * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
         */
        public Builder self(CancelSubscriptionSelf self) {
            Utils.checkNotNull(self, "self");
            this.self = Optional.ofNullable(self);
            return this;
        }

        /**
         * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
         */
        public Builder self(Optional<? extends CancelSubscriptionSelf> self) {
            Utils.checkNotNull(self, "self");
            this.self = self;
            return this;
        }


        /**
         * The API resource URL of the [customer](get-customer) this subscription was created for.
         */
        public Builder customer(CancelSubscriptionCustomer customer) {
            Utils.checkNotNull(customer, "customer");
            this.customer = JsonNullable.of(customer);
            return this;
        }

        /**
         * The API resource URL of the [customer](get-customer) this subscription was created for.
         */
        public Builder customer(JsonNullable<? extends CancelSubscriptionCustomer> customer) {
            Utils.checkNotNull(customer, "customer");
            this.customer = customer;
            return this;
        }


        /**
         * The API resource URL of the [mandate](get-mandate) this subscription was created for.
         */
        public Builder mandate(CancelSubscriptionMandate mandate) {
            Utils.checkNotNull(mandate, "mandate");
            this.mandate = JsonNullable.of(mandate);
            return this;
        }

        /**
         * The API resource URL of the [mandate](get-mandate) this subscription was created for.
         */
        public Builder mandate(JsonNullable<? extends CancelSubscriptionMandate> mandate) {
            Utils.checkNotNull(mandate, "mandate");
            this.mandate = mandate;
            return this;
        }


        /**
         * The API resource URL of the [profile](get-profile) this subscription was created for.
         */
        public Builder profile(CancelSubscriptionProfile profile) {
            Utils.checkNotNull(profile, "profile");
            this.profile = JsonNullable.of(profile);
            return this;
        }

        /**
         * The API resource URL of the [profile](get-profile) this subscription was created for.
         */
        public Builder profile(JsonNullable<? extends CancelSubscriptionProfile> profile) {
            Utils.checkNotNull(profile, "profile");
            this.profile = profile;
            return this;
        }


        /**
         * The API resource URL of the [payments](list-payments) created for this subscription. Omitted if no such
         * payments exist (yet).
         */
        public Builder payments(CancelSubscriptionPayments payments) {
            Utils.checkNotNull(payments, "payments");
            this.payments = JsonNullable.of(payments);
            return this;
        }

        /**
         * The API resource URL of the [payments](list-payments) created for this subscription. Omitted if no such
         * payments exist (yet).
         */
        public Builder payments(JsonNullable<? extends CancelSubscriptionPayments> payments) {
            Utils.checkNotNull(payments, "payments");
            this.payments = payments;
            return this;
        }


        /**
         * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
         */
        public Builder documentation(CancelSubscriptionDocumentation documentation) {
            Utils.checkNotNull(documentation, "documentation");
            this.documentation = Optional.ofNullable(documentation);
            return this;
        }

        /**
         * In v2 endpoints, URLs are commonly represented as objects with an `href` and `type` field.
         */
        public Builder documentation(Optional<? extends CancelSubscriptionDocumentation> documentation) {
            Utils.checkNotNull(documentation, "documentation");
            this.documentation = documentation;
            return this;
        }

        public CancelSubscriptionLinks build() {

            return new CancelSubscriptionLinks(
                self, customer, mandate,
                profile, payments, documentation);
        }

    }
}
