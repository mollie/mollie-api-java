/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.mollie.mollie;

import static com.mollie.mollie.operations.Operations.RequestOperation;

import com.mollie.mollie.models.operations.ListCapabilitiesRequest;
import com.mollie.mollie.models.operations.ListCapabilitiesRequestBuilder;
import com.mollie.mollie.models.operations.ListCapabilitiesResponse;
import com.mollie.mollie.operations.ListCapabilities;
import com.mollie.mollie.utils.Options;
import java.lang.Exception;
import java.lang.String;
import java.util.Optional;


public class Capabilities {
    private final SDKConfiguration sdkConfiguration;
    private final AsyncCapabilities asyncSDK;

    Capabilities(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
        this.asyncSDK = new AsyncCapabilities(this, sdkConfiguration);
    }

    /**
     * Switches to the async SDK.
     * 
     * @return The async SDK
     */
    public AsyncCapabilities async() {
        return asyncSDK;
    }

    /**
     * List capabilities
     * 
     * <p>&gt; ðŸš§ Beta feature
     * &gt;
     * &gt; This feature is currently in beta testing, and the final specification may still change.
     * 
     * <p>Retrieve a list of capabilities for an organization.
     * 
     * <p>This API provides detailed insights into the specific requirements and status of each client's onboarding journey.
     * 
     * <p>Capabilities are at the organization level, indicating if the organization can perform a given capability.
     * 
     * <p>For payments, regardless them being at the profile level, the capability is listed at the organization level.
     * This means that if at least one of the clients's profiles can receive payments,
     * the payments capability is enabled, communicating that the organization can indeed receive payments.
     * 
     * @return The call builder
     */
    public ListCapabilitiesRequestBuilder list() {
        return new ListCapabilitiesRequestBuilder(sdkConfiguration);
    }

    /**
     * List capabilities
     * 
     * <p>&gt; ðŸš§ Beta feature
     * &gt;
     * &gt; This feature is currently in beta testing, and the final specification may still change.
     * 
     * <p>Retrieve a list of capabilities for an organization.
     * 
     * <p>This API provides detailed insights into the specific requirements and status of each client's onboarding journey.
     * 
     * <p>Capabilities are at the organization level, indicating if the organization can perform a given capability.
     * 
     * <p>For payments, regardless them being at the profile level, the capability is listed at the organization level.
     * This means that if at least one of the clients's profiles can receive payments,
     * the payments capability is enabled, communicating that the organization can indeed receive payments.
     * 
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public ListCapabilitiesResponse listDirect() throws Exception {
        return list(Optional.empty(), Optional.empty());
    }

    /**
     * List capabilities
     * 
     * <p>&gt; ðŸš§ Beta feature
     * &gt;
     * &gt; This feature is currently in beta testing, and the final specification may still change.
     * 
     * <p>Retrieve a list of capabilities for an organization.
     * 
     * <p>This API provides detailed insights into the specific requirements and status of each client's onboarding journey.
     * 
     * <p>Capabilities are at the organization level, indicating if the organization can perform a given capability.
     * 
     * <p>For payments, regardless them being at the profile level, the capability is listed at the organization level.
     * This means that if at least one of the clients's profiles can receive payments,
     * the payments capability is enabled, communicating that the organization can indeed receive payments.
     * 
     * @param idempotencyKey A unique key to ensure idempotent requests. This key should be a UUID v4 string.
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public ListCapabilitiesResponse list(Optional<String> idempotencyKey, Optional<Options> options) throws Exception {
        ListCapabilitiesRequest request =
            ListCapabilitiesRequest
                .builder()
                .idempotencyKey(idempotencyKey)
                .build();
        RequestOperation<ListCapabilitiesRequest, ListCapabilitiesResponse> operation
              = new ListCapabilities.Sync(sdkConfiguration, options);
        return operation.handleResponse(operation.doRequest(request));
    }

}
