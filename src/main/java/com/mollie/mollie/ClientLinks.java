/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.mollie.mollie;

import static com.mollie.mollie.operations.Operations.RequestOperation;

import com.mollie.mollie.models.operations.CreateClientLinkRequestBody;
import com.mollie.mollie.models.operations.CreateClientLinkRequestBuilder;
import com.mollie.mollie.models.operations.CreateClientLinkResponse;
import com.mollie.mollie.operations.CreateClientLinkOperation;
import com.mollie.mollie.utils.Options;
import java.lang.Exception;
import java.util.Optional;


public class ClientLinks {
    private final SDKConfiguration sdkConfiguration;

    ClientLinks(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
    }

    /**
     * Create client link
     * 
     * <p>Link a new or existing organization to your OAuth application, in effect creating a new client. The response contains a `clientLink` where you should redirect your customer to.
     * 
     * <p>## Redirecting the Customer
     * 
     * <p>The `clientLink` URL behaves similarly to a standard OAuth authorization URL. Therefore, after receiving the `clientLink` URL in the API response, you need to **append the following query parameters** *before* redirecting the customer:
     * 
     * <p>* `client_id` _string (required)_
     * 
     * <p>  The client ID you received when you registered your OAuth app. The ID starts with `app_`. For example: `app_abc123qwerty`.
     * 
     * <p>* `state` _string (required)_
     * 
     * <p>  A random string **generated by your app** to prevent CSRF attacks. This will be reflected in the `state` query parameter when the user returns to the `redirect_uri` after authorizing your app.
     * 
     * <p>* `scope` _string (required)_
     * 
     * <p>  A space-separated list of permissions ('scopes') your app requires. See the [permissions list](https://docs.mollie.com/docs/connect-permissions) for more information about the available scopes.
     * 
     * <p>  We recommend at least : `onboarding.read onboarding.write`
     * 
     * <p>* `approval_prompt` _string_
     * 
     * <p>  Can be set to `force` to force showing the consent screen to the merchant, *even when it is not necessary*. If you force an approval prompt and the user creates a new authorization, previously active authorizations will be revoked.
     * 
     * <p>  Possible values: `auto` `force` (default: `auto`)
     * 
     * <p>### Example of a Complete Redirect URL
     * 
     * <p>After adding the above url parameter your URL will look something like this and you can redirect your client to this page:
     * 
     * <p>``` https://my.mollie.com/dashboard/client-link/{id}?client_id={your_client_id}&amp;state={unique_state}&amp;scope=onboarding.read%20onboarding.write ```
     * 
     * <p>## Error Handling
     * 
     * <p>Error handling is also dealt with similar to the [Authorize](https://docs.mollie.com/reference/authorize) endpoint: the customer is redirected back to your app's redirect URL with the `error` and `error_description` parameters added to the URL.
     * 
     * <p>&gt; ðŸš§
     * &gt;
     * &gt; A client link must be used within 30 days of creation. After that period, it will expire and you will need to create a new client link.
     * 
     * <p>&gt; ðŸ”‘ Access with
     * &gt;
     * &gt; [Access token with **clients.write**](/reference/authentication)
     * 
     * @return The call builder
     */
    public CreateClientLinkRequestBuilder create() {
        return new CreateClientLinkRequestBuilder(sdkConfiguration);
    }

    /**
     * Create client link
     * 
     * <p>Link a new or existing organization to your OAuth application, in effect creating a new client. The response contains a `clientLink` where you should redirect your customer to.
     * 
     * <p>## Redirecting the Customer
     * 
     * <p>The `clientLink` URL behaves similarly to a standard OAuth authorization URL. Therefore, after receiving the `clientLink` URL in the API response, you need to **append the following query parameters** *before* redirecting the customer:
     * 
     * <p>* `client_id` _string (required)_
     * 
     * <p>  The client ID you received when you registered your OAuth app. The ID starts with `app_`. For example: `app_abc123qwerty`.
     * 
     * <p>* `state` _string (required)_
     * 
     * <p>  A random string **generated by your app** to prevent CSRF attacks. This will be reflected in the `state` query parameter when the user returns to the `redirect_uri` after authorizing your app.
     * 
     * <p>* `scope` _string (required)_
     * 
     * <p>  A space-separated list of permissions ('scopes') your app requires. See the [permissions list](https://docs.mollie.com/docs/connect-permissions) for more information about the available scopes.
     * 
     * <p>  We recommend at least : `onboarding.read onboarding.write`
     * 
     * <p>* `approval_prompt` _string_
     * 
     * <p>  Can be set to `force` to force showing the consent screen to the merchant, *even when it is not necessary*. If you force an approval prompt and the user creates a new authorization, previously active authorizations will be revoked.
     * 
     * <p>  Possible values: `auto` `force` (default: `auto`)
     * 
     * <p>### Example of a Complete Redirect URL
     * 
     * <p>After adding the above url parameter your URL will look something like this and you can redirect your client to this page:
     * 
     * <p>``` https://my.mollie.com/dashboard/client-link/{id}?client_id={your_client_id}&amp;state={unique_state}&amp;scope=onboarding.read%20onboarding.write ```
     * 
     * <p>## Error Handling
     * 
     * <p>Error handling is also dealt with similar to the [Authorize](https://docs.mollie.com/reference/authorize) endpoint: the customer is redirected back to your app's redirect URL with the `error` and `error_description` parameters added to the URL.
     * 
     * <p>&gt; ðŸš§
     * &gt;
     * &gt; A client link must be used within 30 days of creation. After that period, it will expire and you will need to create a new client link.
     * 
     * <p>&gt; ðŸ”‘ Access with
     * &gt;
     * &gt; [Access token with **clients.write**](/reference/authentication)
     * 
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public CreateClientLinkResponse createDirect() throws Exception {
        return create(Optional.empty(), Optional.empty());
    }

    /**
     * Create client link
     * 
     * <p>Link a new or existing organization to your OAuth application, in effect creating a new client. The response contains a `clientLink` where you should redirect your customer to.
     * 
     * <p>## Redirecting the Customer
     * 
     * <p>The `clientLink` URL behaves similarly to a standard OAuth authorization URL. Therefore, after receiving the `clientLink` URL in the API response, you need to **append the following query parameters** *before* redirecting the customer:
     * 
     * <p>* `client_id` _string (required)_
     * 
     * <p>  The client ID you received when you registered your OAuth app. The ID starts with `app_`. For example: `app_abc123qwerty`.
     * 
     * <p>* `state` _string (required)_
     * 
     * <p>  A random string **generated by your app** to prevent CSRF attacks. This will be reflected in the `state` query parameter when the user returns to the `redirect_uri` after authorizing your app.
     * 
     * <p>* `scope` _string (required)_
     * 
     * <p>  A space-separated list of permissions ('scopes') your app requires. See the [permissions list](https://docs.mollie.com/docs/connect-permissions) for more information about the available scopes.
     * 
     * <p>  We recommend at least : `onboarding.read onboarding.write`
     * 
     * <p>* `approval_prompt` _string_
     * 
     * <p>  Can be set to `force` to force showing the consent screen to the merchant, *even when it is not necessary*. If you force an approval prompt and the user creates a new authorization, previously active authorizations will be revoked.
     * 
     * <p>  Possible values: `auto` `force` (default: `auto`)
     * 
     * <p>### Example of a Complete Redirect URL
     * 
     * <p>After adding the above url parameter your URL will look something like this and you can redirect your client to this page:
     * 
     * <p>``` https://my.mollie.com/dashboard/client-link/{id}?client_id={your_client_id}&amp;state={unique_state}&amp;scope=onboarding.read%20onboarding.write ```
     * 
     * <p>## Error Handling
     * 
     * <p>Error handling is also dealt with similar to the [Authorize](https://docs.mollie.com/reference/authorize) endpoint: the customer is redirected back to your app's redirect URL with the `error` and `error_description` parameters added to the URL.
     * 
     * <p>&gt; ðŸš§
     * &gt;
     * &gt; A client link must be used within 30 days of creation. After that period, it will expire and you will need to create a new client link.
     * 
     * <p>&gt; ðŸ”‘ Access with
     * &gt;
     * &gt; [Access token with **clients.write**](/reference/authentication)
     * 
     * @param request The request object containing all the parameters for the API call.
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public CreateClientLinkResponse create(Optional<? extends CreateClientLinkRequestBody> request, Optional<Options> options) throws Exception {
        RequestOperation<Optional<? extends CreateClientLinkRequestBody>, CreateClientLinkResponse> operation
              = new CreateClientLinkOperation(sdkConfiguration, options);
        return operation.handleResponse(operation.doRequest(request));
    }

}
