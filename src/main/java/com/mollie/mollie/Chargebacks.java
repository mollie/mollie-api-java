/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.mollie.mollie;

import static com.mollie.mollie.operations.Operations.RequestOperation;

import com.mollie.mollie.models.operations.GetChargebackQueryParamEmbed;
import com.mollie.mollie.models.operations.GetChargebackRequest;
import com.mollie.mollie.models.operations.GetChargebackRequestBuilder;
import com.mollie.mollie.models.operations.GetChargebackResponse;
import com.mollie.mollie.models.operations.ListAllChargebacksRequest;
import com.mollie.mollie.models.operations.ListAllChargebacksRequestBuilder;
import com.mollie.mollie.models.operations.ListAllChargebacksResponse;
import com.mollie.mollie.models.operations.ListChargebacksRequest;
import com.mollie.mollie.models.operations.ListChargebacksRequestBuilder;
import com.mollie.mollie.models.operations.ListChargebacksResponse;
import com.mollie.mollie.operations.GetChargebackOperation;
import com.mollie.mollie.operations.ListAllChargebacksOperation;
import com.mollie.mollie.operations.ListChargebacksOperation;
import com.mollie.mollie.utils.Options;
import java.lang.Boolean;
import java.lang.Exception;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import org.openapitools.jackson.nullable.JsonNullable;


public class Chargebacks {
    private final SDKConfiguration sdkConfiguration;

    Chargebacks(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
    }

    /**
     * List payment chargebacks
     * 
     * <p>Retrieve the chargebacks initiated for a specific payment.
     * 
     * <p>The results are paginated.
     * 
     * <p>&gt; ðŸ”‘ Access with
     * &gt;
     * &gt; [API key](/reference/authentication)
     * &gt;
     * &gt; [Access token with **payments.read**](/reference/authentication)
     * 
     * @return The call builder
     */
    public ListChargebacksRequestBuilder list() {
        return new ListChargebacksRequestBuilder(sdkConfiguration);
    }

    /**
     * List payment chargebacks
     * 
     * <p>Retrieve the chargebacks initiated for a specific payment.
     * 
     * <p>The results are paginated.
     * 
     * <p>&gt; ðŸ”‘ Access with
     * &gt;
     * &gt; [API key](/reference/authentication)
     * &gt;
     * &gt; [Access token with **payments.read**](/reference/authentication)
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public ListChargebacksResponse list(ListChargebacksRequest request) throws Exception {
        return list(request, Optional.empty());
    }

    /**
     * List payment chargebacks
     * 
     * <p>Retrieve the chargebacks initiated for a specific payment.
     * 
     * <p>The results are paginated.
     * 
     * <p>&gt; ðŸ”‘ Access with
     * &gt;
     * &gt; [API key](/reference/authentication)
     * &gt;
     * &gt; [Access token with **payments.read**](/reference/authentication)
     * 
     * @param request The request object containing all the parameters for the API call.
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public ListChargebacksResponse list(
            ListChargebacksRequest request,
            Optional<Options> options) throws Exception {
        RequestOperation<ListChargebacksRequest, ListChargebacksResponse> operation
              = new ListChargebacksOperation(
                 sdkConfiguration,
                 options);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * Get payment chargeback
     * 
     * <p>Retrieve a single payment chargeback by its ID and the ID of its parent payment.
     * 
     * <p>&gt; ðŸ”‘ Access with
     * &gt;
     * &gt; [API key](/reference/authentication)
     * &gt;
     * &gt; [Access token with **payments.read**](/reference/authentication)
     * 
     * @return The call builder
     */
    public GetChargebackRequestBuilder get() {
        return new GetChargebackRequestBuilder(sdkConfiguration);
    }

    /**
     * Get payment chargeback
     * 
     * <p>Retrieve a single payment chargeback by its ID and the ID of its parent payment.
     * 
     * <p>&gt; ðŸ”‘ Access with
     * &gt;
     * &gt; [API key](/reference/authentication)
     * &gt;
     * &gt; [Access token with **payments.read**](/reference/authentication)
     * 
     * @param paymentId Provide the ID of the related payment.
     * @param chargebackId Provide the ID of the related chargeback.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public GetChargebackResponse get(
            String paymentId,
            String chargebackId) throws Exception {
        return get(paymentId, chargebackId, JsonNullable.undefined(), JsonNullable.undefined(), Optional.empty());
    }

    /**
     * Get payment chargeback
     * 
     * <p>Retrieve a single payment chargeback by its ID and the ID of its parent payment.
     * 
     * <p>&gt; ðŸ”‘ Access with
     * &gt;
     * &gt; [API key](/reference/authentication)
     * &gt;
     * &gt; [Access token with **payments.read**](/reference/authentication)
     * 
     * @param paymentId Provide the ID of the related payment.
     * @param chargebackId Provide the ID of the related chargeback.
     * @param embed This endpoint allows you to embed additional information via the `embed` query string parameter.
     * @param testmode Most API credentials are specifically created for either live mode or test mode. In those cases the `testmode` query parameter can be omitted. For organization-level credentials such as OAuth access tokens, you can enable test mode by setting the `testmode` query parameter to `true`.
     *         
     *         Test entities cannot be retrieved when the endpoint is set to live mode, and vice versa.
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public GetChargebackResponse get(
            String paymentId,
            String chargebackId,
            JsonNullable<? extends GetChargebackQueryParamEmbed> embed,
            JsonNullable<Boolean> testmode,
            Optional<Options> options) throws Exception {
        GetChargebackRequest request =
            GetChargebackRequest
                .builder()
                .paymentId(paymentId)
                .chargebackId(chargebackId)
                .embed(embed)
                .testmode(testmode)
                .build();
        RequestOperation<GetChargebackRequest, GetChargebackResponse> operation
              = new GetChargebackOperation(
                 sdkConfiguration,
                 options);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * List all chargebacks
     * 
     * <p>Retrieve all chargebacks initiated for all your payments.
     * 
     * <p>The results are paginated.
     * 
     * <p>&gt; ðŸ”‘ Access with
     * &gt;
     * &gt; [API key](/reference/authentication)
     * &gt;
     * &gt; [Access token with **payments.read**](/reference/authentication)
     * 
     * @return The call builder
     */
    public ListAllChargebacksRequestBuilder all() {
        return new ListAllChargebacksRequestBuilder(sdkConfiguration);
    }

    /**
     * List all chargebacks
     * 
     * <p>Retrieve all chargebacks initiated for all your payments.
     * 
     * <p>The results are paginated.
     * 
     * <p>&gt; ðŸ”‘ Access with
     * &gt;
     * &gt; [API key](/reference/authentication)
     * &gt;
     * &gt; [Access token with **payments.read**](/reference/authentication)
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public ListAllChargebacksResponse all(ListAllChargebacksRequest request) throws Exception {
        return all(request, Optional.empty());
    }

    /**
     * List all chargebacks
     * 
     * <p>Retrieve all chargebacks initiated for all your payments.
     * 
     * <p>The results are paginated.
     * 
     * <p>&gt; ðŸ”‘ Access with
     * &gt;
     * &gt; [API key](/reference/authentication)
     * &gt;
     * &gt; [Access token with **payments.read**](/reference/authentication)
     * 
     * @param request The request object containing all the parameters for the API call.
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public ListAllChargebacksResponse all(
            ListAllChargebacksRequest request,
            Optional<Options> options) throws Exception {
        RequestOperation<ListAllChargebacksRequest, ListAllChargebacksResponse> operation
              = new ListAllChargebacksOperation(
                 sdkConfiguration,
                 options);
        return operation.handleResponse(operation.doRequest(request));
    }

}
