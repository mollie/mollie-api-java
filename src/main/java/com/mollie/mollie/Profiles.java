/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.mollie.mollie;

import static com.mollie.mollie.operations.Operations.RequestOperation;

import com.mollie.mollie.models.components.EntityProfile;
import com.mollie.mollie.models.operations.CreateProfileRequest;
import com.mollie.mollie.models.operations.CreateProfileRequestBuilder;
import com.mollie.mollie.models.operations.CreateProfileResponse;
import com.mollie.mollie.models.operations.DeleteProfileRequest;
import com.mollie.mollie.models.operations.DeleteProfileRequestBuilder;
import com.mollie.mollie.models.operations.DeleteProfileResponse;
import com.mollie.mollie.models.operations.GetCurrentProfileRequest;
import com.mollie.mollie.models.operations.GetCurrentProfileRequestBuilder;
import com.mollie.mollie.models.operations.GetCurrentProfileResponse;
import com.mollie.mollie.models.operations.GetProfileRequest;
import com.mollie.mollie.models.operations.GetProfileRequestBuilder;
import com.mollie.mollie.models.operations.GetProfileResponse;
import com.mollie.mollie.models.operations.ListProfilesRequest;
import com.mollie.mollie.models.operations.ListProfilesRequestBuilder;
import com.mollie.mollie.models.operations.ListProfilesResponse;
import com.mollie.mollie.models.operations.UpdateProfileRequest;
import com.mollie.mollie.models.operations.UpdateProfileRequestBody;
import com.mollie.mollie.models.operations.UpdateProfileRequestBuilder;
import com.mollie.mollie.models.operations.UpdateProfileResponse;
import com.mollie.mollie.operations.CreateProfile;
import com.mollie.mollie.operations.DeleteProfile;
import com.mollie.mollie.operations.GetCurrentProfile;
import com.mollie.mollie.operations.GetProfile;
import com.mollie.mollie.operations.ListProfiles;
import com.mollie.mollie.operations.UpdateProfile;
import com.mollie.mollie.utils.Headers;
import com.mollie.mollie.utils.Options;
import java.lang.Boolean;
import java.lang.Long;
import java.lang.String;
import java.util.Optional;
import org.openapitools.jackson.nullable.JsonNullable;


public class Profiles {
    private static final Headers _headers = Headers.EMPTY;
    private final SDKConfiguration sdkConfiguration;
    private final AsyncProfiles asyncSDK;

    Profiles(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
        this.asyncSDK = new AsyncProfiles(this, sdkConfiguration);
    }

    /**
     * Switches to the async SDK.
     * 
     * @return The async SDK
     */
    public AsyncProfiles async() {
        return asyncSDK;
    }

    /**
     * Create profile
     * 
     * <p>Create a profile to process payments on.
     * 
     * <p>Profiles are required for payment processing. Normally they are created via the Mollie dashboard.
     * Alternatively, you
     * can use this endpoint to automate profile creation.
     * 
     * @return The call builder
     */
    public CreateProfileRequestBuilder create() {
        return new CreateProfileRequestBuilder(sdkConfiguration);
    }

    /**
     * Create profile
     * 
     * <p>Create a profile to process payments on.
     * 
     * <p>Profiles are required for payment processing. Normally they are created via the Mollie dashboard.
     * Alternatively, you
     * can use this endpoint to automate profile creation.
     * 
     * @param entityProfile 
     * @return The response from the API call
     * @throws RuntimeException subclass if the API call fails
     */
    public CreateProfileResponse create(EntityProfile entityProfile) {
        return create(Optional.empty(), entityProfile, Optional.empty());
    }

    /**
     * Create profile
     * 
     * <p>Create a profile to process payments on.
     * 
     * <p>Profiles are required for payment processing. Normally they are created via the Mollie dashboard.
     * Alternatively, you
     * can use this endpoint to automate profile creation.
     * 
     * @param idempotencyKey A unique key to ensure idempotent requests. This key should be a UUID v4 string.
     * @param entityProfile 
     * @param options additional options
     * @return The response from the API call
     * @throws RuntimeException subclass if the API call fails
     */
    public CreateProfileResponse create(
            Optional<String> idempotencyKey, EntityProfile entityProfile,
            Optional<Options> options) {
        CreateProfileRequest request =
            CreateProfileRequest
                .builder()
                .idempotencyKey(idempotencyKey)
                .entityProfile(entityProfile)
                .build();
        RequestOperation<CreateProfileRequest, CreateProfileResponse> operation
              = new CreateProfile.Sync(sdkConfiguration, options, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * List profiles
     * 
     * <p>Retrieve a list of all of your profiles.
     * 
     * <p>The results are paginated.
     * 
     * @return The call builder
     */
    public ListProfilesRequestBuilder list() {
        return new ListProfilesRequestBuilder(sdkConfiguration);
    }

    /**
     * List profiles
     * 
     * <p>Retrieve a list of all of your profiles.
     * 
     * <p>The results are paginated.
     * 
     * @return The response from the API call
     * @throws RuntimeException subclass if the API call fails
     */
    public ListProfilesResponse listDirect() {
        return list(JsonNullable.undefined(), JsonNullable.undefined(), Optional.empty(),
            Optional.empty());
    }

    /**
     * List profiles
     * 
     * <p>Retrieve a list of all of your profiles.
     * 
     * <p>The results are paginated.
     * 
     * @param from Provide an ID to start the result set from the item with the given ID and onwards. This allows you to paginate the
     *         result set.
     * @param limit The maximum number of items to return. Defaults to 50 items.
     * @param idempotencyKey A unique key to ensure idempotent requests. This key should be a UUID v4 string.
     * @param options additional options
     * @return The response from the API call
     * @throws RuntimeException subclass if the API call fails
     */
    public ListProfilesResponse list(
            JsonNullable<String> from, JsonNullable<Long> limit,
            Optional<String> idempotencyKey, Optional<Options> options) {
        ListProfilesRequest request =
            ListProfilesRequest
                .builder()
                .from(from)
                .limit(limit)
                .idempotencyKey(idempotencyKey)
                .build();
        RequestOperation<ListProfilesRequest, ListProfilesResponse> operation
              = new ListProfiles.Sync(sdkConfiguration, options, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Get profile
     * 
     * <p>Retrieve a single profile by its ID.
     * 
     * @return The call builder
     */
    public GetProfileRequestBuilder get() {
        return new GetProfileRequestBuilder(sdkConfiguration);
    }

    /**
     * Get profile
     * 
     * <p>Retrieve a single profile by its ID.
     * 
     * @param id Provide the ID of the item you want to perform this operation on.
     * @return The response from the API call
     * @throws RuntimeException subclass if the API call fails
     */
    public GetProfileResponse get(String id) {
        return get(id, JsonNullable.undefined(), Optional.empty(),
            Optional.empty());
    }

    /**
     * Get profile
     * 
     * <p>Retrieve a single profile by its ID.
     * 
     * @param id Provide the ID of the item you want to perform this operation on.
     * @param testmode Most API credentials are specifically created for either live mode or test mode. In those cases the `testmode` query
     *         parameter can be omitted. For organization-level credentials such as OAuth access tokens, you can enable test mode by
     *         setting the `testmode` query parameter to `true`.
     *         
     *         Test entities cannot be retrieved when the endpoint is set to live mode, and vice versa.
     * @param idempotencyKey A unique key to ensure idempotent requests. This key should be a UUID v4 string.
     * @param options additional options
     * @return The response from the API call
     * @throws RuntimeException subclass if the API call fails
     */
    public GetProfileResponse get(
            String id, JsonNullable<Boolean> testmode,
            Optional<String> idempotencyKey, Optional<Options> options) {
        GetProfileRequest request =
            GetProfileRequest
                .builder()
                .id(id)
                .testmode(testmode)
                .idempotencyKey(idempotencyKey)
                .build();
        RequestOperation<GetProfileRequest, GetProfileResponse> operation
              = new GetProfile.Sync(sdkConfiguration, options, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update profile
     * 
     * <p>Update an existing profile.
     * 
     * <p>Profiles are required for payment processing. Normally they are created and updated via the Mollie
     * dashboard.
     * Alternatively, you can use this endpoint to automate profile management.
     * 
     * @return The call builder
     */
    public UpdateProfileRequestBuilder update() {
        return new UpdateProfileRequestBuilder(sdkConfiguration);
    }

    /**
     * Update profile
     * 
     * <p>Update an existing profile.
     * 
     * <p>Profiles are required for payment processing. Normally they are created and updated via the Mollie
     * dashboard.
     * Alternatively, you can use this endpoint to automate profile management.
     * 
     * @param id Provide the ID of the item you want to perform this operation on.
     * @param requestBody 
     * @return The response from the API call
     * @throws RuntimeException subclass if the API call fails
     */
    public UpdateProfileResponse update(String id, UpdateProfileRequestBody requestBody) {
        return update(id, Optional.empty(), requestBody,
            Optional.empty());
    }

    /**
     * Update profile
     * 
     * <p>Update an existing profile.
     * 
     * <p>Profiles are required for payment processing. Normally they are created and updated via the Mollie
     * dashboard.
     * Alternatively, you can use this endpoint to automate profile management.
     * 
     * @param id Provide the ID of the item you want to perform this operation on.
     * @param idempotencyKey A unique key to ensure idempotent requests. This key should be a UUID v4 string.
     * @param requestBody 
     * @param options additional options
     * @return The response from the API call
     * @throws RuntimeException subclass if the API call fails
     */
    public UpdateProfileResponse update(
            String id, Optional<String> idempotencyKey,
            UpdateProfileRequestBody requestBody, Optional<Options> options) {
        UpdateProfileRequest request =
            UpdateProfileRequest
                .builder()
                .id(id)
                .idempotencyKey(idempotencyKey)
                .requestBody(requestBody)
                .build();
        RequestOperation<UpdateProfileRequest, UpdateProfileResponse> operation
              = new UpdateProfile.Sync(sdkConfiguration, options, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Delete profile
     * 
     * <p>Delete a profile. A deleted profile and its related credentials can no longer be used for accepting
     * payments.
     * 
     * @return The call builder
     */
    public DeleteProfileRequestBuilder delete() {
        return new DeleteProfileRequestBuilder(sdkConfiguration);
    }

    /**
     * Delete profile
     * 
     * <p>Delete a profile. A deleted profile and its related credentials can no longer be used for accepting
     * payments.
     * 
     * @param id Provide the ID of the item you want to perform this operation on.
     * @return The response from the API call
     * @throws RuntimeException subclass if the API call fails
     */
    public DeleteProfileResponse delete(String id) {
        return delete(id, Optional.empty(), Optional.empty());
    }

    /**
     * Delete profile
     * 
     * <p>Delete a profile. A deleted profile and its related credentials can no longer be used for accepting
     * payments.
     * 
     * @param id Provide the ID of the item you want to perform this operation on.
     * @param idempotencyKey A unique key to ensure idempotent requests. This key should be a UUID v4 string.
     * @param options additional options
     * @return The response from the API call
     * @throws RuntimeException subclass if the API call fails
     */
    public DeleteProfileResponse delete(
            String id, Optional<String> idempotencyKey,
            Optional<Options> options) {
        DeleteProfileRequest request =
            DeleteProfileRequest
                .builder()
                .id(id)
                .idempotencyKey(idempotencyKey)
                .build();
        RequestOperation<DeleteProfileRequest, DeleteProfileResponse> operation
              = new DeleteProfile.Sync(sdkConfiguration, options, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Get current profile
     * 
     * <p>Retrieve the currently authenticated profile. A convenient alias of the [Get profile](get-profile)
     * endpoint.
     * 
     * <p>For a complete reference of the profile object, refer to the [Get profile](get-profile) endpoint
     * documentation.
     * 
     * @return The call builder
     */
    public GetCurrentProfileRequestBuilder getCurrent() {
        return new GetCurrentProfileRequestBuilder(sdkConfiguration);
    }

    /**
     * Get current profile
     * 
     * <p>Retrieve the currently authenticated profile. A convenient alias of the [Get profile](get-profile)
     * endpoint.
     * 
     * <p>For a complete reference of the profile object, refer to the [Get profile](get-profile) endpoint
     * documentation.
     * 
     * @return The response from the API call
     * @throws RuntimeException subclass if the API call fails
     */
    public GetCurrentProfileResponse getCurrentDirect() {
        return getCurrent(Optional.empty(), Optional.empty());
    }

    /**
     * Get current profile
     * 
     * <p>Retrieve the currently authenticated profile. A convenient alias of the [Get profile](get-profile)
     * endpoint.
     * 
     * <p>For a complete reference of the profile object, refer to the [Get profile](get-profile) endpoint
     * documentation.
     * 
     * @param idempotencyKey A unique key to ensure idempotent requests. This key should be a UUID v4 string.
     * @param options additional options
     * @return The response from the API call
     * @throws RuntimeException subclass if the API call fails
     */
    public GetCurrentProfileResponse getCurrent(Optional<String> idempotencyKey, Optional<Options> options) {
        GetCurrentProfileRequest request =
            GetCurrentProfileRequest
                .builder()
                .idempotencyKey(idempotencyKey)
                .build();
        RequestOperation<GetCurrentProfileRequest, GetCurrentProfileResponse> operation
              = new GetCurrentProfile.Sync(sdkConfiguration, options, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

}
